{
 "kind": "blogger#postList",
 "items": [
  {


   "kind": "blogger#post",
   "id": "4417890795661581140",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-10-01T13:28:00+02:00",
   "updated": "2015-10-01T13:28:40+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQzNjk4OTIwMTMyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/10/camunda-740-alpha2-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4417890795661581140",
   "title": "Camunda 7.4.0-Alpha2 released",
   "content": "Today we release Camunda BPM 7.4.0-Alpha2. This is the second alpha release previewing the upcoming 7.4.0 Release.<br />\n<br />\nThe highlights of this release are:<br />\n<ul><li>Improved DMN Engine<br />\n<ul><li>Hit Policies</li>\n<li>Data Types</li>\n</ul></li>\n<li>New Cockpit Features,<br />\n<ul><li>Auditing of DMN Decisions,</li>\n<li>BPMN Heat Map,</li>\n</ul></li>\n<li>Improved BPMN Engine<br />\n<ul><li>Support for BPMN Escalation</li>\n<li>Improved Asynchronous Execution Efficiency</li>\n<li>SLF4j Logging</li>\n<li>Faster Deployments</li>\n</ul></li>\n<li>Improved CMMN Engine<br />\n<ul><li>Add Support for Repetition Rule</li>\n</ul></li>\n<li>Support for Tomcat 8</li>\n<li>New Documenation</li>\n<li>Many Bugfixes</li>\n</ul><br />\nOverall more than 170 issues were closed. See <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=14194\">complete Release Notes in Jira</a>.<br />\n<div style=\"background-color: #f4f6f4; border-radius: 3px; border: 1px solid #e4e6e4; margin: 30px auto; max-width: 500px; overflow: hidden;\"><h2 style=\"-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; float: left; margin: 0; padding: 15px; position: relative; text-align: center; width: 300px;\"><a href=\"http://camunda.org/download#latest\" style=\"display: block; font-size: 28px; line-height: 32px; text-align: center;\">Download For Free</a>   </h2><h3 style=\"-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; float: right; margin: 0; padding: 15px; position: relative; text-align: center; width: 200px;\"><a href=\"https://registry.hub.docker.com/u/camunda/camunda-bpm-platform/\" style=\"display: block; font-size: 20px; line-height: 32px; text-align: center;\">Run with Docker</a>   </h3></div><a name='more'></a><h2>DMN Auditing in Cockpit</h2><br />\nCockpit now provides a preview of the support for DMN-based Decision Auditing.<br />\n<br />\nThe dashboard displays now all deployed decision tables. Selecting a decision table opens the Decision Definition View:<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-IKthxtJdZ74/Vgvp-IK8avI/AAAAAAAADeY/YJY6hqJcmkw/s1600/cockpit-dmn-1.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"272\" src=\"http://4.bp.blogspot.com/-IKthxtJdZ74/Vgvp-IK8avI/AAAAAAAADeY/YJY6hqJcmkw/s400/cockpit-dmn-1.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Decision Definition View</td></tr>\n</tbody></table><br />\nThis view displays the decision table itself and displays aggregated information of all past executions of the decision table (decision instances).<br />\nCurrently, only a list of all decision instances is displayed. However, much more features can be added here in the future, such as searching for decision instances,<br />\ndisplaying aggregated information about how often each rule in the table fired, and so on.<br />\n<br />\nSelecting an individual decision instance opens the Decitions Instance View:<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/--3o2cYGLqIg/Vgvq72E0jZI/AAAAAAAADek/mx7WgmoX5rA/s1600/cockpit-dmn-2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"272\" src=\"http://3.bp.blogspot.com/--3o2cYGLqIg/Vgvq72E0jZI/AAAAAAAADek/mx7WgmoX5rA/s400/cockpit-dmn-2.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Decision Instance View</td></tr>\n</tbody></table>The Decision Instance view provides information about an individual execution of the decision (table). The focus of this view is to allow users to inspect an individual decision, understanding which rules evaluated to true (and why?) and what output was produced. At the moment it is possible to inspect the input and output values of the table. This view can will be enhanced by visualizing as much information as possible inside the table itself, including highlighting of fired rules etc.<br />\n<br />\n<h2>BPMN Heatmap in Cockpit</h2><br />\n(This feature is only available in the Enterprise Edition.)<br />\n<br />\nCockpit now features a BPMN Heat Map which gives a quick overview about hot spots in a BPMN process in the blink of an eye:<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-g6DjLA6aMtM/VgvpTrpmXtI/AAAAAAAADeQ/c8_qYnnrZtg/s1600/cockpit-heatmap.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"272\" src=\"http://4.bp.blogspot.com/-g6DjLA6aMtM/VgvpTrpmXtI/AAAAAAAADeQ/c8_qYnnrZtg/s400/cockpit-heatmap.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">BPMN Heat Map</td></tr>\n</tbody></table><br />\nThe idea is that activities and sequence flows are colored based on the number of times they have been executed. Activities which have been executed many times are colored in a brighter color than activities which were executed fewer times. Or in other words, some activities are \"hotter\" than others :)<br />\n<br />\nHow the history plugin came together is actually a nice success story for \"community-driven innovation\":<br />\n<br />\nSince quite a while, our man Jakob has been preaching about how BPMN allows intuitive visualization of statistics and data around process execution. \"Even something like a heatmap, you know like the weather man uses, is easily possible\", he used to say. At some point Matthias Wiedemann -at the time working for our consulting partner Opitz Consulting- actually built a <a href=\"https://github.com/mwiede/camunda-cockpit-plugins/tree/master/cockpit-plugin-heatmap\">BPMN Heatmap as a Community maintained Cockpit Plugin</a>. The plugin was a huge success and everybody wanted to use it. But, since it was a community maintained plugin, people did not always have time to port it to the latest version of Camunda or ensure compatibility with all versions. It also had a lot of limitations around how the visualization was rendered (because it was a proof concept implemenation) and we thus decided to re-iterate on the idea, rewrite the code and add it to cockpit as an out of the box feature.<br />\n<br />\n<h2>Support for BPMN Escalation</h2><br />\nThe Camunda Engine now fully supports <a href=\"https://docs.camunda.org/manual/latest/reference/bpmn20/events/escalation-events/\">BPMN Escalation</a>.<br />\n<br />\n<h2>Improved Asynchronous Execution Efficiency</h2><br />\nAgain, the performance and efficiency of the job executor has been improved. <a href=\"http://blog.camunda.org/2015/09/scaling-camunda-bpm-in-cluster-job.html\">Read all about it in Thorben's Blogpost</a>.<br />\n<br />\n<h2>Support for CMMN Repetition Rule</h2><br />\n<a href=\"https://docs.camunda.org/manual/latest/reference/cmmn10/markers/repetition-rule/\">CMMN Repetition Rule</a> is now supported in CMMN engine. This was a much requested feature and I am very happy that we could add it in these busy DMN times :)<br />\n<br />\n<h2>New Documenation</h2><br />\nWe have completely revamped the whole <a href=\"http://docs.camunda.org/manual/latest\">documentation</a>, improving content, structure and the layout.<br />\n<br />\n<h2>What's up next?</h2><br />\n<ul><li>DMN, DMN, DMN, ... :)</li>\n<li>Process Engine Runtime Repository View in Cockpit,</li>\n<li>Support for reactive Service Task Workers,</li>\n<li>As always, amazing things are happening in <a href=\"http://bpmn.io/\">bpmn.io</a>,</li>\n<li>...</li>\n</ul>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4417890795661581140/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6548021745736178916",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-09-24T18:38:00+02:00",
   "updated": "2015-09-24T18:54:23+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQzMTEzNjYzMzMxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/09/impressions-from-camunda-community-day.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6548021745736178916",
   "title": "Impressions from Camunda Community Day 2015",
   "content": "Or in other words: Our most awesome community day yet!<br />\n<br />\nLast week our annual Camunda Community Day took place. I always enjoy that day very much because it gives me the opportunity to get in touch with community contributors and users. I always learn a lot during these days and I take a lot of engergy away from it.<br />\n<br />\nSame as last year, the Community Day took place here at the Camunda office in exactly the same space in which we normally sit behind our desks and write code.<br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/ITubvBMcKwk\" width=\"560\"></iframe><br />\n<br />\nWe had to limit reservations to 100 (including ourselves). Two things struck me with this: when we announced the date in <a href=\"https://network.camunda.org/meetings/55\">Camunda Network</a>, it was almost instantly sold out, and almost everybody who reserved a seat also showed up. Nastasja tells me that out of 100 reservations only about 10 people did not attend (which is amazing for an event where reservation and attendance is is free) :)<br />\n<a name='more'></a><br />\nThe day was started with two user talk, the first one given by Robert Parker (Australia Post) and Jörg Sauer (Allianz Indonesia). Rob from Australia Post spoke at last year's event too<br />\nand it was interesting to hear him report on their progress and experiences with Camunda in production over the last year. Allianz Indonesia was one of our first customers (starting back in the days with Camunda's predecessor \"Fox\") and it was very interesting to hear about their experiences of using Camunda over more than 3 years now.<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-W4AfsDITPsY/VgQSVDHdbmI/AAAAAAAADak/Fqqiw07_avY/s1600/rob-parker.jpg\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"240\" src=\"http://3.bp.blogspot.com/-W4AfsDITPsY/VgQSVDHdbmI/AAAAAAAADak/Fqqiw07_avY/s320/rob-parker.jpg\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Robert Parker (Australia Post) at Camunda Community Day</td></tr>\n</tbody></table><br />\nNext, Jörn Horstman (Zalando) reported on how Zalando performs <a href=\"https://tech.zalando.com/blog/order-processing-at-scale-with-camunda-slides/\">Order Processing at scale with Camunda BPM</a>. Apparently, whenever you order something at their online shop, a process instance is started. Jörn has blogged about his talk as well.<br />\n<br />\nAfter this we learned from Stan Levine (<a href=\"http://www.contextspace.com/\">Context Space</a>) and how they run <a href=\"https://github.com/camunda/camunda-engine-cassandra\">Camunda on Cassandra</a>. Context Space is working on a Cassandra Persistence Layer which they contributed as a community extension. Since over a year ago Camunda has a pluggable persistence layer and it is really nice to see some community collaboration around this!<br />\n<br />\nNext up was a talk by Adesso AG. The talk focused on how they embedded <a href=\"http://bpmn.io/\">bpmn.io</a>, Camunda's embeddable BPMN modeling toolkit for the browser. Their feedback was great and it showed nicely how you can use bpmn.io to embedd a full bpmn modeler inside a custom application.<br />\n<br />\nAfter this, this year's Camunda Community award was handed to Frank Langelage as an acknowledgement of the many many pull requests he made. Unfortunately I found no better picture of this moment: (I would have preferred a picture where you can see more of Frank and less of myself).<br />\n<br />\n<blockquote class=\"twitter-tweet\" lang=\"en\"><div dir=\"ltr\" lang=\"en\">Our <a href=\"https://twitter.com/hashtag/camunity?src=hash\">#camunity</a> award this year goes to <a href=\"https://twitter.com/langefr\">@langefr</a> - great job frank - thanks for the great community work! <a href=\"https://twitter.com/hashtag/camunda?src=hash\">#camunda</a> <a href=\"http://t.co/7X3BznyNTo\">pic.twitter.com/7X3BznyNTo</a></div>— Bernd Ruecker (@berndruecker) <a href=\"https://twitter.com/berndruecker/status/644504846406709248\">September 17, 2015</a></blockquote><script async=\"\" charset=\"utf-8\" src=\"//platform.twitter.com/widgets.js\"></script><br />\n<br />\nNext up there were a number of talks by Camunda focusing on Spring Boot, Docker, <a href=\"http://bpmn.io/\">bpmn.io</a> the Camunda Roadmap as well as a Hacksession by Nico Rehwaldt, Philip Ossler and myself in which we showed how to use the Camunda Engine in the cloud and how easy it is to implement Service Tasks with Node JS, Java &nbsp;and Akka / Scala as Microservices.<br />\n<br />\nAfter this, finally, Nastasja removed the locks from the fridge and the beers were opended. Later we invited everybody over to \"Brauhaus Südstern\" where the evening ended over beers and \"Haxe\".<br />\n<br />\n<blockquote class=\"twitter-tweet\" lang=\"en\"><div dir=\"ltr\" lang=\"en\"><a href=\"https://twitter.com/hashtag/camunity?src=hash\">#camunity</a> still alive - interesting discussions going on. I love our community :-) <a href=\"http://t.co/8J0hUfhZkK\">pic.twitter.com/8J0hUfhZkK</a></div>— Bernd Ruecker (@berndruecker) <a href=\"https://twitter.com/berndruecker/status/644606611449901056\">September 17, 2015</a></blockquote><br />\nAnd that was our community day! <a href=\"https://network.camunda.org/meetings/55\">Slides are already available in Camunda Network</a>&nbsp;(scroll to the bottom of the page) and Valentin promised that he will publish all the video recordings he made.<br />\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6548021745736178916/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5287133362458235703",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-09-11T15:16:00+02:00",
   "updated": "2015-09-11T15:16:12+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQxOTc3MzcyNDQ2Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/09/scaling-camunda-bpm-in-cluster-job.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5287133362458235703",
   "title": "Scaling Camunda BPM in a Cluster: Job Executors and Coordination",
   "content": "Throughout development of Camunda 7.4, one of our focus points is job executor features and improvements. The <i>job executor</i> is the process engine's component to perform deferred actions, such as executing an intermediate timer event or an asynchronous continuation. Thus it is central in the Camunda architecture and central for scaling the BPM platform in a cluster. In this post we provide insight in job executor behavior and how job executor instances be coordinated by employing a backoff strategy that is part of the upcoming Camunad 7.4.0-alpha2 release.<br />\n<a name='more'></a><br />\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#setting-clustered-job-execution\" id=\"user-content-setting-clustered-job-execution\"><span class=\"octicon octicon-link\"></span></a>Setting: Clustered Job Execution</h2>\nAs pointed out in the previous post on our new <a href=\"http://blog.camunda.org/2015/08/job-prioritization-asynchronous-processing.html\">job prioritization feature</a>, Camunda is widely used by customers in domains where the degree of automation is high, such as insurances or telecommunications. Being nation-wide or even world-wide players, these businesses handle large amounts of process instances and therefore need a BPM platform that scales with their demands. Prior to developing job prioritization we asked customers and community users in a survey to voice their requirements for job processing. In terms of load numbers, we learned that:<br />\n<ul>\n<li>Users process up to 1 million jobs per day.</li>\n<li>Camunda BPM is used in clusters of up to 20 nodes.</li>\n</ul>\n<br />\nWhen setting up a cluster of Camunda BPM nodes, the simplified architecture looks as follows:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-ynFOAI01ah4/VfAeYdpv_NI/AAAAAAAAAEw/KhOfyIEymbY/s1600/Pr%25C3%25A4sentation1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-ynFOAI01ah4/VfAeYdpv_NI/AAAAAAAAAEw/KhOfyIEymbY/s640/Pr%25C3%25A4sentation1.png\" /></a></div>\n<br />\nThere is a central data source that a number of nodes responsible for executing BPMN processes access (side note: we talk about one logical data source; you can still apply replication on database level and horizontal partitioning of process instances to multiple databases). Cluster nodes are not coordinated by a central managing instance or in a peer-to-peer fashion. Instead data is exchanged via the central data source only. Each node runs a job executor instance that continuously polls the central data source for jobs to execute. One such cycle of <i>job acquisition</i> consists of the following steps:<br />\n<ol>\n<li>Select jobs from the job table that are executable (e.g. timer events must be due) and that are supposed to be executed next (e.g. when using job priorities).</li>\n<li>Lock jobs for execution by updating them with a timestamp in the future and a lock owner id. The timestamp guarantees that until it expires no other job executor attempts to acquire, lock, and execute the job.</li>\n<li>Submit the successfully locked jobs for execution to a thread pool.</li>\n</ol>\n<br />\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#problem-parallel-job-acquisition\" id=\"user-content-problem-parallel-job-acquisition\"><span class=\"octicon octicon-link\"></span></a>Problem: Parallel Job Acquisition</h2>\nAs pointed out above, cluster nodes are not actively managed and coordinated. While this makes for a simple architecture in which nodes can be easily added and removed from the cluster, the individual nodes are unaware of each other and in particular acquire jobs independently. That means, two cluster nodes may execute the acquisition cycle in parallel and may select the same jobs during step 1. At step 2, every job can only be locked by only one node. Other parallel locking attempts fail due to the process engine's optimistic locking mechanism. However, this also means that in the worst case an entire acquisition cycle is wasted without locking any jobs.<br />\n<br />\nLet us call this the <i>dining job executors</i>: Executable jobs are like candy in a jar on a table. We want each job executor to take a fair share of sweets in an efficient way. However in the current state, job executors continuously claim to take sweets that were already taken in parallel.<br />\nWe can examine this behavior in practice as well. We set up a Postgres 9.4 database on 2 cores of a 4 GHz machine and three execution nodes using Camunda BPM version 7.4.0-alpha1 running on a different host. We start 50,000 process instances that consist of a single asynchronous continuation resulting in 50,000 jobs ready for execution. We configure each job to artificially execute for 0 to 160 milliseconds which should roughly be in the range of invoking an external system. In addition, we use the new job prioritization feature and assign each job a random priority. The following graph shows the acquisition performance of a single execution node:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-Dfr4-0NTvHk/VfAbpb7ljmI/AAAAAAAAAEc/CVPb8yLHx94/s1600/problem-alpha12.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-Dfr4-0NTvHk/VfAbpb7ljmI/AAAAAAAAAEc/CVPb8yLHx94/s640/problem-alpha12.png\" /></a></div>\nThe graph shows the number of jobs acquired successfully (blue line; steps 1 and 2 of job acquisition succeed) as well as the jobs acquired but failed to lock (orange line; step 1 succeeds, step 2 fails). Already in a cluster of three nodes, we notice that the total number of jobs failed to lock outweighs the number of successfully acquired. This effect becomes worse the larger the cluster grows: When one node acquires jobs, it becomes more likely that any other node acquires the same jobs in parallel and succeeds locking them. While this behavior is not harmful for correct process execution, it wastes execution time and puts additional load on the database.<br />\n<br />\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#improvement-exponential-backoff\" id=\"user-content-improvement-exponential-backoff\"><span class=\"octicon octicon-link\"></span></a>Improvement: Exponential Backoff</h2>\nTo avoid conflicts when locking jobs in steps 1 and 2 of acquisition, overlapping acquisition cycles need to become less likely. This can be done in two ways: First, the time a single cycle takes can be reduced. Second, the interval of cycles can be extended. We followed the second approach to which one solution is <i>exponential backoff</i>. The idea of backoff is that in case of failure to lock jobs a job executor waits for a certain amount of time before performing the next acquisition cycle. In case locking fails continuously the wait time increases exponentially. The number of jobs acquired increases with every increase in wait time as well. This way job acquisition becomes less frequent and ideally a configuration in which all job executor nodes acquire at different, non-overlapping times is reached.<br />\n<br />\nAgain, let us look at an example from practice. In the same cluster setup as before using the latest SNAPSHOT build, we use a backoff configuration with 30 milliseconds initial backoff and 150 milliseconds maximum backoff. Backoff increases by factor 2. Accordingly, the number of jobs acquired per cycle goes from 3 to 48. The resulting graph for one cluster node is:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-4CrtFIz43BM/VfAbT0W1C6I/AAAAAAAAAEY/yCtoyTEJgHw/s1600/improvement-snapshot2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-4CrtFIz43BM/VfAbT0W1C6I/AAAAAAAAAEY/yCtoyTEJgHw/s640/improvement-snapshot2.png\" /></a></div>\nWhile acquisition failures are still present, they are much less frequent than before.<br />\n<br />\nSpeaking in the figure of the dining job executors: The job executors behave gently when they can't get a sweet they want and wait until they can safely reach into the candy jar.<br />\n<br />\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#practice-configuration-and-performance\" id=\"user-content-practice-configuration-and-performance\"><span class=\"octicon octicon-link\"></span></a>Practice: Configuration and Performance</h2>\nAbove we have shown that job acquisition backoff can reduce database load by avoiding unnecessary acquisition cycles. Two questions remain: Is this improvement noticeable in practice? How to find suitable backoff settings?<br />\n<br />\nWhen tweaking job executor configuration settings, it is advisable to do this in a data-driven way. The following should be defined upfront:<br />\n<ul>\n<li>A <i>scenario</i> that resembles realistic workload; this also includes all parameters that are not optimized as part of the benchmark</li>\n<li>A <i>metric of success</i>, i.e. something that indicates whether one setting is better than another</li>\n<li>A <i>parameter</i> that is optimized</li>\n</ul>\nIt is also possible to optimize multiple parameters, however in that case it is advisable to optimize one after the other to be able to attribute improvements to a specific parameter change. We define our benchmark as follows:<br />\n<ul>\n<li> <i>Scenario</i>  <ul>\n<li>50,000 instances of a simple process with one asynchronous service task. The task simulates calling an external service by artificially waiting for a verying amount of time. We draw this time from a normal distribution with a mean of 80 milliseconds and a standard deviation of 25 milliseconds.</li>\n<li>A Postgres 9.4 instance using three cores of a 4 GHz machine serving as the engine database</li>\n<li>The Camunda Tomcat distribution in the versions 7.4.0-alpha1 and the current 7.4.0-SNAPSHOT</li>\n<li>The size of the job queue used by the execution thread pool is 100</li>\n</ul>\n</li>\n<li> <i>Metric of success</i>  <ul>\n<li>Throughput: Measured by the overall duration to process all jobs</li>\n<li>Supplementary metrics: To understand the changes in throughput, we collect the database's CPU usage and <a href=\"http://docs.camunda.org/manual/latest/user-guide/process-engine/metrics/\">statistics of successfully and unsuccessfully locked jobs</a></li>\n</ul>\n</li>\n<li> <i>Parameters</i>  <ul>\n<li>Number of cluster nodes</li>\n<li>Number of jobs to acquire</li>\n<li>Backoff settings</li>\n</ul>\n</li>\n</ul>\n<br />\nAs the first step, we tune the number of cluster nodes until we operate our Postgres instance at full capacity. That level is reached with 5 nodes when there are only marginal improvments in throughput with more nodes due to the database operating with 100% CPU load.<br />\nNext, we see if we can improve the performance with the following settings:<br />\n<ol>\n<li>default alpha1 configuration: 3 jobs acquired per cycle; no backoff (baseline)</li>\n<li>default alpha1 configuration: 48 jobs acquired per cycle; no backoff</li>\n<li>backoff configuration - initial: 50 ms; maximum: 250 ms; increase factor: 2</li>\n<li>backoff configuration - initial: 70 ms; maximum: 350 ms; increase factor: 2</li>\n<li>backoff configuration - initial: 90 ms; maximum: 450 ms; increase factor: 2</li>\n</ol>\n<br />\nNote that all of the backoff configurations imply acquiring 3 jobs initially and 48 jobs with the highest backoff. In terms of throughput, we obtain the following results:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-CDG1Cd8z1vI/VfAb0-vvKjI/AAAAAAAAAEk/-Pt-CN0209g/s1600/throughput.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-CDG1Cd8z1vI/VfAb0-vvKjI/AAAAAAAAAEk/-Pt-CN0209g/s640/throughput.png\" /></a></div>\nAs settings 2 and 5 show the best performance, we notice that acquiring larger chunks of jobs in one acquisition cycle is benefitial in our scenario. Furthermore, we notice only a slight benefit of a configuration with backoff to one without. This can be explained by the way the alpha1 engine deals with the case that the job execution queue is saturated: In such a situation, the job acquisition thread itself begins executing jobs that cannot be submitted. This way, an uncontrolled backoff effect sets in and acquisition automatically becomes less frequent. In case the workload is more heterogenous than in our scenario, it may happen that the acquisition thread executes a rather long running job stalling execution resources that recover meanwhile by not acquiring new jobs. With the upcoming alpha2 release, we have changed this behavior such that the acquisition thread's only responsibility is to acquire jobs.<br />\n<br />\nThis leads to the following conclusions:<br />\n<ul>\n<li>If you use the BPM platform in a high-load scenario where performance is important, consider tweaking the job executor settings.</li>\n<li>Before changing settings, define a suitable benchmark by a realistic scenario, a metric of success, and parameters that you are going to change.</li>\n<li>If you run the job executor on a single machine, the execution queue size and the number of jobs acquired per acquisition cycle are good parameters.</li>\n<li>If you run a cluster, the job acquisition backoff settings are good parameters.</li>\n<li>Backoff reduces the number of acquisition queries and job lock failures, freeing some of your database's processing resources.</li>\n</ul>\n<br />\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#background-reading-and-resources\" id=\"user-content-background-reading-and-resources\"><span class=\"octicon octicon-link\"></span></a>Background Reading and Resources</h2>\nIn order to try out the backoff configuration settings, you may wait for our upcoming alpha2 release or use a <a href=\"https://app.camunda.com/nexus/content/groups/public/org/camunda/bpm/tomcat/camunda-bpm-tomcat/7.4.0-SNAPSHOT/\">nightly SNAPSHOT build</a>. For all the job executor configuration options have a look at our <code>bpm-platform.xml</code> <a href=\"http://docs.camunda.org/manual/latest/reference/deployment-descriptors/tags/job-executor\">deployment descriptor reference</a>. For engine and job acquisition metrics, the <a href=\"http://docs.camunda.org/manual/latest/user-guide/process-engine/metrics/\">user guide</a> provides insight into which metrics are collected out of the box, among these the number of job acquisition cycles and job locking failures that were used in this blogpost.",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5287133362458235703/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "7012926459387509089",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-09-01T09:51:00+02:00",
   "updated": "2015-09-01T11:57:28+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQxMTAxNDQ4MzEyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/09/bpmn-quest-camunda-as-game-engine.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7012926459387509089",
   "title": "BPMN Quest - Camunda as a Game Engine!",
   "content": "This year at the annual Camunda hackdays one team bravely took it upon themselves to balance out the innovative and useful projects with something fun and frivolous. For two days somewhere in Brandenburg we were \"Awesome-Team-Awesome\" and we turned the Camunda engine into a platform to create a D&amp;D style quest game. We call it BPMN Quest.<br />\n<br />\nIf you can't wait for it - <a href=\"http://ec2-52-19-141-24.eu-west-1.compute.amazonaws.com:8080/CharacterCreator/frontend/?game=adventure\">here you can play it right away</a>.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-nFSdVVfG5C0/VeVvooqds9I/AAAAAAAAAJw/ykL0zLjW3x0/s1600/startScreen.PNG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"327\" src=\"http://4.bp.blogspot.com/-nFSdVVfG5C0/VeVvooqds9I/AAAAAAAAAJw/ykL0zLjW3x0/s640/startScreen.PNG\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Start page for bpmn quest.</td></tr>\n</tbody></table>\n<br />\n<br />\n<a name='more'></a><br />\nThe project was split into a few different features and handed out to the reverently skilled members of the (awesome) team (awesome).<br />\n<ul>\n<li>Location Map - showing the current location of the character as they moved through the story was given over to <a href=\"https://github.com/pedesen\">Paddy </a>with help from <a href=\"https://github.com/quoka\">Neville</a>.</li>\n<li>Player's Quest Page - the interface that the user playing the game would see, including story text, pictures and decision buttons was all in the safe hands of <a href=\"https://github.com/SebastianStamm\">Sebastian</a>.</li>\n<li>Dungeon Builder- a restricted version of the<a href=\"http://bpmn.io/\"> bpmn.io</a> modeler that would let users create stories to be played by the engine. <a href=\"https://github.com/pedesen\">Paddy </a>accepted this challenge. </li>\n<li>Game Mechanics - this included a monster fighting engine, riddles, character creation and many other behind the scenes features. <a href=\"https://github.com/jakobfreund\">Jakob </a>and <a href=\"https://github.com/NPDeehan/\">Myself </a>worked on that.</li>\n<li>A Quest - A nice little quest created in order to utilize (and test) all features we had implemented was also created by <a href=\"https://github.com/jakobfreund\">Jakob </a>and <a href=\"https://github.com/NPDeehan/\">Myself</a>. </li>\n<li>Integration - who doesn't enjoy integrating independently developed features into one seamless application? We all took part in this particular challenge. </li>\n</ul>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-cXb-m6l7UL4/VeVvp0fmgoI/AAAAAAAAAKA/ua9zZkHNXe0/s1600/startgame.PNG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"484\" src=\"http://3.bp.blogspot.com/-cXb-m6l7UL4/VeVvp0fmgoI/AAAAAAAAAKA/ua9zZkHNXe0/s640/startgame.PNG\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Player interface, the font end bpmn quest</td></tr>\n</tbody></table>\nWe wanted to ensure that the game engine and front end UI was as decoupled as possible from the story being played. This would ensure that people could create their story and deploy it without needing to worry about integration with either the front end or the back end. To accomplish this we standardized how the communication between the engine and the front end was made.<br />\n<br />\nThe front end would ask the engine for the current user task and would receive a few objects it would use to display the story. Including a story object, a character object and a list containing possible choices to be made at that point in the story. Someone creating a new quest would just need to populate a few java objects in either a service task or as input variables to a predefined call activity called \"Story Item\". <br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-twJQUwdVr2Q/VeVvoJfWaNI/AAAAAAAAAKE/6cJBck2KBYs/s1600/dungeon-builder.gif\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"440\" src=\"http://1.bp.blogspot.com/-twJQUwdVr2Q/VeVvoJfWaNI/AAAAAAAAAKE/6cJBck2KBYs/s640/dungeon-builder.gif\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Dungeon builder, the place where quests are born.</td></tr>\n</tbody></table>\n<br />\nWe also utilized the BPMN standard in order to orchestrate the progression of the quest. Exclusive gateways are used for the choices the player would make. Call activities show up for reoccurring events like fighting monsters or answering riddles. We also used an event-sub process which is scoped to be evoked when ever the game ends (either through death or victory).<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://2.bp.blogspot.com/-i5ETKLuWnpY/VeVvowzTYaI/AAAAAAAAAJ4/9MskRk9qNl4/s1600/You%2527re%2BDead.PNG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"482\" src=\"http://2.bp.blogspot.com/-i5ETKLuWnpY/VeVvowzTYaI/AAAAAAAAAJ4/9MskRk9qNl4/s640/You%2527re%2BDead.PNG\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Final screen when you've died. </td></tr>\n</tbody></table>\n<br />\nYou can actually<a href=\"http://ec2-52-19-141-24.eu-west-1.compute.amazonaws.com:8080/CharacterCreator/frontend/?game=adventure\"> play it online now</a> and you can also download the source <a href=\"https://github.com/NPDeehan/bpmn-quest\">from Github</a>. It was a lot of fun to make - and we hope that it's also a bit of fun to play.",
   "author": {
    "id": "g106964363964405276828",
    "displayName": "Niall Deehan",
    "url": "https://www.blogger.com/profile/18277487500921821452",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7012926459387509089/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2186206055289981116",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-09-01T07:39:00+02:00",
   "updated": "2015-09-01T07:40:26+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQxMDg2MDI2MjAwCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/09/context-help-in-camunda-using-solr.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2186206055289981116",
   "title": "Context Help in Camunda using SOLR Search Server",
   "content": "Last week we had our anual hack days - that means 48 hours of producing something aswesome. Together with Falko, Ingo and Thorben we build a context help within the <a href=\"https://github.com/camunda/camunda-bpm-workbench\">Camunda BPM Workbench</a> protoype. This uses <a href=\"http://lucene.apache.org/solr/\">Apache SOLR</a>&nbsp;to index various sources (we did the user forum, the docs on Github, a Community Extension and internal best practices). We discussed details on this index and did a comparison to ElasticSearch.<br />\n<br />\nIt was a great study for options and use cases of such a help in our tool chain - but watch the result yourself:<br />\n<a name='more'></a><br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"272\" mozallowfullscreen=\"\" src=\"https://player.vimeo.com/video/137867732\" webkitallowfullscreen=\"\" width=\"500\"></iframe> <br />\n<a href=\"https://vimeo.com/137867732\">Context Help / Search via SOLR - hooken into Camunda BPM Workbench</a> from <a href=\"https://vimeo.com/user22820658\">camunda</a> on <a href=\"https://vimeo.com/\">Vimeo</a>.<br />\n<br />\nNote that this is a prototype - sources are on a <a href=\"https://github.com/camunda/camunda-bpm-workbench/tree/hack-days-2015\">branch in GitHub</a> - but not in a stable state. But let us know what you think of it and if and how you would like to have it in the product! Feedback always helps us to make Camunda even more awesome :-)",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2186206055289981116/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "745984623265916852",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-31T20:35:00+02:00",
   "updated": "2015-08-31T20:35:14+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQxMDQ2MTE0NDQ3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/process-test-coverage-report.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/745984623265916852",
   "title": "Process Test Coverage Report",
   "content": "As part of the Hack Days this year my colleague Falko migrated an existing tool we (Camunda Consulting) used with success in a lot of projects to&nbsp;<a href=\"http://bpmn.io/\">bpmn.io</a>: The <a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/process-test-coverage\">Process Test Coverage Report Generator</a>. It just hooks into an automated test (typically JUnit) and creates an HTML report showing the coverage:<br />\n<br />\n<ul>\n<li>For every Test Case</li>\n<li>For the whole Test Suite</li>\n</ul>\n<div>\nSee this example for one test case - obviously the Happy Path of the process model:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-jP0h-G4dUNE/VeSdgQvu-3I/AAAAAAAAARU/akfz4seDr5w/s1600/testing-process-definitions-coverage.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"234\" src=\"http://1.bp.blogspot.com/-jP0h-G4dUNE/VeSdgQvu-3I/AAAAAAAAARU/akfz4seDr5w/s320/testing-process-definitions-coverage.png\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div>\nThe report can easily be watched locally within your IDE or hooked into your Jenkins Build. See <a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/process-test-coverage/README.md\">GitHub Readme</a> for details.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nBy the way - our Best Practice is to go for \"Flow Node Coverage\" - so your Test Suite should \"visit\" each BPMN Flow Node (Events, Activities, Gateways, ...) at least once.</div>\n<div>\n<br /></div>\n<div>\nHappy Testing!</div>\n",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/745984623265916852/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "8359537904297555361",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-19T14:17:00+02:00",
   "updated": "2015-09-14T16:31:13+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDQyMjQxMDczMTM0Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/how-to-repeat-task-in-cmmn.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8359537904297555361",
   "title": "How to repeat a task in CMMN?",
   "content": "We have some good news: We implemented the repetition rule in our CMMN engine. This gives the users the ability to repeat a task under certain conditions.<br />\n<br />\n<b>We invite you to try it out!</b><br />\nFor testing purposes use the current 7.4.0-SNAPSHOT of the engine and repeat a CMMN task as often as you wish.<br />\n<br />\nThere also exists some documentation with an explanation how the repetition rule works and how you can use it. Just read the section about&nbsp;<a href=\"http://docs.camunda.org/manual/develop/reference/cmmn10/markers/repetition-rule/\">repetition rule</a>.<br />\n<br />\n<b>Every feedback is welcome.</b><br />\nIf you miss something or something does not work as expected please let us know.<br />\n<br />\nPS: We are currently refactoring the documentation. So apologize if there is something in the documentation that does not work as usually. We are working on it.",
   "author": {
    "id": "g103095829219633860375",
    "displayName": "Roman Smirnov",
    "url": "https://www.blogger.com/profile/16926070807839636634",
    "image": {
     "url": "//lh5.googleusercontent.com/-5x2tX0l0eeI/AAAAAAAAAAI/AAAAAAAAAB8/gOaW1PE04uM/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8359537904297555361/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5302367817201428541",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-10T12:19:00+02:00",
   "updated": "2015-08-10T12:20:28+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM5MjAyMDI4ODMxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/migrate-process-versions.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5302367817201428541",
   "title": "Migrate Process Versions",
   "content": "My colleague Ingo just finished a new cockpit plugin allowing to easily migrate a running process instance to a new version of the process definition:<br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"350\" mozallowfullscreen=\"\" src=\"https://player.vimeo.com/video/135853242\" webkitallowfullscreen=\"\" width=\"500\"></iframe> <br />\n<br />\n<a name='more'></a><br />\nYou can find the sources of the plugin on GitHub:<br />\n<br />\n<ul>\n<li><a href=\"https://github.com/camunda/camunda-cockpit-plugins/tree/master/cockpit-plugin-version-migration\">https://github.com/camunda/camunda-cockpit-plugins/tree/master/cockpit-plugin-version-migration</a>&nbsp;</li>\n</ul>\n<div>\nIf you want to build some migration scrips (as customers often do) you can easily cherry-pick some code from the plugin to apply it yourself, see <a href=\"https://github.com/camunda/camunda-cockpit-plugins/blob/master/cockpit-plugin-version-migration/src/main/java/com/camunda/consulting/cockpitPluginVersionMigration/resources/ProcessInstanceMigrationResource.java#L42\">ProcessInstanceMigrationResource.java</a> for the core functionality). By doing so you can e.g. migrate a bunch of instances in one go - and adjust some variables on the way (as new versions might require new data).&nbsp;</div>\n<div>\n<br /></div>\n<div>\nPlease note that version migration has limitations and risks - we collected them in the README. We used an unsupported internal Command. The whole plugin is not part of the supported product, so there is no warranty of any kind. In short: Please read the limitations carefully and test migrations before you apply them in big scale on your live instances!</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5302367817201428541/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5574516086215207977",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-10T09:34:00+02:00",
   "updated": "2015-08-10T11:55:23+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM5MjAwNTIzMjgxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/brining-together-transactions-cancel.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5574516086215207977",
   "title": "Bringing Together: Transactions, Cancel Events and Compensation Tasks",
   "content": "If you've ever been lucky enough to enjoy <a href=\"http://camunda.com/bpmn/training/#tab1\">Camunda's BPMN training</a> then you probably have fond memories of the slide featuring Compensation tasks and Cancel events. It happens to be the very last slide in the symbol set section and is traditionally follows by a well deserved break. It also happens to be a very well implemented part of the Camunda engine.<br />\n<br />\nThis post is going to be all about how a process containing a transaction, cancel end event and compensation task are all implemented. The process I'm going to be describing is available <a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/bpmn-transaction\">on github to download</a> and play with yourself. the process itself looks like this:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-RpMVgp1wHZw/VcNgB_3sA8I/AAAAAAAAAJQ/rAabGMc2cic/s1600/process.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"314\" src=\"http://2.bp.blogspot.com/-RpMVgp1wHZw/VcNgB_3sA8I/AAAAAAAAAJQ/rAabGMc2cic/s640/process.png\" width=\"640\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<a name='more'></a><div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\nThis process describes booking a holiday, as this is an example that requires a certain amount of failure, as with most failures it begins with a test. Specifically, a user task called \"Personality Test\". In this task you'll get to decide if you're you've got bad luck, bad finances or if in fact you're practically perfect in every way.<br />\n<h3>\nBad Luck</h3>\nIf you choose bad luck a variable will be checked by the Book Hotel task will throw a BPMN error:<br />\n<br />\n<div class=\"highlight highlight-java\">\n<pre class=\"prettyprint\">boolean bookingError = (Boolean) exec.getVariable(\"bookingHotelError\");\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if(bookingError)\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; throw new BpmnError(\"THIS_IS_NOT_GOOD\");\n\n</pre>\n</div>\n<br />\nThe error will be caught by the <a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#events-error-events-error-boundary-event\">error boundary event</a> on the <a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#subprocesses-transaction-subprocess\">transaction sub-process</a>. It's important to know that the compensation boundary event on the task itself is only triggered by the cancel end event. So in the case where the error is thrown the compensation event is not triggered. Instead the token will follow the flow of the error boundary event and end up at the \"How did this happen task\".<br />\n<br />\nFor this to work - no additional properties are required to the error boundary event, it is simply a \"catch-all\" for any errors that might occur.<br />\n<h3>\nBad Finances</h3>\nIf you've decided on bad finances then the booking will pass by without a hitch but you won't be so luck when you try \"Charge Credit Card\". That service task will throw a different error:<br />\n<br />\n<div class=\"highlight highlight-java\">\n<pre class=\"prettyprint\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; boolean bookingError = (Boolean) arg0.getVariable(\"chargeCardError\");\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if(bookingError)\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;throw new BpmnError(\"CHARGE_FAILURE\");;\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \n\n</pre>\n</div>\n<br />\nThis case is different of course because the error boundary event is specifically waiting for a \"CHARGE_FAILURE\" error as defined in the properties. So when this happens the token is going to move straight to the <a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#events-cancel-and-compensation-events-cancel-end-event\">cancel end event</a>. This is where the engine works it's magic.<br />\n<br />\nWithout needing add any additional configuration yourself, the engine will take a look at the path the token has taken and work out if there are any <a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#events-cancel-and-compensation-events-compensation-boundary-event\">compensation boundary events</a> that need to be activated. In this case it will find that \"Book Hotel\" has a compensation boundary event leading to a<a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#tasks-task-markers-compensation\"> compensation task</a>.<br />\n<br />\nA new token is generated for the sole purpose of running the \"Cancel Hotel Reservation\" task. Once all compensation tasks are complete the token is caught by the <a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#events-cancel-and-compensation-events-cancel-boundary-event\">cancel boundary event</a> on the transaction itself and continues along that flow to the \"Cancellation Details\" task.<br />\n<br />\n<h3>\nEverything is Fine</h3>\nFinally if you happen to choose the final option in which nothing bad happens - you've clearly missed the point of this example - but at least you have time to think about that while you enjoy your holiday.<br />\n<br />\nFor more information on these events<a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/\"> take a look at our docs.</a> More specifically if you want to read about Cancel and Compensation events, <a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#events-cancel-and-compensation-events\">check this out</a>. <br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />",
   "author": {
    "id": "g106964363964405276828",
    "displayName": "Niall Deehan",
    "url": "https://www.blogger.com/profile/18277487500921821452",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5574516086215207977/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "7608115225294934600",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-06T14:40:00+02:00",
   "updated": "2015-08-06T14:40:25+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM4ODY0ODI1OTA3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/first-version-of-dmnio-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7608115225294934600",
   "title": "First Version of dmn.io Released",
   "content": "Today we release the first version of dmn.io, our new DMN modeling toolkit. dmn.io allows you to view and model decisions with the DMN 1.0 standard directly on the web. The dmn.io library provides a viewer and an editor that can be embedded into web applications. With this release we provide the front-end element for the <a href=\"http://blog.camunda.org/2015/07/camunda-bpm-740-alpha-1-released.html\" target=\"_blank\">latest Camunda BPM 7.4.0 alpha release</a>, which introduced support for DMN.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-jD6HCODqujc/VcIRVI5erJI/AAAAAAAADUQ/OraFeNA2rzY/s1600/screencast.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"218\" src=\"http://1.bp.blogspot.com/-jD6HCODqujc/VcIRVI5erJI/AAAAAAAADUQ/OraFeNA2rzY/s640/screencast.gif\" width=\"640\" /></a></div>\n<div style=\"background-color: #f4f6f4; border-radius: 3px; border: 1px solid #e4e6e4; margin: 30px auto; max-width: 500px; overflow: hidden;\">\n<h2 style=\"-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; float: left; margin: 0; padding: 15px; position: relative; text-align: center; width: 500px;\">\n<a href=\"http://camunda.org/dmn/demo/\" style=\"display: block; font-size: 28px; line-height: 32px; text-align: center;\">Try it out</a>   </h2>\n</div>\n<a name='more'></a><br />\n<h2>\nUnder the Hood</h2>\ndmn.io is build upon the work of the awesome <a href=\"http://bpmn.io/\" target=\"_blank\">bpmn.io framework</a>. Internally, dmn.io reuses a lot of the components that power the bpmn modeling toolkit. That means that if you know bpmn.io, you will feel at home with dmn.io!<br />\n<br />\nTo get started, you only need a few lines of code:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-javascript\">var DmnViewer = require('dmn-js');\n\nvar viewer = new DmnViewer({ container: '#table' });\n\nvar table; // your dmn xml\n\nviewer.importXML(table, function(err) {\n  if (!err) {\n    console.log('success!');\n  } else {\n    console.log('something went wrong:', err);\n  }\n});\n</code></pre>\n<br />\n<br />\nCheck out some <a href=\"https://github.com/dmn-io/dmn-js-examples\" target=\"_blank\">usage examples</a> we have put together.<br />\n<br />\n<h2>\nIt's Open Source!</h2>\ndmn-js and a number of projects it is built with are <a href=\"https://github.com/dmn-io\" target=\"_blank\">published on GitHub</a>. We have licensed dmn-js as do whatever you want but keep the project logo in the viewer and released all other projects under the MIT license.<br />\n<br />\nFeel free to look inside the projects. It is never to early to contribute bug reports and feature requests! Note however that we are still in alpha stage. Because of that documentation may be lacking and APIs might break with future releases.<br />\n<br />\n<h2>\nWhat's next?</h2>\n<ul>\n<li>More convenience (e.g. validation hints, typeahead in cells)</li>\n<li>More support for DMN fundamentals (e.g. hit policy)</li>\n<li>Better separation of IT and Business roles (hiding technical information for certain roles)</li>\n<li>Authorizations (e.g. allow editing certain cells only)</li>\n<li>Integration with Camunda Cockpit</li>\n</ul>\n",
   "author": {
    "id": "g101736838810379067186",
    "displayName": "Sebastian Stamm",
    "url": "https://www.blogger.com/profile/02218002246070663891",
    "image": {
     "url": "//lh4.googleusercontent.com/-jG4LxF9Q8sM/AAAAAAAAAAI/AAAAAAAAAB4/pyclCyhyxpU/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7608115225294934600/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5037158422968502550",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-06T07:46:00+02:00",
   "updated": "2015-08-06T07:46:20+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM4ODM5OTgwOTgwCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/rendering-bpmn-and-highlight-current.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5037158422968502550",
   "title": "Rendering BPMN and highlight current task using bpmn.io",
   "content": "With bpmn.io and the Camunda REST API it is really simple to develop a small HTML page that displays a process instance grafically and highlights some activities. In our \"<a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/\" target=\"_blank\">JSF Simple Tasklist</a>\" snippet we used this to highlight the current Task (like it is done in the Camunda BPM Tasklist):<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"https://raw.githubusercontent.com/camunda/camunda-consulting/master/snippets/jsf-simple-tasklist/diagram.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"408\" src=\"https://raw.githubusercontent.com/camunda/camunda-consulting/master/snippets/jsf-simple-tasklist/diagram.png\" width=\"640\" /></a></div>\n<br />\n<br />\n<a name='more'></a><br />\n<br />\nThe cool thing - you do not need a lot of code to do this! This is what we do:<br />\n<ul>\n<li>Handed over the taskId via URL parameter (see Screenshot).&nbsp;</li>\n<li>Load the <a href=\"http://docs.camunda.org/latest/api-references/rest/#task-get-single-task\" target=\"_blank\">Task details</a> and <a href=\"http://docs.camunda.org/latest/api-references/rest/#process-definition-get-bpmn-20-xml\" target=\"_blank\">BPMN XML</a> via REST API.</li>\n<li>Instantiate the BPMN viewer and hand over the XML for rendering</li>\n<li>Add a CSS class for the activity to be highlighted</li>\n<li>Load JavaScript/CSS dependencies, we used <a href=\"http://www.webjars.org/\" target=\"_blank\">WebJars</a>, so they are added to our Maven build in a versioned way</li>\n</ul>\n<div>\nThis is the required JavaScript Code:<br />\n<pre class=\"Prettyprint\"><code language=\"javascript\">\n$(document).ready(function() {\n    var restAccess = '/engine-rest';\n    var BpmnViewer = window.BpmnJS;\n    var viewer = new BpmnViewer({container: '#diagramCanvas', width: '100%', height: '100%'});\n    var container = $('#js-drop-zone');\n    // get the diagram\n    $.get(restAccess + '/task/#{taskBean.id}', function(marker) {\n      $.get(restAccess + '/process-definition/' + marker.processDefinitionId + '/xml', function(data) {\n        // show it in bpmn.io\n        viewer.importXML(data.bpmn20Xml, function(err) {\n          if (err) {\n            console.log('error rendering', err);\n          } else {\n            var canvas = viewer.get('canvas');\n            // zoom to fit full viewport\n            canvas.zoom('fit-viewport');\n            container.removeClass('with-error')\n                 .addClass('with-diagram');\n            // add marker\n            canvas.addMarker(marker.taskDefinitionKey, 'highlight');                  \n          }\n        });\n      });\n    });\n});\n\n</code></pre>\nYou can see the full JSF page here:&nbsp;<a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/webapp/app/taskDetail.xhtml\" target=\"_blank\">taskDetail.xhtml</a>. There you can also see the JavaScript libararies we loaded - all available via WebJars by the way.<br />\n<br />\nNote that it does not have to be JSF - a simple HTML page does the trick as well, as you can see in&nbsp;<a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/webapp/app/taskDetail.html\" target=\"_blank\">taskDetail.html</a>. Or you can embedd all this in the tooling of your choice :-)<br />\n<br />\nGreat stuff - thanks to the <a href=\"http://bpmn.io/about/\" target=\"_blank\">bpmn.io Team</a> for the good work!</div>\n",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5037158422968502550/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2888909530325641995",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-05T16:34:00+02:00",
   "updated": "2015-08-05T16:34:54+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM4Nzg1Mjk0ODM4Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/start-and-complete-process-with-rest-api.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2888909530325641995",
   "title": "Start and Complete a process with the REST API",
   "content": "<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">If you’ve already <a href=\"https://camunda.org/download/\">downloaded the Camunda BPM</a> platform you’ve already got our invoice example running locally. So I’m going to start with how you might run\nthrough that process using our REST API. <o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">I’m going to assume that you’ve\ngot some method of making those calls either programmatically or using a\nRestClient (I’ve used chrome’s <a href=\"https://chrome.google.com/webstore/detail/advanced-rest-client/hgmloofddffdnphfgcellkdfbfbjeloo\">advanced rest client</a>&nbsp;to test the calls). So lets begin...&nbsp;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<h3>\n<b><span style=\"color: #1f497d;\">Starting the process.&nbsp; </span></b></h3>\n</div>\n<div class=\"MsoNormal\">\n<b><span style=\"color: #1f497d;\"><br /></span></b></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">For most processes we could kick things off by using the <a href=\"http://docs.camunda.org/latest/api-references/rest/#process-definition-start-process-instance\">start process instance</a> rest call </span><span style=\"background: #F9F2F4; color: #c7254e; font-family: Consolas; font-size: 9.5pt;\">/process-definition/key/{key}/start.</span><span style=\"color: #1f497d;\">&nbsp;But because the invoice process has a start form\nI’m going to use <a href=\"http://docs.camunda.org/latest/api-references/rest/#process-definition-submit-start-form\">another way of starting the process</a> </span><span style=\"background: #F9F2F4; color: #c7254e; font-family: Consolas; font-size: 9.5pt;\">/process-definition/key/{key}/submit-form</span><span style=\"color: #1f497d;\"> [2]. Which looks something like this:<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<a href=\"http://localhost:8080/engine-rest/process-definition/key/invoice/submit-form\"><span style=\"color: lime;\">http://localhost:8080/</span><span style=\"color: purple;\">engine-rest/</span><span style=\"color: #548235;\">process-definition/key/</span><b style=\"color: #548235;\">invoice</b><span style=\"color: #548235;\">/submit-form</span></a><span style=\"color: #1f497d;\"> <o:p></o:p></span>\n</div>\n<div class=\"MsoNormal\">\n<br />\n<a name='more'></a><br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">In bright green is the name of the local server. Purple is the start of the path and of course the rest (no pun intended) is the\ncall. This includes “invoice” which is the key that works out which process we want\nto start. <o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">This isn’t going to work just yet\nthough, we’ll also need to add the content type to the header (this is true for\nall calls), in this case we’re using JSON so the header look like this:<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #548235;\">content-type: application/json<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #548235;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">There is also the matter of\npassing in the variables that are needed by the process – the invoice example\nhas a “start form” that requires a user to enter certain data when the process\nstarts. We can pass in those variables in the payload of the call a JSON object. It\nwould look like this:<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">{\"variables\":<o:p></o:p></span>\n</div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp; {<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp; \"creditor\":\n{\"value\":\"Niall\",\"type\":\"String\"},<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp;\n\"amount\":{\"value\":\"100\",\"type\":\"String\"},<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp;\n\"invoiceNumber\":{\"value\":\"123\",\"type\":\"String\"}<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp; }<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">}<o:p></o:p></span><br />\n<span style=\"color: #ed7d31;\"><br /></span></div>\n<div class=\"MsoNormal\">\n</div>\n<div class=\"MsoNormal\">\n</div>\n<span style=\"color: #1f497d;\">The REST call is now complete and\nwhen we run it should return a happy status of 200 – as well as some useful variables\nsent through JSON. The interesting parts of which are: <o:p></o:p></span>\n<br />\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: 'Courier New'; font-size: 10pt;\">{<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span class=\"jsonparserkeyname\"><span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">id</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:<span class=\"apple-converted-space\">&nbsp;</span><span class=\"jsonparserpunctuation\">\"</span></span><span class=\"jsonparserstringvalue\"><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">95aef406-3a7a-11e5-85b6-dafa20524153</span></span><span class=\"jsonparserpunctuation\"><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span class=\"jsonparserkeyname\"><span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">definitionId</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:<span class=\"apple-converted-space\">&nbsp;</span><span class=\"jsonparserpunctuation\">\"</span></span><span class=\"jsonparserstringvalue\"><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">invoice:1:15e97a1c-312d-11e5-aca3-a0e120524153</span></span><span class=\"jsonparserpunctuation\"><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span class=\"jsonparserkeyname\"><span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">businessKey</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:<span class=\"apple-converted-space\">&nbsp;</span></span><span class=\"jsonparsernullvalue\"><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span class=\"jsonparserkeyname\"><span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">caseInstanceId</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:<span class=\"apple-converted-space\">&nbsp;</span></span><span class=\"jsonparsernullvalue\"><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span class=\"jsonparserkeyname\"><span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">ended</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:<span class=\"apple-converted-space\">&nbsp;</span></span><span class=\"jsonparserbooleanvalue\"><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">false</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span class=\"jsonparserkeyname\"><span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">suspended</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:<span class=\"apple-converted-space\">&nbsp;</span></span><span class=\"jsonparserbooleanvalue\"><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">false</span></span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: 'Courier New'; font-size: 10pt;\">}<o:p></o:p></span><br />\n<span style=\"font-family: 'Courier New'; font-size: 10pt;\"><br /></span></div>\n<div class=\"MsoNormal\">\n</div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">The returned ID is the most\nimportant right now – because you can use that to contact the running process\ninstance when you need to make other calls. <o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<h3>\n<b><span style=\"color: #1f497d;\">Get a task.</span></b></h3>\n</div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">The next call we’re going to\nmake is to get details of the task that the process instance is currently waiting at.\nWe’ll be calling the engine and asking for <a href=\"http://docs.camunda.org/latest/api-references/rest/#task-get-tasks\">a single task</a> </span><span style=\"background: #F9F2F4; color: #c7254e; font-family: Consolas; font-size: 9.5pt;\">/task</span><span style=\"color: #1f497d;\">&nbsp;This call has a variety of parameters you can use to\nget the specific task you’re looking for – we’re just going to use the <i><b>processInstanceId</b></i>\nbecause that was returned to us when we started the process originally and we happen to know that the process only has one active task right now. So the\ncall would look something like this:<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #548235;\"><a href=\"http://localhost:8080/engine-rest/task/?processInstanceId=95aef406-3a7a-11e5-85b6-dafa20524153\">http://localhost:8080/engine-rest/task/?processInstanceId=<b>95aef406-3a7a-11e5-85b6-dafa20524153</b></a></span><span style=\"color: #7030a0;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">This call will return a JSON\nobject describing the task:<o:p></o:p></span><br />\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: 'Courier New'; font-size: 10pt;\">{<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">id</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">95af1b22-3a7a-11e5-85b6-dafa20524153</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">name</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">Assign\nApprover</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">assignee</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">demo</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">created</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">2015-08-04T09:29:47</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">due</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">2015-08-07T09:29:47</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">followUp</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">delegationState</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">description</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">Select the\ncolleague who should approve this invoice.</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">executionId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">95aef406-3a7a-11e5-85b6-dafa20524153</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">owner</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">parentTaskId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">priority</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: blue; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">50</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">processDefinitionId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">invoice:1:15e97a1c-312d-11e5-aca3-a0e120524153</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">processInstanceId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">95aef406-3a7a-11e5-85b6-dafa20524153</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">taskDefinitionKey</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">assignApprover</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">caseExecutionId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">caseInstanceId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">caseDefinitionId</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">null</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">suspended</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;</span><span style=\"color: #770088; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">false</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\" style=\"margin-left: 36.0pt;\">\n<span style=\"color: #ce7b00; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">formKey</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">:&nbsp;\"</span><span style=\"color: #4488aa; font-family: &quot;Courier New&quot;; font-size: 10.0pt;\">embedded:app:forms/assign-approver.html</span><span style=\"font-family: 'Courier New'; font-size: 10pt;\">\"<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: 'Courier New'; font-size: 10pt;\">}<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">The most important variable here is again the ID, but this is the ID of the current task not the process. We can use that ID to send calls to that task - like for instance to complete the task. Which is what\nwe’re going to do right now.<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<h3>\n<b><span style=\"color: #1f497d;\">Complete a task.</span></b></h3>\n</div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">This is a <a href=\"http://docs.camunda.org/latest/api-references/rest/#task-complete-task\">very straight forward POST</a> call that requires the id of the task you want to complete </span><span style=\"background: #F9F2F4; color: #c7254e; font-family: Consolas; font-size: 9.5pt;\">/task/{id}/complete</span><span style=\"color: #1f497d;\">&nbsp;. <o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">So when you add the id the\nrequest looks a little something like this: <o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #548235;\"><a href=\"http://localhost:8080/engine-rest/task/95af1b22-3a7a-11e5-85b6-dafa20524153/complete\">http://localhost:8080/engine-rest/task/<b>95af1b22-3a7a-11e5-85b6-dafa20524153</b>/complete</a></span><span style=\"color: #7030a0;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">But this particular task has a\nUI that requires a user to enter center data – an approver. Once again we’re\ngoing to need to add variables as a JSON object to the payload of the request:<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">{\"variables\":<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp; {<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp; \"approver\":\n{\"value\":\"Demo\",\"type\":\"String\"}<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">&nbsp; }<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #ed7d31;\">}<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">That task should complete with a\ncode 204 and doesn’t return any data. The token will then move onto the next task.</span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<h3>\n<span style=\"color: #1f497d;\"><b>Now you can try a little&nbsp;exercise:&nbsp;</b></span></h3>\n</div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\">To finish the process all you need to do is use variety of Get Task\n-&gt; Complete Task&nbsp;calls until the process has reached an end event. You can always check <a href=\"http://docs.camunda.org/7.3/guides/user-guide/#cockpit\">Cockpit </a>when you need to find out where the token currently is. So why not give it a try?&nbsp;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"color: #1f497d;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<br /></div>\n",
   "author": {
    "id": "g106964363964405276828",
    "displayName": "Niall Deehan",
    "url": "https://www.blogger.com/profile/18277487500921821452",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2888909530325641995/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2461840243174855315",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-08-03T12:54:00+02:00",
   "updated": "2015-08-03T12:54:15+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM4NTk5MjU1Mjc3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/08/job-prioritization-asynchronous-processing.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2461840243174855315",
   "title": "Job Prioritization for Asynchronous Processing at Scale",
   "content": "<script src=\"https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js\"></script>  <br />\n<div class=\"markdown-body\">Camunda users process heavy workloads with the process engine. Often this includes asynchronous processing which is handled using the job executor component. The amount of jobs that need to be processed can quickly reach an order of magnitude of millions of jobs per day. To bring order into situations of high job executor load, Camunda BPM 7.4.0 will ship <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor-job-prioritization\">job prioritization</a>. With our first <a href=\"http://blog.camunda.org/2015/07/camunda-bpm-740-alpha-1-released.html\">7.4.0-alpha1</a> release, you can already have a look at it and give it a try. This article deals with three questions:<br />\n<ul><li><a href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#the-case-for-job-prioritization\">What is Job Priorization useful for?</a></li>\n<li><a href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#how-to-use-it\">How to use Job Prioritization?</a></li>\n<li><a href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#what-you-can-expect-in-740\">How will this look like in 7.4.0?</a></li>\n</ul><br />\n<a name='more'></a><br />\n<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#the-case-for-job-prioritization\" id=\"user-content-the-case-for-job-prioritization\"><span class=\"octicon octicon-link\"></span></a>The Case for Job Prioritization</h2>Up to date, Camunda BPM is used by a growing number of customers in a variety of industries, each with different requirements for process automation. Among others, we are especially prominent in the <a href=\"http://camunda.com/bpm/references/\">financial, insurance, and telecommunications sectors</a>. In these fields, processes tend to be mostly or even fully automated (termed <i>Dunkelverarbeitung</i> in German insurances). To scope <i>units of work</i> in these processes, that means sets of activities that are executed in one transaction, Camunda provides the concept of <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-asynchronous-continuations\">asynchronous continuations</a>. Asynchronous continuations manifest themselves as <i>jobs</i> at runtime, representing the task to execute a unit of work in a running process instance. The process engine's <i>job executor</i> component continuously picks up jobs from the database and schedules them for execution in a dedicated thread pool.<br />\n<br />\nWith global and national players using the process engine to automate their processes, the amount of jobs present at a time can grow quite large. After the 7.3.0 release, we conducted a survey amongst community and enterprise edition users receiving feedback from some of our most demanding users. Key results were:<br />\n<ul><li>Users process up to 5 million jobs per day</li>\n<li>Job creation and execution is subject to peaks, varying in rate and duration</li>\n</ul><br />\nDuring peaks, the job executor and its thread pool may be temporarily overloaded, needing time to process the existing jobs and reduce the queue size to a manageable portion again. With previous Camunda versions, the order of job execution is generally non-deterministic with limited measures to order execution of jobs (e.g. prefer execution of timers over asynchronous continuations). In a large set of pending jobs, some jobs may be more important than others. For example:<br />\n<ul><li>VIP customers are more important than casual customers to a company. In high load situations, VIP orders should be processed with only little delay.</li>\n<li>Batch operations like housekeeping tasks create a large amount of jobs in a short time, yet their execution is less important than other business processes.</li>\n<li>In an exceptional condition, an external service may respond slowly. Jobs accessing that service are temporarily less important in order to avoid blocking other jobs.</li>\n</ul><br />\nFor use cases like that, job prioritization is the adequate tool in the Camunda toolbox.<br />\n<br />\n<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#how-to-use-it\" id=\"user-content-how-to-use-it\"><span class=\"octicon octicon-link\"></span></a>How to use it</h2>Let us apply job prioritization by implementing an example. The following diagram shows a simplified delivery scheduling process. In order to automatically retry scheduling in case of failure, the service task <i>Schedule Delivery</i> is declared asynchronous. In the following, we want to treat VIP customers' deliveries with higher priority such that they are sooner processed in case of high job load.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-VVr6tnMMjUM/VbnjQv2zrQI/AAAAAAAAADM/pC6aOiErG4k/s1600/process_scaled.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-VVr6tnMMjUM/VbnjQv2zrQI/AAAAAAAAADM/pC6aOiErG4k/s400/process_scaled.png\" /></a></div><br />\n<h3><a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#engine-configuration\" id=\"user-content-engine-configuration\"><span class=\"octicon octicon-link\"></span></a>Engine Configuration</h3>Before starting, we make sure to configure the job executor to acquire jobs by their priority. In <code>bpm-platform.xml</code>, this look as follows:<br />\n<div class=\"highlight highlight-xml\"><pre class=\"prettyprint\">&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UTF-8<span class=\"pl-pds\">\"</span></span>?&gt;\n&lt;<span class=\"pl-ent\">bpm-platform</span> ...&gt;\n  &lt;<span class=\"pl-ent\">job-executor</span>&gt;\n    &lt;<span class=\"pl-ent\">job-acquisition</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>default<span class=\"pl-pds\">\"</span></span> /&gt;\n  &lt;/<span class=\"pl-ent\">job-executor</span>&gt;\n\n  &lt;<span class=\"pl-ent\">process-engine</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>default<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">job-acquisition</span>&gt;default&lt;/<span class=\"pl-ent\">job-acquisition</span>&gt;\n    ...\n    &lt;<span class=\"pl-ent\">properties</span>&gt;\n      &lt;<span class=\"pl-ent\">property</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jobExecutorAcquireByPriority<span class=\"pl-pds\">\"</span></span>&gt;true&lt;/<span class=\"pl-ent\">property</span>&gt;\n      ...\n    &lt;/<span class=\"pl-ent\">properties</span>&gt;\n    ...\n  &lt;/<span class=\"pl-ent\">process-engine</span>&gt;\n&lt;/<span class=\"pl-ent\">bpm-platform</span>&gt;</pre></div><br />\nThe job acquisition thread will now acquire jobs strictly by their priority, from highest to lowest. Have a look at the documentation of <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor-the-job-order-of-job-acquisition\">job acquisition order</a> for a recommended database index.<br />\n<br />\n<h3><a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#prioritizing-vip-customers-jobs\" id=\"user-content-prioritizing-vip-customers-jobs\"><span class=\"octicon octicon-link\"></span></a>Prioritizing VIP Customers' Jobs</h3>Next, we configure an asynchronous continuation job to receive a <a href=\"http://docs.camunda.org/latest/guides/user-guide/#specifying-priorities-in-bpmn-xml\">priority based on the BPMN 2.0 XML</a>. Priorities are natural numbers in the Integer range and can be either constant values or the result of a JUEL expression. Let us assume that we have a process variable <code>delivery</code> that contains business data related to the delivery such as the customer's identifier. Furthermore, we have a CDI bean called <code>priorityHandler</code> that is able to calculate a customer's priority. In the BPMN XML of our process, we can configure the service task as follows:<br />\n<div class=\"highlight highlight-xml\"><pre class=\"prettyprint\">&lt;<span class=\"pl-ent\">bpmn</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">serviceTask</span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ScheduleDelivery_1<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Schedule Delivery<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">camunda</span><span class=\"pl-e\">:</span><span class=\"pl-e\">asyncBefore</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>true<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">camunda</span><span class=\"pl-e\">:</span><span class=\"pl-e\">jobPriority</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>${priorityHandler.calculatePriorityFor(delivery.customer)}<span class=\"pl-pds\">\"</span></span> /&gt;</pre></div><br />\nEvery job for that activity now is dynamically assigned a priority by the <code>priorityHandler</code> bean. <br />\n<h3><a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#overriding-priorities-at-runtime\" id=\"user-content-overriding-priorities-at-runtime\"><span class=\"octicon octicon-link\"></span></a>Overriding Priorities at Runtime</h3>Our solution works fine until one day the delivery service encounters an overload and starts to respond very slowly. In order to get the delivery scheduling jobs \"out of the way\" of other jobs, we can use the management service to define a priority for the job definition that temporarily overrides the setting in the BPMN XML.<br />\n<div class=\"highlight highlight-java\"><pre class=\"prettyprint\"><span class=\"pl-c\">// find the job definition</span>\n<span class=\"pl-smi\">JobDefinition</span> jobDefinition <span class=\"pl-k\">=</span> managementService\n  .createJobDefinitionQuery()\n  .activityIdIn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ScheduleDelivery_1<span class=\"pl-pds\">\"</span></span>)\n  .singleResult();\n\n<span class=\"pl-c\">// set an overriding priority</span>\nmanagementService<span class=\"pl-k\">.</span>setOverridingJobPriorityForJobDefinition(jobDefinition<span class=\"pl-k\">.</span>getId(), <span class=\"pl-c1\">0</span>);</pre></div><br />\nNow, every new async job that is created for the <i>Schedule Delivery</i> activity will receive the priority 0. When the delivery service has returned to normal operation conditions, this priority can similarly be cleared again with<br />\n<div class=\"highlight highlight-java\"><pre class=\"prettyprint\">managementService<span class=\"pl-k\">.</span>clearOverridingJobPriorityForJobDefinition(jobDefinition<span class=\"pl-k\">.</span>getId());</pre></div><br />\n<h2><a aria-hidden=\"true\" class=\"anchor\" href=\"https://www.blogger.com/blogger.g?blogID=2414043640680427770#what-you-can-expect-in-740\" id=\"user-content-what-you-can-expect-in-740\"><span class=\"octicon octicon-link\"></span></a>What you can expect in 7.4.0</h2>In the previous sections, we have explored the engine's new job prioritization feature. As you may have noticed, it deals with the BPMN and Java API part but there is not yet an integration with Cockpit. Similar to features like <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit-suspension-job-definition-suspension\">job definition suspension</a>, we plan to enable Cockpit users to define overriding priorities dynamically at runtime. This way, operators can immediately respond to exceptional conditions that require re-prioritization. In addition, we will integrate the priority attribute into the graphical <a href=\"http://docs.camunda.org/latest/guides/user-guide/#camunda-modeler\">camunda Modeler</a> or <a href=\"http://bpmn.io/\">bpmn.io</a>.<br />\n<br />\nFor now, you can have a look at the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor-job-prioritization\">documentation on job prioritization</a> for a more comprehensive description of the feature. We are eager to receive your feedback, whether prioritization helps you solve use cases, where you see potential for improvement, and if you encounter any bugs or performance issues. Drop us a line in the comments below or on the <a href=\"https://groups.google.com/forum/#!forum/camunda-bpm-users\">camunda user forum</a>.</div>",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2461840243174855315/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "4325370346588622078",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-07-31T12:19:00+02:00",
   "updated": "2015-08-07T07:19:41+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM4OTI0NzgxMzI0Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/07/camunda-bpm-740-alpha-1-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4325370346588622078",
   "title": "Camunda BPM 7.4.0 Alpha 1 Released",
   "content": "Today we release Camunda BPM 7.4.0-Alpha1. This is the first alpha release previewing the upcoming 7.4.0 Release.<br />\n<br />\nThe highlights of this release are:<br />\n<ul><li>DMN (Decision Model and Notation): DMN Engine and browser based Decision Table Editor,</li>\n<li>Job Priorities: Control execution order of asynchronous Jobs,</li>\n<li>Enhanced BPMN Support: add Signal Start events, Compensation Event Subprocess, enhanced asynchronous continuations for Multi Instance Activities,</li>\n<li>Native support for File Variables in Api and Html Forms,</li>\n<li>Many Bugfixes</li>\n</ul><br />\nOverall more than 140 issues were closed. See <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&version=14191\">complete Release Notes in Jira</a>.<br />\n<div style=\"background-color: #f4f6f4; border-radius: 3px; border: 1px solid #e4e6e4; margin: 30px auto; max-width: 500px; overflow: hidden;\"><h2 style=\"-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; float: left; margin: 0; padding: 15px; position: relative; text-align: center; width: 300px;\"><a href=\"http://camunda.org/download#latest\" style=\"display: block; font-size: 28px; line-height: 32px; text-align: center;\">Download For Free</a>   </h2><h3 style=\"-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; float: right; margin: 0; padding: 15px; position: relative; text-align: center; width: 200px;\"><a href=\"https://registry.hub.docker.com/u/camunda/camunda-bpm-platform/\" style=\"display: block; font-size: 20px; line-height: 32px; text-align: center;\">Run with Docker</a>   </h3></div><a name='more'></a><h2>DMN: Decision Model and Notation</h2>This is the first release which supports DMN (Decision Model and Notation). DMN is a new OMG (Object Management Group) standard for Business Decision Management. (Some of you may also be familiar with the term \"Business Rules Management\".)<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-cnk5FA_Swsw/VboYuNYOyZI/AAAAAAAADEw/Ps50fBs73Oc/s1600/table.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"264\" src=\"http://4.bp.blogspot.com/-cnk5FA_Swsw/VboYuNYOyZI/AAAAAAAADEw/Ps50fBs73Oc/s640/table.png\" width=\"640\" /></a></div>DMN allows developers and business people to collaborate around different phases of modeling, testing, executing, monitoring and improving Business Decisions.<br />\n<br />\nThis Camunda BPM release adds<br />\n<ul><li>A new <a href=\"https://github.com/camunda/camunda-engine-dmn\">lightweight decision Engine</a> with native support for DMN, developed from scratch,</li>\n<li>Seamless integration of the Decision Engine into BPMN and CMMN execution,</li>\n<li>A new, <a href=\"https://github.com/dmn-io\">browser based Decision Table Editor</a> built on top of our awesome&nbsp;<a href=\"http://bpmn.io/\">bpmn.io</a> modelling framework</li>\n</ul>While these components are currently in an early stage of development, it is already possible to create a decision table in the browser, add it to your java development project, reference it from a BPMN Business Rule Task, and execute the corresponding process.<br />\n<br />\nFor an example, checkout the Invoice Demo (<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/examples/invoice\">Sources</a>) shipped with our distribution.<br />\n<br />\nYou can try out a demo of the browser based decision editor here:<br />\n<div style=\"background-color: #f4f6f4; border-radius: 3px; border: 1px solid #e4e6e4; margin: 30px auto; max-width: 500px; overflow: hidden;\"><h3 style=\"-moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; margin: 0; padding: 15px; position: relative; text-align: center;\"><a href=\"http://camunda.org/dmn/demo/\" style=\"display: block; font-size: 18px; line-height: 32px; text-align: center;\">DMN Table Editor Demo</a>   </h3></div>Over the next days we will publish a dedicated blogpost on DMN.<br />\nYou should also read <a href=\"http://www.bpm-guide.de/2015/07/20/dmn-decision-model-and-notation-introduction-by-example/\">Bernd's Post at bpm-guide</a>.<br />\n<br />\n<h2>Job Priorities</h2>It is now possible to control the order in which asynchronous jobs are executed. <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor-job-prioritization\">See the corresponding documentation</a>.<br />\nWe will publish a dedicated blogpost on Job Priorities later. <a href=\"http://blog.camunda.org/2015/08/job-prioritization-asynchronous-processing.html\">Here it is!</a><br />\n<br />\n<h2>Enhanced BPMN Support</h2>This release again enhances BPMN support. It is now possible to use<br />\n<br />\n<ul><li><a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-signal-events-signal-start-event\">Signal Start Event</a></li>\n<li><a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-cancel-and-compensation-events-compensation-end-event\">Compensation End Event</a></li>\n<li><a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-cancel-and-compensation-events-compensation-start-event\">Compensation Start event of Event Subprocess</a></li>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-asynchronous-continuations-of-multi-instance-activities\">Enhanced support for Asynchronous Continuations for Multi Instance activities</a></li>\n</ul><h2>Native support for File Variables in Api and Html Forms.</h2>We added native support for File Variables to the Java API, Rest API and in HTML Forms.<br />\n<br />\nLet's start with the forms. In a Form you can now easily allow a user to upload a file:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-kLkQjABXSTU/Vbob6lqRjkI/AAAAAAAADE8/IwFS2BX4lPI/s1600/file-upload.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-kLkQjABXSTU/Vbob6lqRjkI/AAAAAAAADE8/IwFS2BX4lPI/s1600/file-upload.png\" /></a></div>The corresponding html code would looks like this:<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;input type=\"file\"\n       cam-variable-name=\"INVOICE_DOCUMENT\"\n       cam-variable-type=\"File\"\n       cam-max-filesize=\"10000000\" /&gt;\n</code></pre><br />\nAnd download it (with the correct Filename):<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-cdLtXZIZM6w/Vbob_Yg_LLI/AAAAAAAADFE/iFDGWELNtyI/s1600/file-download.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-cdLtXZIZM6w/Vbob_Yg_LLI/AAAAAAAADFE/iFDGWELNtyI/s1600/file-download.png\" /></a></div>The corresponding html code looks like this:<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;a cam-file-download=\"INVOICE_DOCUMENT\"&gt;&lt;/a&gt;\n</code></pre><br />\nRead more about File support Html Forms in the <a href=\"http://docs.camunda.org/latest/api-references/embedded-forms/#supported-html-controls-file-input-fields\">Documentation</a>.<br />\n<br />\nIn your Java code you can work with files using the new <code>FileValue</code> type:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">public class ArchiveInvoiceService implements JavaDelegate {\n\n  public void execute(DelegateExecution execution) throws Exception {\n\n    // get file value using typed api\n    FileValue invoiceDocumentVar = execution.getVariableTyped(\"INVOCE_DOCUMENT\");\n\n    InputStream content = invoiceDocumentVar.getValue();\n    String filename = invoiceDocumentVar.getFilename();\n    String mimeType = invoiceDocumentVar.getMimeType();\n\n    // untyped api returns the InputStream only\n    InputStream invoiceDocument = (InputStream) execution.getVariable(\"INVOCE_DOCUMENT\");\n\n    // create a new file variable:\n    execution.setVariable(\"DOC\", fileValue(new File(\"location/doc.pdf\")));\n  }\n\n}\n</code></pre>Find more details in the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-variables-file-values\">Documentation</a>.<br />\n<br />\nFile Support was a much requested feature by the community.<br />\n<br />\nWe hope you enjoy this release!<br />\n<br />\n<h2>What's up next?</h2><br />\n<ul><li>DMN, DMN, DMN, ... :)</li>\n<li>We will continue to enhance the BPMN support by implementing BPMN Escalation,</li>\n<li>Support for Tomcat 8,</li>\n<li>Support for CMMN Repetition Rule,</li>\n<li>As always, amazing things are happening in <a href=\"http://bpmn.io\">bpmn.io</a>,</li>\n<li>...</li>\n</li>\n</ul><br />\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4325370346588622078/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5640419747156127082",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-07-28T12:05:00+02:00",
   "updated": "2015-07-29T11:39:49+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM4MTYyNzg5NzIyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/07/setting-up-development-environment-for.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5640419747156127082",
   "title": "Setting up a Development Environment for Camunda HTML Forms",
   "content": "Are you developing HTML forms for Camunda Tasklist? Are you re-packaging your application with maven and re-deploying it to Tomcat or Wildfly for each HMTL form change? Are you annoyed by this? :)<br />\n<br />\nThere is hope: this post explains how to setup a development environment which allows you to develop forms inside Camunda Tasklist and refresh your changes without re-packaging and re-deploying your application.<br />\n<br />\nWe use this kind of setup ourselves when working on the <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/examples/invoice\">Invoice Example which is provided with the Camunda Distribution</a>.<br />\n<br />\nIn the following I am assuming that you have setup an application according to the blueprint provided by our <a href=\"http://docs.camunda.org/7.3/guides/getting-started-guides/developing-process-applications/\">Getting Started Guide</a>.<br />\n<br />\n<a name='more'></a><br />\n<br />\n<h2>Step 1: Adding a Maven Profile for development</h2>First you need to add a Maven profile for development:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;profiles&gt;\n  &lt;profile&gt;\n    &lt;id&gt;develop&lt;/id&gt;\n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;org.camunda.bpm.webapp&lt;/groupId&gt;\n        &lt;artifactId&gt;camunda-webapp-tomcat-standalone&lt;/artifactId&gt;\n        &lt;version&gt;${project.version}&lt;/version&gt;\n        &lt;type&gt;war&lt;/type&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;build&gt;\n      &lt;resources&gt;\n        &lt;resource&gt;\n          &lt;!-- override processes.xml, providing custom process engine --&gt;\n          &lt;directory&gt;src/develop/resources&lt;/directory&gt;\n          &lt;resource&gt;\n            &lt;directory&gt;src/main/resources&lt;/directory&gt;\n          &lt;/resource&gt;\n        &lt;/resource&gt;\n      &lt;/resources&gt;\n      &lt;plugins&gt;\n        &lt;plugin&gt;\n          &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;\n          &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;\n          &lt;version&gt;8.1.14.v20131031&lt;/version&gt;\n          &lt;configuration&gt;\n            &lt;webAppConfig&gt;\n              &lt;contextPath&gt;/camunda&lt;/contextPath&gt;\n              &lt;resourceBases&gt;\n                &lt;resourceBase&gt;${project.basedir}/src/develop/webapp&lt;/resourceBase&gt;\n                &lt;resourceBase&gt;${project.basedir}/src/main/webapp&lt;/resourceBase&gt;\n              &lt;/resourceBases&gt;\n            &lt;/webAppConfig&gt;\n          &lt;/configuration&gt;\n        &lt;/plugin&gt;\n      &lt;/plugins&gt;\n    &lt;/build&gt;\n  &lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre><br />\nThe profile includes the Camunda Standalone Webapplication as well as the Jetty Maven plugin for starting it as part of the Maven build.<br />\n<br />\n<h2>Step 2: Override some Configuration</h2>Next we need to override some configuration. The maven profile references two resource locations to which we need to add a configuration file.<br />\n<br />\nPlace the following xml content into <code>src/develop/resources/META-INF/processes.xml</code>:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n\n&lt;process-application\n  xmlns=\"http://www.camunda.org/schema/1.0/ProcessApplication\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n\n  &lt;process-engine name=\"default\"&gt;\n    &lt;configuration&gt;org.camunda.bpm.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration&lt;/configuration&gt;\n    &lt;properties&gt;\n      &lt;property name=\"jobExecutorActivate\"&gt;true&lt;/property&gt;\n      &lt;property name=\"authorizationEnabled\"&gt;true&lt;/property&gt;\n    &lt;/properties&gt;\n  &lt;/process-engine&gt;\n\n  &lt;process-archive&gt;\n    &lt;process-engine&gt;default&lt;/process-engine&gt;\n    &lt;properties&gt;\n      &lt;property name=\"isDeleteUponUndeploy\"&gt;false&lt;/property&gt;\n      &lt;property name=\"isScanForProcessDefinitions\"&gt;true&lt;/property&gt;\n    &lt;/properties&gt;\n  &lt;/process-archive&gt;\n\n&lt;/process-application&gt;\n</code></pre><br />\nThis ensures that an in-memory process engine is started and that the processes located in the classpath of the maven build are deployed to it.<br />\n<br />\nNext, place the follwing XML content into <code>src/develop/webapp/WEB-INF/applicationContext.xml</code>:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:activiti=\"http://www.activiti.org/schema/spring/components\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n\n\n&lt;/beans&gt;\n</code></pre><br />\nThis overrides the Spring Configuration shipped with the Standalone Web Application and makes sure the process engine is not also started using Spring.<br />\n<br />\n<h2>Step 3: Start the Application and work on Embedded Forms</h2><br />\nYou can now start your application by typing<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">mvn clean jetty:run -Pdevelop\n</code></pre><br />\nAnd opening Camunda Tasklist at <a href=\"http://localhost:8080/camunda/app/tasklist/\">http://localhost:8080/camunda/app/tasklist/</a>.<br />\n<br />\nIf you now change your HTML forms or Javascript resources, you can simply refresh the page in the Browser and the changes will be visible.<br />\n<br />\nEnjoy!<br />\n<br />\n<br />\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5640419747156127082/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "1214286061221455537",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-07-07T16:19:00+02:00",
   "updated": "2015-07-08T08:52:50+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM2MzM4MzcwNzIwCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/07/how-to-clean-uppurge-camunda-history.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1214286061221455537",
   "title": "How to clean up/purge the camunda history tables",
   "content": "We get this question very often from customers: <b>How can we get rid of old history data that we don't need anymore?</b>&nbsp;First it's important to ask: \"What do you mean by 'old data'?\". This is completely business focused and depends on the use of cockpit, who is working with the history data, how reports are generated and maybe even constraints due to legislation.<br />\n<br />\nOne of our customers - Hamburger Sparkasse (<a href=\"http://www.haspa.de/\" target=\"_blank\">Haspa</a>) - built a solution that is flexible enough to address the issues raised by the questions above:<br />\n<a name='more'></a><ul>\n<li>They created a bunch of <b>SQL scripts</b></li>\n<li>Created a <b>parameter</b>&nbsp;for&nbsp;the <b>number of days</b> that completed process instances should remain in the database</li>\n<li>which then&nbsp;<b>moved the old data into a set of archive tables</b> and marked them with the time-stamp and a sequence number of the cleanup run.</li>\n<li>This <b>ensures the process can be&nbsp;undone</b> in case data is moved accidentally - or if you recognize later on that you still need it.</li>\n</ul>\n<div>\nThe source code is available in our consulting repository (thanks to Haspa for allowing this!):</div>\n<div>\n<br /></div>\n<div>\n<a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/clean-up-history\">https://github.com/camunda/camunda-consulting/tree/master/snippets/clean-up-history</a></div>\n<br />\n<h3>\nHow can you start it?</h3>\nLoad the scripts from our repo&nbsp;into your oracle database (we tested them with Oracle 12c). There are scripts that must run once to prepare everything (STEP-1 and STEP-2). STEP-3 loads a PL/SQL-Function which can be started as follows:<br />\n<code><br /></code>\n<code>select ARCHIVE_CAMUNDA_HISTORY(9, 20) from DUAL; -- Archive PI's older then 9 days and max. 20 instances</code><br />\n<br />\nIf you run<br />\n<br />\n<code>\nselect ARCHIVE_CAMUNDA_HISTORY(180, 0) from DUAL;</code><br />\n<br />\nAll process instances, that are completed more than 180 days before today will be moved into the archive tables.<br />\n<br />\nSTEP-4 is made for Restore/Rollback. Run the file once in your SQLDeveloper to compile the function and start it with:<br />\n<br />\n<code>\nselect ROLLB_ARCHIVE_CAMUNDA_HISTORY(7, -1, 10) from DUAL;</code><br />\n<br />\nwhere 7 is the number of the starting cleanup sequence number, the second parameter is a max cleanup sequence number (-1 means that only the first parameter counts) and the third parameter is the number of process instances that should be restored. 0 for the third parameter restores all process instances from the archive runs:<br />\n<br />\n<code>\nselect ROLLB_ARCHIVE_CAMUNDA_HISTORY(8, 10, 0);</code><br />\n<code><br /></code>\nYou will find more detailed documentation <a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/clean-up-history/oracle-scripts\" target=\"_blank\">in the code</a>. Its worth it to have a look.<br />\n<br />\nTo get rid of the new tables and functions, there is of course DROP-Script, too.<br />\n<h3>\nHow does it work?&nbsp;</h3>\nThe archiving function checks first for process instances in the history that match the archiving arguments. It copys the process instance ids into a temporary table.\n\n\n\nThen it generates SQL Scripts to insert the data from the history tables into the archive tables and to delete the data from the history.\n\n\n\nAfterwards it checks for bytearrays referenced from the archived process instances in the VARINST- and DETAIL-Table.\n\n\n\nIf there are any, the data are moved, too.<br />\n<br />\nThe restore/rollback function does it the other way around and moves the data from the archive table back into the history table. Now they appear in the cockpit again.\n\n\n",
   "author": {
    "id": "g114697388531686487620",
    "displayName": "Ingo Richtsmeier",
    "url": "https://www.blogger.com/profile/11127045572873296897",
    "image": {
     "url": "//lh5.googleusercontent.com/-QalsZgNcJcM/AAAAAAAAAAI/AAAAAAAAABk/KIj_K_-huz4/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1214286061221455537/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3984678971437737984",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-06-26T08:55:00+02:00",
   "updated": "2015-06-26T10:34:02+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM1MzA3NjQyMzA0Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/06/deploy-camunda-bpm-docker-image-with.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3984678971437737984",
   "title": "Deploy a Camunda BPM Docker Image with Amazon Web Services",
   "content": "<br />\nNo one could argue that deploying the Camunda BPM platform to a web server is unmatched in its adrenaline-inducing excitement, but we should spare a thought for those people whose aversion to scripts and consoles has meant that they have never had the opportunity to enjoy Camunda BPM deployments to their fullest. Until now...<br />\n<br />\nIn this post I'm going to explain in detail how you can deploy Camunda BPM to a server using docker and Amazon Web Services (AWS) and interestingly enough - it doesn't require so much as a glance at a console cursor.<br />\n<br />\nTo achieve this we're going to be using two Amazon services:<br />\n<ul>\n<li>RDS - to setup the process engine's database</li>\n<li>EC2 Container Service - as a container for the deployment.</li>\n</ul>\n<div>\nThe docker image will be used in conjunction with the EC2 container service to make the deployment even easier.<br />\n<br />\n<a name='more'></a><br />\n<br />\nNote: you'll need to sign up for an AWS account to follow this post, you can do that <a href=\"http://aws.amazon.com/\">here</a></div>\n<div>\n<br /></div>\n<h3>\nCreating a Database</h3>\n<div>\nAt this point I should let you know that you need to change your region to \"EU West (Ireland)\" (on the top right of the screen). This is because currently the EC2 Container Service is only available at that location (in Europe), for ease of communication we're going to create both containers in the same region.</div>\n<div>\n<br /></div>\n<div>\nTo start creating a database first log into the AWS Services menu and select RDS from the arguably over populated dropdown.&nbsp;</div>\n<div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-gvJm2wNrdnY/VYlAwGkjK9I/AAAAAAAAABc/W8vgLJ0izCk/s1600/SelectRDS.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"228\" src=\"http://1.bp.blogspot.com/-gvJm2wNrdnY/VYlAwGkjK9I/AAAAAAAAABc/W8vgLJ0izCk/s400/SelectRDS.PNG\" width=\"400\" /></a></div>\nNow you just need to click the \"Launch a DB Instance\" button to start the wizard.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-e38ZWgoshDs/VYlCJpTltpI/AAAAAAAAAB0/3kAOtDt3kQg/s1600/launch%2Ba%2BDB%2Binstance.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" height=\"130\" src=\"http://2.bp.blogspot.com/-e38ZWgoshDs/VYlCJpTltpI/AAAAAAAAAB0/3kAOtDt3kQg/s320/launch%2Ba%2BDB%2Binstance.PNG\" width=\"320\" /></a></div>\n<br />\nFor this instance we would suggest creating a PostgreSQL database. This was decided after a short debate with my colleagues, in which it was agreed (unanimously I might add) that elephants are better than dolphins.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-gocctALyx24/VYlEKgrVo2I/AAAAAAAAACA/UdxCpxzUJh8/s1600/postgreSQL%2Bselect.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"199\" src=\"http://4.bp.blogspot.com/-gocctALyx24/VYlEKgrVo2I/AAAAAAAAACA/UdxCpxzUJh8/s320/postgreSQL%2Bselect.PNG\" width=\"320\" /></a></div>\n<br />\nWe're not planning on doing too much production with this database so on the next screen select <b>No</b>.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-Loy08H6WkV4/VYlErE-lf5I/AAAAAAAAACI/MfuFY-3whYY/s1600/production%2Bdatabase.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"208\" src=\"http://3.bp.blogspot.com/-Loy08H6WkV4/VYlErE-lf5I/AAAAAAAAACI/MfuFY-3whYY/s400/production%2Bdatabase.PNG\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nSo now we need to add the DB details - which I've kindly added in the screen shot below.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-IB0kKbMedfM/VYlGMSoY9YI/AAAAAAAAACc/pVQbDq7mtoM/s1600/DbSettings.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://4.bp.blogspot.com/-IB0kKbMedfM/VYlGMSoY9YI/AAAAAAAAACc/pVQbDq7mtoM/s640/DbSettings.PNG\" width=\"526\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nFinal step now, where we'll be configuring the advanced settings, which should come as no surprise if you've looked at the name of this particular step. Once again the settings are available in the screen shots below</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-OCGQs8_rp-U/VYlHj_mqwMI/AAAAAAAAACo/_07deObYQFM/s1600/db%2Badvanced%2Bsettings%2B1.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"640\" src=\"http://3.bp.blogspot.com/-OCGQs8_rp-U/VYlHj_mqwMI/AAAAAAAAACo/_07deObYQFM/s640/db%2Badvanced%2Bsettings%2B1.PNG\" width=\"536\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-oVTf6iig17Q/VYlHo3QcKnI/AAAAAAAAACw/vUGfmFVrGhQ/s1600/db%2Badvanced%2Bsettings%2B2.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"280\" src=\"http://3.bp.blogspot.com/-oVTf6iig17Q/VYlHo3QcKnI/AAAAAAAAACw/vUGfmFVrGhQ/s640/db%2Badvanced%2Bsettings%2B2.PNG\" width=\"640\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nNow click the launch button and in no time at all you'll see a helpful little message saying that your DB instance is being created. Click on the \"View Your DB Instance\" button to watch the magic, and by \"magic\" I of course mean \"a little blue rotating circle\". You might need to wait a short while, but eventually the status will turn green and read as \"available\" and by expanding it, you should see the following:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-LkxSpvaufzM/VYlKD7-HA_I/AAAAAAAAADE/3Dw4WPkShY4/s1600/db%2Bavailale..PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"284\" src=\"http://1.bp.blogspot.com/-LkxSpvaufzM/VYlKD7-HA_I/AAAAAAAAADE/3Dw4WPkShY4/s640/db%2Bavailale..PNG\" width=\"640\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\nOur sharper-eyed readers will have noticed that I circled the Endpoint url for the database. Which in my case is \"processenginedemo.chg37mv5ului.eu-west-1.rds.amazonaws.com\".You should memorize it (or copy it) as you're going to need that later on when setting up the EC2 Container.<br />\n<br />\n<h3>\nCreating an EC2 Container</h3>\n<div>\nNow to create the EC2 Container. The idea here is to create a simple container that will load and deploy a docker image of the Camunda platform. To start we return to the overcrowded Services menu and select \"EC2 Container Service\"</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-kg7EA0pz0Sc/VYlPB605VwI/AAAAAAAAADU/3Rt6czEuyE4/s1600/EC2%2Bselect.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"240\" src=\"http://1.bp.blogspot.com/-kg7EA0pz0Sc/VYlPB605VwI/AAAAAAAAADU/3Rt6czEuyE4/s400/EC2%2Bselect.PNG\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div>\n<br /></div>\n<div>\nAmazon has created a handy little wizard for creating the container, click the \"Get started\" button to begin the fun!&nbsp;</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-r9HAzbvio6c/VYlPy6eknuI/AAAAAAAAADc/rOBBRK9zkUA/s1600/EC2%2Bget%2Bstarted.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"150\" src=\"http://3.bp.blogspot.com/-r9HAzbvio6c/VYlPy6eknuI/AAAAAAAAADc/rOBBRK9zkUA/s320/EC2%2Bget%2Bstarted.PNG\" width=\"320\" /></a></div>\nWe're going to be creating our own custom definition, so select accordingly<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-AdoAtYwosAc/VYlQLXRUYtI/AAAAAAAAADk/4HposErxyAw/s1600/EC2%2Bcustom.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"213\" src=\"http://3.bp.blogspot.com/-AdoAtYwosAc/VYlQLXRUYtI/AAAAAAAAADk/4HposErxyAw/s400/EC2%2Bcustom.PNG\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<br />\nThe next step of the wizard is where the task definition is named, memory is allocated and parameters are created. To make that whole process both faster and easier you can click on the JSON tab and simply paste this JSON text which I've created with my own fair hands.<br />\n<br />\n<pre class=\"prettyprint\"><code>\n{\n  \"family\": \"Camunda\",\n  \"containerDefinitions\": [\n    {\n      \"name\": \"camunda_bpm_platform\",\n      \"image\": \"camunda/camunda-bpm-platform\",\n      \"cpu\": \"800\",\n      \"memory\": \"500\",\n      \"entryPoint\": [],\n      \"environment\": [\n        {\n          \"name\": \"DB_DRIVER\",\n          \"value\": \"org.postgresql.Driver\"\n        },\n        {\n          \"name\": \"DB_USERNAME\",\n          \"value\": \"camunda\"\n        },\n        {\n          \"name\": \"DB_PASSWORD\",\n          \"value\": \"nobullshitbpm\"\n        },\n        {\n          \"name\": \"DB_URL\",\n          \"value\": \"jdbc:postgresql://processenginedemo.chg37mv5ului.eu-west-1.rds.amazonaws.com\"\n        }\n      ],\n      \"command\": [],\n      \"portMappings\": [\n        {\n          \"hostPort\": \"80\",\n          \"containerPort\": \"8080\"\n        }\n      ],\n      \"volumesFrom\": [],\n      \"links\": [],\n      \"mountPoints\": [],\n      \"essential\": true\n    }\n  ],\n  \"volumes\": []\n}\n\n</code></pre>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-Wz7vyueORSo/VYlTZryd3uI/AAAAAAAAADw/3c9FBX9HQ0Q/s1600/EC2%2BJSON%2BBuild.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"338\" src=\"http://2.bp.blogspot.com/-Wz7vyueORSo/VYlTZryd3uI/AAAAAAAAADw/3c9FBX9HQ0Q/s640/EC2%2BJSON%2BBuild.PNG\" width=\"640\" /></a></div>\n<br />\nWhen you click back to the \"Build\" tab, you will see an entry called \"camunda_bpm_platform\" in the container definitions. The fun hasn't ended yet - click on the definition because you still need to change one of the variables. Remember the database link that I told you to memorize? Well you're going use it to create the DB_URL variable.<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-E7u8NnY-Nrw/VYlVbH4299I/AAAAAAAAAD8/Su9urHzn7CY/s1600/EC2%2Burl%2Bvariable.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"270\" src=\"http://2.bp.blogspot.com/-E7u8NnY-Nrw/VYlVbH4299I/AAAAAAAAAD8/Su9urHzn7CY/s640/EC2%2Burl%2Bvariable.PNG\" width=\"640\" /></a></div>\n<br />\n<br />\nIn the annoying tiny text field circled above add \"jdbc:postgresql://\" followed by the link to your database. Once you've done that - click update and move onto the next step.<br />\n<br />\nWhile on the next step, if someone happens to ask you what you're doing, you can tell them \"I'm defining a service, giving it a name and setting up elastic load balancing\". It sounds a lot better than the reality, which is that you're just copying from the screen shot below:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-1yO5y5pGftw/VYlZS-Bb8nI/AAAAAAAAAEI/YT4XDnZ4zlM/s1600/EC2%2Bload%2Bbalancer.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://2.bp.blogspot.com/-1yO5y5pGftw/VYlZS-Bb8nI/AAAAAAAAAEI/YT4XDnZ4zlM/s640/EC2%2Bload%2Bbalancer.PNG\" width=\"640\" /></a></div>\n<br />\nThe final part of the setup is configuring the cluster and sorting out security groups. The top half of the step deals with the latter. You can see the settings in the screenshot below:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-7nYmBRBj9tA/VYpeSAPyPOI/AAAAAAAAAEc/fWRI9XnMTec/s1600/EC2%2Bcluster%2Bconfig.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"248\" src=\"http://4.bp.blogspot.com/-7nYmBRBj9tA/VYpeSAPyPOI/AAAAAAAAAEc/fWRI9XnMTec/s640/EC2%2Bcluster%2Bconfig.PNG\" width=\"640\" /></a></div>\n<br />\nIn the IAM Role information sections you'll need to create an ECS instance role and an ECS service role. This is actually a really straightforward process, click on the button circled below<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-41DoePZPy6k/VYpgfVZbkWI/AAAAAAAAAE4/hOJgn4nOeSU/s1600/EC2%2BCluster%2Bsecurity.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://3.bp.blogspot.com/-41DoePZPy6k/VYpgfVZbkWI/AAAAAAAAAE4/hOJgn4nOeSU/s640/EC2%2BCluster%2Bsecurity.PNG\" width=\"640\" /></a></div>\n<br />\nwhich will bring you to the following page - you don't need to do anything more than simply clicking \"Allow\". Then you can return to the IAM Role information page and you'll able to select the two roles from the drop down menu.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-i__bdtk4D3Q/VYphvs0iyBI/AAAAAAAAAFA/FqvRdNIqONo/s1600/EC2%2Bcreating%2Broles.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"221\" src=\"http://3.bp.blogspot.com/-i__bdtk4D3Q/VYphvs0iyBI/AAAAAAAAAFA/FqvRdNIqONo/s400/EC2%2Bcreating%2Broles.PNG\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe last thing to do on this step is to click \"Review &amp; Launch\". It should come as no surprise to anyone that once that button is clicked you'll be taken to the final step where you'll get to... (spoiler)... review and launch your instance.&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nSo before the excitement of coming to the end of this setup wizard overtakes you completely - click \"Launch Instance and Run Service\".&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nMore behind-the-scenes magic is taking place - this is visualized by an unremarkable blue bar slowly crawling from left to right.&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-NAcoiXNzC8o/VYpsJQeR1vI/AAAAAAAAAFQ/LysZk7_pT90/s1600/EC2%2Bfinal%2B2.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"300\" src=\"http://3.bp.blogspot.com/-NAcoiXNzC8o/VYpsJQeR1vI/AAAAAAAAAFQ/LysZk7_pT90/s640/EC2%2Bfinal%2B2.PNG\" width=\"640\" /></a></div>\n<br />\n&nbsp;When it eventually finishes you can go back to the EC2 container service though the services menu and instead of being greeted by a creation wizard, you'll in fact see your newly setup cluster, lazily named \"default\"<br />\n<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-yX1zF8bDnHk/VYpujHH-VmI/AAAAAAAAAFc/oTnNiAmfFZY/s1600/Cluster.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"220\" src=\"http://4.bp.blogspot.com/-yX1zF8bDnHk/VYpujHH-VmI/AAAAAAAAAFc/oTnNiAmfFZY/s320/Cluster.PNG\" width=\"320\" /></a></div>\n<br />\nClick on the cluster's name to have a look at what's going on inside, you'll see a task running in the Tasks tab. If you don't see the task up and running - have no fear, it might take a minute or two. Meanwhile in the ECS Instance tab you'll see the container instance.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-JTL9uMRmU2s/VYp1tsmWpAI/AAAAAAAAAFs/_sCqp63Kl78/s1600/Cluster%2Bcontainer.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"284\" src=\"http://1.bp.blogspot.com/-JTL9uMRmU2s/VYp1tsmWpAI/AAAAAAAAAFs/_sCqp63Kl78/s640/Cluster%2Bcontainer.PNG\" width=\"640\" /></a></div>\nClicking on the name of the instance will bring you to a page displaying more details about the container including the public DNS.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-g3nwuzndiKI/VYp2vpM2abI/AAAAAAAAAF0/1deAGiQjbOQ/s1600/Cluster%2BDNS%2Blink.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"132\" src=\"http://4.bp.blogspot.com/-g3nwuzndiKI/VYp2vpM2abI/AAAAAAAAAF0/1deAGiQjbOQ/s320/Cluster%2BDNS%2Blink.PNG\" width=\"320\" /></a></div>\n<br />\n<br />\nFollowing that link in your browser will bring you to an apache tomcat page and adding \"/camunda\"<br />\nto the end of the link will bring to what we've all been waiting for - the Camunda BPM platform!<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-ONNFgo4-zJA/VYp3YMtmbsI/AAAAAAAAAGA/k4gTv1OlveQ/s1600/Cluster%2Bcamunda%2Bplatform.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"342\" src=\"http://4.bp.blogspot.com/-ONNFgo4-zJA/VYp3YMtmbsI/AAAAAAAAAGA/k4gTv1OlveQ/s640/Cluster%2Bcamunda%2Bplatform.PNG\" width=\"640\" /></a></div>\nNow you can relax and enjoy playing with skillfully-automated processes all thanks to me (and to a lesser extent AWS)!<br />\n<br />\n<br /></div>\n",
   "author": {
    "id": "g106964363964405276828",
    "displayName": "Niall Deehan",
    "url": "https://www.blogger.com/profile/18277487500921821452",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3984678971437737984/comments"
   },
   "labels": [
    "amazon web services",
    "camunda bpm platform",
    "docker"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6393608824509287772",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-06-19T17:31:00+02:00",
   "updated": "2015-06-19T17:31:42+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM0NzI3OTAyODgwCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/06/spring-boot-support-in-camunda-new.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6393608824509287772",
   "title": "Spring Boot Support in Camunda - new Community Extension",
   "content": "I am very, very excited about this: the Camunda community now actively collaborates around providing support for Spring Boot.<br />\n<br />\nThis is extremely cool and allows users to deploy Camunda process engine including the Rest Api and the Webapplication in <a href=\"http://projects.spring.io/spring-boot/\">Spring Boot</a>.<br />\n<br />\nThe project is in a very early stage, if you want to participate, join the <a href=\"https://groups.google.com/forum/?fromgroups=&hl=en#!topic/camunda-bpm-dev/sV0sg7-4Hyo\">ongoing discussion on the dev list</a> and checkout the <a href=\"https://github.com/camunda/camunda-spring-boot-starter\">sources in GitHub</a>!<br />\n<br />\nMany thanks to Oliver Steinhauer who provided an initial implementation that the community decided to collaborate around.",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6393608824509287772/comments"
   },
   "labels": [
    "spring"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5988137397959708322",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-06-15T14:57:00+02:00",
   "updated": "2015-06-15T14:57:59+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM0MzczMDc5OTA0Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/06/would-you-use-apache-cassandra-for.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5988137397959708322",
   "title": "Would you use Apache Cassandra for Camunda persistence?",
   "content": "I am currently planning a hack session with people who are interested in using <a href=\"http://cassandra.apache.org/\">Apache Cassandra</a> as database for Camunda Process engine.<br />\nTheir main motivation for supporting us is that their whole application is running on Apache Cassandra and they want to use Cassandra as persistence provider for their workflows as well.<br />\nThey have extensive experience with Cassandra and want to contribute their work as open source.<br />\n<br />\nIf the hacksession which will take place at the beginning of July is successful, we would setup a public repository on GitHub were the community could collaborate around this.<br />\n<br />\n<a href=\"https://tech.zalando.com/blog/camunda-meets-cassandra-at-zalando/\">I have blogged about our friends at Zalando doing work in that direction as well.</a><br />\n<br />\nWould more people be interested in being able to use Apache Cassandra as persistence provider for Camunda?<br />\nIf true, maybe you can provide some feedback of the following questions:<br />\n<ol><li>Why do you want to use Apache Cassandra and not a relational Database like PostgreSQL?</li>\n<li>Which parts of the process engine Api would you use with Cassandra? BPMN Workflow Execution, Task Management, History...?</li>\n<li>In which situations would you be willing to compromise on consistency?</li>\n</ol><br />\nIf you have any comments on this, please get in touch with us by commenting here or pinging me on twitter <a href=\"https://twitter.com/meyerdan\">@meyerdan</a>.<br />\n<br />\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "4",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5988137397959708322/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "427789531189992400",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-06-11T13:53:00+02:00",
   "updated": "2015-06-25T13:54:13+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDM1MjMzMjUzMjUzCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/06/why-we-re-implemented-bpmn-multi.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/427789531189992400",
   "title": "Why we Re-Implemented BPMN Multi-Instance Support in 7.3",
   "content": "<div class=\"markdown-body\">\nHave you ever experienced bugs with multi-instance activities? You may choose from any of these: <a href=\"https://app.camunda.com/jira/browse/CAM-986\">CAM-986</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-1731\">CAM-1731</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2075\">CAM-2075</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2338\">CAM-2338</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2787\">CAM-2787</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2897\">CAM-2897</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-3851\">CAM-3851</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-3925\">CAM-3925</a>.<br />\nFrom the engine's early beginnings, its multi-instance implementation was more of a quick hack than a durable solution. Yet, it was carried from release to release, the pile of bugs and hair lost by desperate developers growing steadily. With <a href=\"http://blog.camunda.org/2015/05/camunda-bpm-730-final-released.html\">Camunda BPM 7.3</a>, we have <a href=\"https://github.com/camunda/camunda-bpm-platform/commit/8a33d5037dd11181430cea8d9f775a65e5322ce1#diff-87938bc1730f8f4d5356659ed486eb7d\">refactored multi-instance</a> fundamentally, drying one of the largest bug sources and fighting developer bald-headedness.<br />\nThis post provides insight into the engine's execution model, two alternatives of treating multi-instance in that model, and why we believe our recent changes have dramatically improved the situation.<br />\n<br />\n<a name='more'></a><br />\n<h2 id=\"onprocessexecution\">\nOn Process Execution</h2>\nIn order to understand the implementation of multi-instance, we have to make a quick excursion into how the process engine executes a process model. Let us consider the following process (without multi instance):<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-2sEhRWNY40M/VXmDPuuDtOI/AAAAAAAAAB8/9HyathYAFII/s1600/diagram-scaled.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-2sEhRWNY40M/VXmDPuuDtOI/AAAAAAAAAB8/9HyathYAFII/s1600/diagram-scaled.png\" /></a></div>\n<br />\nIn order to execute an instance of this process, the process engine needs two things:<br />\n<ul>\n<li><i>Activity Model</i>: A representation of the process model that allows to reason about the causality of activities and other execution-relevant aspects</li>\n<li><i>Execution State Model</i>: A representation of process instance state, like <i>tokens</i></li>\n</ul>\nFor the first problem, the process engine parses the BPMN 2.0 XML and creates a <code>ProcessDefinition</code> that contains representations of all the activities in the process model. This is not a loose collection of activities. Instead it maintains the necessary relations between activities required for process execution. These relations are either represented as sequence flow (internally called <i>transitions</i>) in case of direct causality or a parent-child relationship in case that an activity is contained within another. The example process is represented as follows:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-8lGAEpDxcFs/VXcJWmRJozI/AAAAAAAAABI/Tum7NrBXKbk/s1600/activityModel1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"> <img border=\"0\" src=\"http://1.bp.blogspot.com/-8lGAEpDxcFs/VXcJWmRJozI/AAAAAAAAABI/Tum7NrBXKbk/s1600/activityModel1.png\" /></a> </div>\n<br />\nActivities are represented as blue boxes and may be related by a <i>happens before</i> or a parent-child relationship. These relations do not suffice to represent all aspects relevant to execution, which is why activities have further properties. The most important property is the <i>activity behavior</i> (yellow boxes) that implements what the activity means in the BPMN diagram, such as creating a task in a user's task list.<br />\nFor the execution state model, i.e. to represent which activities are currently active, the process engine has a concept called <i>executions</i>. An execution can be understood as something in between an activity instance (meaning that for every active activity, there is always at least one execution) and a token (meaning that executions can move from one activity to the next).<br />\nThese two concepts allow to define a simplified model of process execution:<br />\n<ul>\n<li>When a process instance is started, the process engine creates an initial execution on the start event of the process model</li>\n<li>An execution can be used to execute an activity and temporarily represent the corresponding activity instance</li>\n<li>When an activity instance has ended, the process engine evaluates the activity's outgoing sequence flow and executes the next activity (potentially re-using the current execution; token-like behavior)</li>\n<li>When a scope is executed, new executions are created that execute activities contained within that scope (the current execution cannot be re-used; activity-instance-like behavior)</li>\n</ul>\nThese tasks are implemented in the very core of the Camunda engine, also referred to as the <i>Process Virtual Machine</i> (PVM). Note that the second task of the above list is much more complex than it looks at first sight. In detail, the follow steps need to be performed:<br />\nBefore executing the actual behavior (called <i>preparation phase</i> in the following):<br />\n<ul>\n<li>Initialize the activity instance</li>\n<li>Create a job for <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-asynchronous-continuations\">asynchronous continuation</a> (<i>asyncBefore</i>)</li>\n<li>Invoke <a href=\"http://docs.camunda.org/latest/guides/user-guide/#bpmn-model-api-delegation-code-execution-listener\">execution listeners</a> for the activity instance's <i>start</i> event</li>\n<li>Execute the activity's <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-variables-inputoutput-variable-mapping\">input variable mappings</a></li>\n<li>If this activity defines <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#overview-bpmn-20-overview-and-coverage-events\">events</a> (e.g. a boundary event), create the necessary event subscriptions and jobs</li>\n<li>Create a <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-history-and-audit-event-log\">history event</a> for the new activity instance</li>\n</ul>\nExecuting the actual behavior (called <i>execution phase</i>):<br />\n<ul>\n<li>Invoke the activity's implementation of <code>org.camunda.bpm.engine.impl.pvm.delegate.ActivityBehavior</code></li>\n</ul>\nAfter executing the actual behavior (called <i>finalization phase</i>):<br />\n<ul>\n<li>Invoke execution listeners for the activity instance's <i>end</i> event</li>\n<li>Execute the activity's output variable mappings</li>\n<li>Delete event subscriptions and jobs created before executing the behavior</li>\n<li>Create a history update event for the finished activity instance</li>\n<li>Create a job for asynchronous continuation (<i>asyncAfter</i>)</li>\n<li>Tear down the activity instance</li>\n</ul>\nAll of these concerns are <i>cross-cutting</i>. Regardless the type and behavior of an activity, they need to be executed for every single activity instance. The PVM implements these concerns in a mostly solid and clean way. Speaking in terms of the activity model diagram above, the PVM is designed to execute these aspects when the blue boxes are instantiated.<br />\nWith multi-instance the game becomes a little more complicated.<br />\n<h2 id=\"multiinstanceinthepvmmodel\">\nMulti-Instance in the PVM Model</h2>\nThere are different understandings on how multi-instance fits into the PVM's execution model. From 7.2 to 7.3, we have revised our understanding and re-implemented multi-instance based on a different view. The two concepts are:<br />\n<ul>\n<li><b>Pre 7.3</b>: Multi-instance is an aspect of the activity's behavior</li>\n<li><b>7.3</b>: Multi-instance is represented by a dedicated scope in the activity model, like an embedded sub process</li>\n</ul>\nFor explanation, let's consider a slightly changed process model where the activity <i>Write Blog Post</i> is now a parallel multi-instance activity:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-DbnPFnB_B2I/VXmDPnahqxI/AAAAAAAAAB4/_YWSIDMrK4g/s1600/mi-diagram-scaled.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-DbnPFnB_B2I/VXmDPnahqxI/AAAAAAAAAB4/_YWSIDMrK4g/s1600/mi-diagram-scaled.png\" /></a></div>\n<br />\n<h2 id=\"pre73multiinstance\">\nPre 7.3 Multi-Instance</h2>\nIn Camunda versions prior to 7.3, multi-instance is understood and implemented as an aspect of an activity's <code>ActivityBehavior</code>. That means, the actual <code>ActivityBehavior</code> (e.g. the behavior of invoking a web service in case of a service task) is wrapped in a multi-instance-specific behavior. In the activity model, this looks as follows:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-awuhJ-iq8ho/VXcJWr7o-oI/AAAAAAAAABM/i3oqLYYfVaQ/s1600/activityModel2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"> <img border=\"0\" src=\"http://1.bp.blogspot.com/-awuhJ-iq8ho/VXcJWr7o-oI/AAAAAAAAABM/i3oqLYYfVaQ/s1600/activityModel2.png\" /></a></div>\n<br />\nWhen this behavior is executed, it creates as many activity instances (= executions) as there are configured in the multi-instance loop characteristics and triggers them to execute the wrapped behavior.<br />\nHowever, this solution does not fit well with the PVM's execution model: As mentioned above, the execution of an activity instance is divided into (1) preparation, (2) execution, and (3) finalization phase and therefore spans much more than the invocation of the activity behavior. Let us consider what happens when executing an instance of <i>Write Blog Post</i> with this model:<br />\n<ol>\n<li>An execution (token) encounters the activity <i>Write Blog Post</i>; the PVM executes the preparation phase in the context of that execution and creates a new activity instance</li>\n<li>The PVM executes the execution phase and accordingly the multi-instance activity behavior</li>\n<li>The multi-instance activity behavior has to evaluate how many instances are configured and generate as many additional executions</li>\n<li>The multi-instance activity behavior has to perform the user task activity behavior in the context of these executions</li>\n<li>The multi-instance activity behavior must join these executions when they have finished execution and trigger process continuation when the last one has finished</li>\n<li>The PVM executes the finalization phase in the context of the execution leaving the activity</li>\n</ol>\nThe problem with this sequence is in the steps 3 to 5. Aspects that are part of the preparation and finalization phase and thus covered by the PVM must now be performed by the multi-instance activity behavior. For example, it must ensure that execution listeners are invoked for each of the configured instances. This is not as trivial as it sounds, since the listeners for the first instance have already been invoked during the regular preparation phase in step 1. It is as if the PVM regularly executes a single instance of the multi-instance activity and leaves it to the activity behavior to realize:<br />\n<blockquote>\nWait a second. This is multi-instance. I should create some more instances.</blockquote>\nSimilar to the issue with listeners, there are problems with each of the aspects executed in the preparation/finalization phases, resulting in a lot of code duplication and a lively source of bugs.<br />\n<h2 id=\"multiinstancein73\">\nMulti-Instance in 7.3</h2>\nIn Camunda 7.3, we changed the notion of multi-instance in the core engine fundamentally. Our change is based on the notion of a <i>multi-instance body</i>. A multi-instance body is a scope that contains the actual activity for which multi instance is configured (in the following referred to as the <i>inner activity</i>).<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-sVH9l3GtBP0/VXcJWkDjumI/AAAAAAAAABo/WyfpYCpADQg/s1600/activityModel3.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"> <img border=\"0\" src=\"http://3.bp.blogspot.com/-sVH9l3GtBP0/VXcJWkDjumI/AAAAAAAAABo/WyfpYCpADQg/s1600/activityModel3.png\" /></a></div>\n<br />\nRepresenting the body explicitly as a scope in the activity model is a convenient way of leveraging the PVM's execution model of preparation, execution, and finalization phases for multi-instance. When an activity instance of the body is executed in the context of an execution, the multi-instance activity behavior now only creates executions as configured in the loop characteristics and then tells the PVM to execute the inner activity as often as needed. All activity instances, the instance of the body and the instances of the inner activity, are now handled by the core PVM.<br />\nAs a side note: The multi-instance body is not something we have made up ourselves. The <a href=\"http://www.omg.org/spec/BPMN/2.0/PDF/\">BPMN 2.0 specification</a> mentions it in exactly one line (Section 10.4.7, page 281):<br />\n<blockquote>\nBPMN has the following model elements with scope characteristics:<br />\n<ul>\n<li>Choreography</li>\n<li>Pool</li>\n<li>Sub-Process</li>\n<li>Task</li>\n<li>Activity</li>\n<li>Multi-instances body</li>\n</ul>\nScopes are used to define the semantics of:<br />\n<ul>\n<li>Visibility of Data Objects (including DataInput and DataOutput)</li>\n<li>Event resolution</li>\n<li>Starting/stopping of token execution</li>\n</ul>\n</blockquote>\nSo the BPMN specification <i>does</i> foresee the need of multi-instance activities for an extra scope in which events or variables can be defined. Sadly enough though, it does not define the concept of a <i>multi-instances body</i> any further. Whether it is meant to be an actual activity (with a proper instance lifecycle) is left to the reader's imagination.<br />\n<h2 id=\"whatdowegain\">\nWhat do we gain?</h2>\nApart from improved code quality and maintainability, treating multi-instance body and inner activity as two separate things allows us to differentiate between them when executing any of the cross-cutting concerns of activity execution. To be more precise:<br />\n<b>Activity instances</b>: Have a look at the following process instance as shown in Cockpit:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-zeyGjlwLiqw/VXmFrYqMXYI/AAAAAAAAACs/UgSkpopK4os/s1600/cockpit-process.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-zeyGjlwLiqw/VXmFrYqMXYI/AAAAAAAAACs/UgSkpopK4os/s1600/cockpit-process.png\" /></a></div>\n<br />\nIn the tree of activity instance, it is now possible to represent the multi-instance body and relate single instances of the inner activity to instances of the body. It looks as follows in Camunda 7.3:</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-8ro6n15KAiU/VXmEoZbELTI/AAAAAAAAACg/nFSqXt-hJ_8/s1600/cockpit73.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-8ro6n15KAiU/VXmEoZbELTI/AAAAAAAAACg/nFSqXt-hJ_8/s1600/cockpit73.png\" /></a></div>\n<br />\nThe following shows the same process state in Camunda 7.2:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-kD3zyazJ34I/VXmEk5WxCyI/AAAAAAAAACY/_KXiL2CgweI/s1600/cockpit72.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-kD3zyazJ34I/VXmEk5WxCyI/AAAAAAAAACY/_KXiL2CgweI/s1600/cockpit72.png\" /></a></div>\nIn 7.2 and earlier, it is impossible to tell if both instances of MI Subprocess belong to one multi-instance activity instance with two inner instances or to two multi-instance activity instances with one inner instance each. <br />\n<b>History</b>: Similar to the previous point, the multi-instance body is now logged in the process engine history including start time, end time, and duration. This way it is easily possible to determine how long all instances have taken.<br />\n<b>Process Instance Modification</b>: The re-implementation made it possible to <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-instance-modification\">modify active multi-instance activities</a> with our new 7.3 feature. We had literally no idea how to build this with the pre 7.3 multi-instance concept.<br />\n<b>Asnychronous Continuation</b>: While not yet implemented, it is going to be possible to make either the multi-instance body (already works) or the inner activity asynchronous (does not work yet). The latter is a useful addition in cases of true parallelism since synchronization of inner instances can then be asynchronously performed after their actual work is done.<br />\n<b>Explaining Multi-Instance</b>: Summing up the previous points: It is now much easier to relate execution aspects to either the multi-instance body or the inner activity instances. Multi-instance and its behavior in Camunda can now be easier communicated and understood by both users and developers.",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/427789531189992400/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "105702268537339846",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-06-02T11:59:00+02:00",
   "updated": "2015-06-09T11:47:01+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDMzODQzMjIxOTA4Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/06/build-your-own-camunda-task-explorer.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/105702268537339846",
   "title": "Build your own camunda task explorer with CDI and JSF",
   "content": "There's a lot of interest in how to write a task list with CDI and JSF, and not a lot of up-to-date examples available. Until now! - In this blog post I'm going to show you how you can build your own task list with Camunda BPM<br />\n<a name='more'></a><br />\n<br />\n<h3>Build a process application with JSF and CDI</h3>To get tasks into your task list, you need to build a process application that includes at least one process definition, as well as some user tasks. A recipe to build a JSF based process application can be found in our <a href=\"http://docs.camunda.org/7.2/guides/getting-started-guides/java-ee/\" target=\"_blank\">getting started guide</a>.<br />\n<br />\nAfter completing the tutorial you'll have a <a href=\"https://github.com/camunda/camunda-get-started-javaee/blob/master/src/main/resources/pizza-order.bpmn\" target=\"_blank\">pizza&nbsp;order&nbsp;process</a> like this:<br />\n<div><br />\n</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-EvGCP6WjV6w/VVnk9DcNrQI/AAAAAAAAADs/ffd37WVEFjk/s1600/pizza-order.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"239\" src=\"http://3.bp.blogspot.com/-EvGCP6WjV6w/VVnk9DcNrQI/AAAAAAAAADs/ffd37WVEFjk/s640/pizza-order.PNG\" width=\"640\" /></a></div>It contains a simple <a href=\"https://github.com/camunda/camunda-get-started-javaee/blob/master/src/main/webapp/placeorder.xhtml\" target=\"_blank\">start form</a> to start process instances and a form to approve the order.<br />\n<pre class=\"prettyprint\"><code class=\"language-jsf\">&lt;!DOCTYPE HTML&gt;\n&lt;html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"\n  xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n  xmlns:h=\"http://java.sun.com/jsf/html\"\n  xmlns:f=\"http://java.sun.com/jsf/core\"&gt;\n\n&lt;f:view&gt;\n  &lt;f:metadata&gt;\n    &lt;!-- Start working on a task. Task Id is read internally from\n         request parameters and cached in the CDI conversation scope.\n    --&gt;\n    &lt;f:event type=\"preRenderView\" listener=\"#{camundaTaskForm.startTaskForm()}\" /&gt;\n  &lt;/f:metadata&gt;\n  &lt;h:head&gt;\n    &lt;title&gt;Approve Order&lt;/title&gt;\n  &lt;/h:head&gt;\n  &lt;h:body&gt;\n    &lt;h1&gt;Order:&lt;/h1&gt;\n    &lt;p&gt;Customer: #{approveOrderController.orderEntity.customer}&lt;/p&gt;\n    &lt;p&gt;Address: #{approveOrderController.orderEntity.address}&lt;/p&gt;\n    &lt;p&gt;Pizza: #{approveOrderController.orderEntity.pizza}&lt;/p&gt;\n    &lt;h:form id=\"submitForm\"&gt;\n      &lt;h:outputLabel&gt;Approve Order?&lt;/h:outputLabel&gt;\n      &lt;h:selectBooleanCheckbox value=\"#{approveOrderController.orderEntity.approved}\"/&gt;&lt;br/&gt;\n      &lt;h:commandButton id=\"submit_button\" value=\"Approve Order\" action=\"#{approveOrderController.submitForm()}\" /&gt;\n    &lt;/h:form&gt;\n  &lt;/h:body&gt;\n&lt;/f:view&gt;\n&lt;/html&gt;\n</code></pre>The forms use a pre-built bean&nbsp;<code><a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/engine-cdi/src/main/java/org/camunda/bpm/engine/cdi/jsf/TaskForm.java\" target=\"_blank\">org.camunda.bpm.engine.cdi.jsf.TaskForm</a>&nbsp;</code>to interact with the process instance. It's used to access the process instance and complete the task.<br />\n<br />\nThe code for the tutorial is also&nbsp;<a href=\"https://github.com/camunda/camunda-get-started-javaee\" target=\"_blank\">available on github</a>.<br />\n<br />\nYou can also use our <a href=\"http://docs.camunda.org/7.2/guides/user-guide/#process-applications-maven-project-templates-archetypes\" target=\"_blank\">maven project templates</a> to generate a project with a process and some form snippets and build your own process aplication. The <code>camunda-archetype-ejb-war</code> will be your friend.<br />\n<h3>Start a process instance from a list of process definitions</h3><div>To start a process instances with a JSF-start form you need a list of all process definitions. <a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/java/com/camunda/consulting/jsfSimpleTasklist/ProcessDefinitionList.java\" target=\"_blank\">This list</a> is very simple with injection of the process engine services:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">@SessionScoped\n@Named(\"startList\")\npublic class ProcessDefinitionList extends ProcessApplicationBean implements Serializable {\n  \n  @Inject\n  private RepositoryService repositoryService;\n  \n  @Inject\n  private FormService formService;\n  \n  @Inject\n  private RuntimeService runtimeService;\n  \n  public List&lt;ProcessDefinition&gt; getList() {\n    return repositoryService.createProcessDefinitionQuery().latestVersion().list();\n  }\n  \n  public String getAbsoluteStartFormKey(ProcessDefinition processDefinition) {\n    String startFormKey = \"\";\n    if (processDefinition.hasStartFormKey()) {\n      startFormKey = formService.getStartFormKey(processDefinition.getId());\n    }\n    \n    if (startFormKey.startsWith(\"app:\")) {\n      String applicationPath = getApplicationPath(processDefinition.getId());\n      return applicationPath + \"/\" + startFormKey.substring(4); \n    }\n    return startFormKey;\n  }\n}\n\n</code></pre>You will get this start form from it:<br />\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-tXRI6lJ0Lm8/VVnoxdwuS7I/AAAAAAAAAD4/_A6ixia4PkY/s1600/start-list.PNG\" imageanchor=\"1\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"416\" src=\"http://4.bp.blogspot.com/-tXRI6lJ0Lm8/VVnoxdwuS7I/AAAAAAAAAD4/_A6ixia4PkY/s640/start-list.PNG\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">List of all process definitions to start</td></tr>\n</tbody></table>After hitting the start button, the user will see the start form and after that form is completed, the process instance will start. The user will be able to see it in the task list now.<br />\n<br />\nThe <a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/webapp/app/startList.xhtml\" target=\"_blank\">starting of the process instance</a> and the navigation to the task list is based on a injected bean of a jsf actionListener:<br />\n<pre class=\"prettyprint\"><code class=\"language-jsf\">&lt;h:commandButton&nbsp;class=\"btn btn-small\"&nbsp;\n    rendered=\"#{!thisProcessDefinition.hasStartFormKey()}\"&nbsp;\n    action=\"taskList.jsf\"&nbsp;\n    actionListener=\"#{businessProcess.startProcessByKey(thisProcessDefinition.key)}\" \n    value=\"start\"/&gt;\n</code></pre><h3>Handle more than one process application</h3></div>If you have more than one process application deployed to your shared engine, the start list and the task list have to work with different servlet-context-paths.<br />\n<br />\nThis is done in the <a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/java/com/camunda/consulting/jsfSimpleTasklist/ProcessApplicationBean.java\" target=\"_blank\">super-class</a> of the ProcessDefinitionList:<br />\n<div><pre class=\"prettyprint\"><code class=\"language-java\">  \n  public String getApplicationPath(String processDefinitionId) {\n    String deploymentId = repositoryService\n        .getProcessDefinition(processDefinitionId)\n        .getDeploymentId();\n  \n    // get the name of the process application that made the deployment\n    String processApplicationName = managementService\n        .getProcessApplicationForDeployment(deploymentId);\n  \n    if (processApplicationName == null) {\n      // no a process application deployment\n      return null;\n    } else {\n      ProcessApplicationService processApplicationService =&nbsp;BpmPlatform.getProcessApplicationService();\n      ProcessApplicationInfo processApplicationInfo = processApplicationService.getProcessApplicationInfo(processApplicationName);\n      return processApplicationInfo\n          .getProperties()\n          .get(ProcessApplicationInfo.PROP_SERVLET_CONTEXT_PATH);\n    }\n  }\n</code></pre></div><h3>Working with tasks in JSF-tasklist</h3>Again, injecting the process engine services makes a <a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/java/com/camunda/consulting/jsfSimpleTasklist/TaskList.java\" target=\"_blank\">task list</a> very simple:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">@SessionScoped\n@Named\npublic class TaskList extends ProcessApplicationBean implements Serializable {\n\n  @Inject\n  private TaskService taskService;\n  @Inject\n  private FormService formService;\n  \n  private String assignee = null;\n\n  public void update() {\n    // do nothing here, since a refresh trigger a reload of the list anyway\n  }\n\n  public List<task> getList() {\n    if (assignee != null &amp;&amp; assignee.length() &gt; 0) {\n      return taskService.createTaskQuery().taskAssignee(assignee).initializeFormKeys().list();\n    } else {\n      return taskService.createTaskQuery().initializeFormKeys().list();\n    }\n  }\n\n  public String getAssignee() {\n    return assignee;\n  }\n\n  public void setAssignee(String assignee) {\n    this.assignee = assignee;\n  }\n</task></code></pre>Because I've concentrated on the technical details, our task list may looks like this:<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"https://github.com/camunda/camunda-consulting/raw/master/snippets/jsf-simple-tasklist/screenshot.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"412\" src=\"https://github.com/camunda/camunda-consulting/raw/master/snippets/jsf-simple-tasklist/screenshot.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Example task list</td></tr>\n</tbody></table><br />\nOf course, you can change the cryptic IDs against businessKeys and display more information from your business context.<br />\n<h3>Claiming and unclaiming</h3><div>If you work in groups, your colleagues should not be able to see the tasks that you are currently working on. Therefore the user has to claim a task. If you are unable to finish the work, you can give the task back to the team by \"claiming\" it with userID null.</div><div><br />\n</div><div>The methods for claim and unclaim looks like this:</div><pre class=\"prettyprint\"><code class=\"language-java\">  public void unclaim(Task task) {\n    taskService.claim(task.getId(), null);\n  }\n\n  public void claim(Task task) {\n    taskService.claim(task.getId(), currentUser);\n  }\n\n  private String currentUser = null;\n  \n  public String getFormKey(Task task) {\n    TaskFormData taskFormData = formService.getTaskFormData(task.getId());\n    if (taskFormData!=null) {\n      return taskFormData.getFormKey();\n    }\n    else {\n      // we do not want to fail just because we have tasks in the task list without form data (typically manually created tasks)\n      return null;\n    }\n  }\n  \n  public String getAbsoluteFormKey(Task task) {\n    String formkey = getFormKey(task);\n    if (formkey.startsWith(\"app:\")) {\n      String applicationPath = getApplicationPath(task.getProcessDefinitionId());\n      return applicationPath + \"/\" + formkey.substring(4);\n    } else {\n      return formkey;\n    }\n  }\n  \n  public String getCurrentUser() {\n    return currentUser;\n  }\n\n  public void setCurrentUser(String currentUser) {\n    this.currentUser = currentUser;\n  }\n\n</code></pre><div>This is the table of the <a href=\"https://github.com/camunda/camunda-consulting/blob/master/snippets/jsf-simple-tasklist/src/main/webapp/app/taskList.xhtml\" target=\"_blank\">taskList.xhtml</a>:</div><div><pre class=\"prettyprint\"><code class=\"language-jsf\">&lt;h:dataTable value=\"#{taskList.list}\" var=\"thisTask\" id=\"list\" cellspacing=\"0\" rowClasses=\"odd, even\" styleClass=\"table table-striped table-bordered\"&gt;\n  &lt;h:column&gt;&lt;f:facet name=\"header\"&gt;ID&lt;/f:facet&gt;#{thisTask.id}&lt;/h:column&gt;\n  &lt;h:column&gt;&lt;f:facet name=\"header\"&gt;name&lt;/f:facet&gt;&lt;strong&gt;#{thisTask.name}&lt;/strong&gt;&lt;/h:column&gt;\n  &lt;h:column&gt;&lt;f:facet name=\"header\"&gt;creation time&lt;/f:facet&gt;#{thisTask.createTime}&lt;/h:column&gt;\n  &lt;h:column&gt;&lt;f:facet name=\"header\"&gt;due date&lt;/f:facet&gt;#{thisTask.dueDate}&lt;/h:column&gt;\n  &lt;h:column&gt;&lt;f:facet name=\"header\"&gt;assignee&lt;/f:facet&gt;#{thisTask.assignee}&lt;/h:column&gt;\n  &lt;h:column&gt;&lt;f:facet name=\"header\"&gt;actions&lt;/f:facet&gt;\n    &lt;h:commandLink action=\"#{taskList.claim(thisTask)}\" value=\"claim\" type=\"submit\" class=\"btn btn-small\"/&gt;\n    &lt;h:commandLink action=\"#{taskList.unclaim(thisTask)}\" value=\"release\" type=\"submit\" class=\"btn btn-small\"/&gt;\n    &lt;h:outputLink value=\"#{taskList.getAbsoluteFormKey(thisTask)}\" class=\"btn btn-small\"&gt;\n      &lt;f:param name=\"taskId\" value=\"#{thisTask.id}\"&gt;&lt;/f:param&gt;\n      &lt;f:param name=\"callbackUrl\" value=\"#{request.contextPath}/app/taskList.jsf\"&gt;&lt;/f:param&gt;\n      complete\n    &lt;/h:outputLink&gt;\n  &lt;/h:column&gt;\n&lt;/h:dataTable&gt;\n</code></pre></div><div><h3>Conclusion</h3>The complete Github repo of this task list example is in <a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/jsf-simple-tasklist\" target=\"_blank\">consulting/snippets/jsf-simple-tasklist</a>.<br />\n<br />\nHave fun with JSF-Tasklists.<br />\n<br />\n</div>",
   "author": {
    "id": "g114697388531686487620",
    "displayName": "Ingo Richtsmeier",
    "url": "https://www.blogger.com/profile/11127045572873296897",
    "image": {
     "url": "//lh5.googleusercontent.com/-QalsZgNcJcM/AAAAAAAAAAI/AAAAAAAAABk/KIj_K_-huz4/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/105702268537339846/comments"
   },
   "labels": [
    "jsf",
    "tasklist"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7810092998193586351",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-05-29T13:00:00+02:00",
   "updated": "2015-05-29T13:00:41+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDMyODk3MjQxMTA5Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/05/camunda-bpm-730-final-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7810092998193586351",
   "title": "Camunda BPM 7.3.0 Final Released",
   "content": "I’m pleased to announce the availability of Camunda 7.3.0 Final. The release focuses on improving Camunda BPM for large production deployments. The highlights are:<br />\n<ul><li>Process instance repair and modification: go back or skip ahead in a process.</li>\n<li>Authorizations: restrict access to processes, tasks and administrative actions.</li>\n<li>Search for process instances and incidents in Cockpit</li>\n<li>Starting new process instance at any activity / set of activities</li>\n<li>Tasklist extensibility and customization: extend the Tasklist Web Application with Html and Javascript based plugins.</li>\n</ul>A <a href=\"#features-overview\">detailed feature overview</a> can be found at the end of this the post.<br />\n<div style=\"background-color: #f4f6f4; border: 1px solid #e4e6e4; border-radius: 3px; max-width: 500px; overflow: hidden; margin: 30px auto;\">  <h2 style=\"padding: 15px; float: left; position: relative; margin: 0; display-block; text-align: center; width: 300px; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;\">    <a href=\"http://camunda.org/download\" title=\"Oh Yeah!\" style=\"font-size: 28px; line-height: 32px; display: block; text-align: center;\">Download For Free</a>   </h2><h3 style=\"padding: 15px; float: right; position: relative; margin: 0; display-block; text-align: center; width: 200px; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;\">    <a href=\"https://registry.hub.docker.com/u/camunda/camunda-bpm-platform/\" title=\"Ahoi!\" style=\"font-size: 20px; line-height: 32px; display: block; text-align: center;\">Run with Docker</a>   </h3></div><div style=\"text-align:center; width:100%\"><a href=\"https://network.camunda.org/webinars/28\">Register for the Webinar</a><br />\n</div><a name='more'></a><br />\n<h2>Process Instance Repair and Modification</h2>Sometimes process instances somehow take a wrong turn or end up in a state they should not be in. Or, you need to \"rewind\", \"go back\" in order to re-execute some steps with different parameters. Sometimes you also need to skip some steps for whatever reason. Yes, that should not happen but in reality there are all kinds of things that can go wrong in the environment of a process which lead to a situation where you need to \"repair\" a process instance. Camunda now provides a killer feature for this:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-rZ_WJwqplJ4/VWczW-p6MvI/AAAAAAAACVU/nLtw4W7POyA/s1600/modification.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"400\" src=\"http://4.bp.blogspot.com/-rZ_WJwqplJ4/VWczW-p6MvI/AAAAAAAACVU/nLtw4W7POyA/s640/modification.gif\" width=\"640\" /></a></div><br />\nWe call this feature <em>Process instance Modification</em>. It allows you to freely start or cancel any activity in a BPMN process or \"move\" a token by cancelling the current activity and starting another activity as shown in the animation above. <!--Implementing this feature in a way that it functions consistently for all supported BPMN elements including for constructs such as multi instance sub processes was hard but we managed to do it. On our way, we substantially improved the internal implementation of the BPMN execution core (again :)). As a result, the internal implementation is now much easier to understand and constructs such as multi instance and event subprocesses are implemented in a much simpler way and in a way which is more compliant to the BPMN specification.--><br />\n<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-process-instance-modification\">More information on process instance modification including the corresponding apis can be found in the docs.</a><br />\n<br />\n<em>Note: In the community edition, the feature is exposed through the Java and Rest apis. The <a href=\"http://docs.camunda.org/7.3/guides/user-guide/#cockpit-process-instance-modification\">UI plugin for Cockpit</a> shown in the animation above is only included in the <a href=\"http://camunda.com/bpm/enterprise/\">Commercial version of Camunda BPM</a>.</em><br />\n<br />\n<h2>Authorizations</h2>Camunda now features a full fledged authorization framework allowing you to configure<br />\n<ul><li>which tasks, processes, cases... a user is allowed to see,</li>\n<li>how a user can interact with these resources, for instance, which tasks a user is authorized to complete, which processes he can start and so forth.</li>\n</ul>Authorizations can be configured in the Camunda Admin application (or using the Java and Rest apis):<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-grgci47AB_I/VWb8IaILRuI/AAAAAAAACUs/QPOG3DpVvmA/s1600/authorizations.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"396\" src=\"http://4.bp.blogspot.com/-grgci47AB_I/VWb8IaILRuI/AAAAAAAACUs/QPOG3DpVvmA/s640/authorizations.png\" width=\"640\" /></a></div>Once configured, authorizations are enforced by the Java api and the Rest api.<br />\n<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-authorization-service\">More details on authorizations can be found in the User Guide</a>.<br />\n<br />\n<h2>Search for process instances and incidents in Cockpit</h2>In Cockpit, you can now search for process instances and incidents (failures) on the dashboard. You can use all the criteria provided by the historic process instance and incident search api:<br />\n<a href=\"http://2.bp.blogspot.com/-RlXkP9OPA8A/VWgqWcaKm5I/AAAAAAAACXY/DaP7f14Au6E/s1600/cockpit-search.png\" imageanchor=\"1\" ><img border=\"0\" src=\"http://2.bp.blogspot.com/-RlXkP9OPA8A/VWgqWcaKm5I/AAAAAAAACXY/DaP7f14Au6E/s640/cockpit-search.png\" /></a><br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#cockpit-dashboard-search\">More information can be found in the docs</a><br />\n<br />\n<br />\n<h2>Starting new process instance at any activity / set of activities</h2>You can now start a process instance at any activity / set of activities. The following example shows how to create a new process instance which does not start at the start event but at two other activities (\"SendInvoiceReceiptTask\" and \"DeliverPizzaSubProcess\"):<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">ProcessInstance instance = runtimeService.createProcessInstanceByKey(\"invoice\")\n  .startBeforeActivity(\"SendInvoiceReceiptTask\")\n    .setVariable(\"creditor\", \"Nice Pizza Inc.\")\n  .startBeforeActivity(\"DeliverPizzaSubProcess\")\n    .setVariableLocal(\"destination\", \"12 High Street\")\n  .execute();\n</code></pre><a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-process-engine-concepts-starting-a-process-instance-at-any-set-of-activities\">More details can be found in the documentation.</a><br />\n <br />\n<h2>Tasklist Extensibility and Customization</h2>You can now extend and customize Camunda Tasklist with plugins.<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-72gOpFz2Lb0/VWgLyRSkTxI/AAAAAAAACXI/wex3YC2TdkU/s1600/tasklist.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-72gOpFz2Lb0/VWgLyRSkTxI/AAAAAAAACXI/wex3YC2TdkU/s640/tasklist.png\" /></a></div><br />\nTasklist plugins can be implemented with HTML and Java Script. They allow you to add additional domain specific functionality to the tasklist.<br />\n<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#tasklist-plugins\">More details on Tasklist Plugins can be found in the Docs.</a><br />\n<br />\n<h2>Getting the new Release</h2><a href=\"http://camunda.org/download\">Download Camunda</a> or <a href=\"https://registry.hub.docker.com/u/camunda/camunda-bpm-platform/\">run it with Docker</a>.<br />\nYou can use <a href=\"http://docs.camunda.org/7.3/guides/getting-started-guides/#apache-maven-apache-maven-coordinates\">Apache Maven</a> for embedding Camunda in your custom java applications.<br />\n<br />\n<h2>Enterprise Support</h2>This new minor release is fully supported in the <a href=\"http://camunda.com/bpm/enterprise/\">Camunda BPM Enterprise Subscription</a>. Support includes Help Requests based on different SLAs as well as access to maintenance releases. Maintenance releases allow customers to get bugfixes for production systems based on the 7.3 branch. While the community project will now start working on 7.4, we will backport bugfixes to the 7.3 branch and perform maintenance releases reserved for enterprise subscription customers.<br />\n<br />\n<h2>Upgrading to 7.3.0</h2>There is a <a href=\"http://docs.camunda.org/7.3/guides/migration-guide/#migrate-from-camunda-bpm-72-to-73\">Migration Guide</a> targeting existing Camunda BPM 7.2 installations.<br />\n<br />\n<h2 id=\"features-overview\">Detailed Feature Overview</h2>Here is a more detailed feature overview of both Api and web application features:<br />\n<br />\n<h4>New Api Features</h4><ul><li><a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-authorization-service\">Authorization Framework</a>,</li>\n<li>Runtime Api:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-process-engine-concepts-starting-a-process-instance-at-any-set-of-activities\">Starting a Process Instance at any activity / set of activities</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-process-instance-modification\">Process instance repair and modification: go back and skip ahead in a process</a>,</li>\n<li>History Api:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-history-and-audit-event-log-history-entities\">Monitor Job Execution with Historic Job Log</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-history-and-audit-event-log-partially-sorting-history-events-by-their-occurrence\">Sorting History Events by occurrence</a>, Extended auditing through User Operation Log,</li>\n<li>Task Api:<br />\nsort by variable value, additional search parameters</li>\n<li>BPMN:<br />\nRe-implementation of Multi Instance Loop Characteristics,<br />\nCorrect implementation of Event Subprocess,</li>\n<li>CMMN:<br />\n<a href=\"http://docs.camunda.org/7.3/api-references/cmmn10/#overview-cmmn-10-overview-and-coverage-markers\">Required Rule</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/api-references/cmmn10/#markers-auto-complete\">Auto Complete</a><br />\n<a href=\"http://docs.camunda.org/7.3/api-references/bpmn20/#subprocesses-call-activity-create-a-case-instance\">Use BPMN Call Activity for starting a CMMN Case</a></li>\n<li>Data format Api:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#data-formats-xml-json-other-json-native-json-variable-value\">native support for Json and XML variables</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/api-references/spin/#handling-xml-querying-xml-querying-with-namespaces\">support for namespaces in XPath</a>,</li>\n<li><a href=\"http://docs.camunda.org/7.3/guides/user-guide/#introduction-supported-environments\">Support for additional Databases, Application Servers and Java Runtimes</a>,</li>\n<li>Job Executor:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#process-engine-the-job-executor-the-job-order-of-job-acquisition\">Control order of Job Execution</a></li>\n</ul><br />\n<h4>New Web Application Features</h4><ul><li>Cockpit:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#cockpit-process-instance-modification\">Process Instance Modification</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#cockpit-dashboard-search\">Advanced Search</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#cockpit-history-view-process-instance-historical-view\">Historic Job Log</a>,<br />\nImproved support for Object Variables,<br />\nminification of HTML and Javascript resources</li>\n<li>Tasklist:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#tasklist-plugins\">Customization and Extensibility (Plugins)</a>,<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#tasklist-dashboard-search-for-tasks\">Advanced Search</a> with <a href=\"http://docs.camunda.org/7.3/guides/user-guide/#tasklist-dashboard-search-for-tasks\">advanced sorting options</a>,<br />\nZoom BPMN Process Diagram,<br />\n<a href=\"http://docs.camunda.org/7.3/api-references/embedded-forms/#supported-html-controls-file-input-fields\">File Upload</a>,<br />\nStandalone Tasks,<br />\n<a href=\"http://docs.camunda.org/7.3/api-references/embedded-forms/#working-with-json-objects\">working with Json Data in Forms</a>,<br />\n</li>\n<li>Admin:<br />\n<a href=\"http://docs.camunda.org/7.3/guides/user-guide/#admin-administrator-account-restrict-process-permissions\">Edit Authorizations</a>,<br />\nFlow Node Count,<br />\nminification of HTML and Javascript resources</li>\n<li>Commons UI:<br />\n<a href=\"http://camunda.github.io/camunda-commons-ui/latest/\">Reusable Widget library</a> including widgets for displaying BPMN diagrams, editing Variables ...</li>\n</ul><br />\n<h2>Thank You</h2>I want to take this opportunity to thank everybody who contributed to the new release including our community members and our amazing <a href=\"http://camunda.org/team/\">team</a> at Camunda.",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7810092998193586351/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6956424002684291290",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-05-07T21:29:00+02:00",
   "updated": "2015-05-07T21:29:45+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDMxMDI2OTg1NTIyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/05/long-running-processes-and-service.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6956424002684291290",
   "title": "Long running processes and service authentication - SAML tokens to the rescue?",
   "content": "<span id=\"goog_1013781958\"></span><span id=\"goog_1013781959\"></span>When executing long running business processes which include service invocations you often have to solve a problem: What credentials should you use when calling the service?<br />\n<br />\nLet's have a look at a simple example: <br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-qCMc1anIyhk/VUpe4qixaAI/AAAAAAAAAQk/HO9K71u4jkc/s1600/process.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"67\" src=\"http://1.bp.blogspot.com/-qCMc1anIyhk/VUpe4qixaAI/AAAAAAAAAQk/HO9K71u4jkc/s1600/process.png\" width=\"640\" /></a></div>\n<br />\n<!--[if gte mso 9]><xml>\n <o:OfficeDocumentSettings>\n  <o:AllowPNG/>\n </o:OfficeDocumentSettings>\n</xml><![endif]--><br />\n<!--[if gte mso 9]><xml>\n <w:WordDocument>\n  <w:View>Normal</w:View>\n  <w:Zoom>0</w:Zoom>\n  <w:TrackMoves/>\n  <w:TrackFormatting/>\n  <w:HyphenationZone>21</w:HyphenationZone>\n  <w:PunctuationKerning/>\n  <w:ValidateAgainstSchemas/>\n  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\n  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>\n  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\n  <w:DoNotPromoteQF/>\n  <w:LidThemeOther>DE</w:LidThemeOther>\n  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>\n  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>\n  <w:Compatibility>\n   <w:BreakWrappedTables/>\n   <w:SnapToGridInCell/>\n   <w:WrapTextWithPunct/>\n   <w:UseAsianBreakRules/>\n   <w:DontGrowAutofit/>\n   <w:SplitPgBreakAndParaMark/>\n   <w:EnableOpenTypeKerning/>\n   <w:DontFlipMirrorIndents/>\n   <w:OverrideTableStyleHps/>\n  </w:Compatibility>\n  <m:mathPr>\n   <m:mathFont m:val=\"Cambria Math\"/>\n   <m:brkBin m:val=\"before\"/>\n   <m:brkBinSub m:val=\"&#45;-\"/>\n   <m:smallFrac m:val=\"off\"/>\n   <m:dispDef/>\n   <m:lMargin m:val=\"0\"/>\n   <m:rMargin m:val=\"0\"/>\n   <m:defJc m:val=\"centerGroup\"/>\n   <m:wrapIndent m:val=\"1440\"/>\n   <m:intLim m:val=\"subSup\"/>\n   <m:naryLim m:val=\"undOvr\"/>\n  </m:mathPr></w:WordDocument>\n</xml><![endif]--><!--[if gte mso 9]><xml>\n <w:LatentStyles DefLockedState=\"false\" DefUnhideWhenUsed=\"false\"\n  DefSemiHidden=\"false\" DefQFormat=\"false\" DefPriority=\"99\"\n  LatentStyleCount=\"371\">\n  <w:LsdException Locked=\"false\" Priority=\"0\" QFormat=\"true\" Name=\"Normal\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 7\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 8\"/>\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 9\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 7\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 8\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index 9\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 7\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 8\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"toc 9\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Normal Indent\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"footnote text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"annotation text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"header\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"footer\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"index heading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"35\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"caption\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"table of figures\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"envelope address\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"envelope return\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"footnote reference\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"annotation reference\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"line number\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"page number\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"endnote reference\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"endnote text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"table of authorities\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"macro\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"toa heading\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Bullet 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Number 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"10\" QFormat=\"true\" Name=\"Title\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Closing\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Signature\"/>\n  <w:LsdException Locked=\"false\" Priority=\"1\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"Default Paragraph Font\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text Indent\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"List Continue 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Message Header\"/>\n  <w:LsdException Locked=\"false\" Priority=\"11\" QFormat=\"true\" Name=\"Subtitle\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Salutation\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Date\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text First Indent\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text First Indent 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Note Heading\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text Indent 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Body Text Indent 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Block Text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Hyperlink\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"FollowedHyperlink\"/>\n  <w:LsdException Locked=\"false\" Priority=\"22\" QFormat=\"true\" Name=\"Strong\"/>\n  <w:LsdException Locked=\"false\" Priority=\"20\" QFormat=\"true\" Name=\"Emphasis\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Document Map\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Plain Text\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"E-mail Signature\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Top of Form\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Bottom of Form\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Normal (Web)\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Acronym\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Address\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Cite\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Code\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Definition\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Keyboard\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Preformatted\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Sample\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Typewriter\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"HTML Variable\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Normal Table\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"annotation subject\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"No List\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Outline List 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Outline List 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Outline List 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Simple 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Simple 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Simple 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Classic 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Colorful 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Colorful 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Colorful 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Columns 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 7\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Grid 8\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 4\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 5\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 6\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 7\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table List 8\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table 3D effects 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table 3D effects 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table 3D effects 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Contemporary\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Elegant\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Professional\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Subtle 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Subtle 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Web 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Web 2\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Web 3\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Balloon Text\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"Table Grid\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"\n   Name=\"Table Theme\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Placeholder Text\"/>\n  <w:LsdException Locked=\"false\" Priority=\"1\" QFormat=\"true\" Name=\"No Spacing\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 1\"/>\n  <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Revision\"/>\n  <w:LsdException Locked=\"false\" Priority=\"34\" QFormat=\"true\"\n   Name=\"List Paragraph\"/>\n  <w:LsdException Locked=\"false\" Priority=\"29\" QFormat=\"true\" Name=\"Quote\"/>\n  <w:LsdException Locked=\"false\" Priority=\"30\" QFormat=\"true\"\n   Name=\"Intense Quote\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"19\" QFormat=\"true\"\n   Name=\"Subtle Emphasis\"/>\n  <w:LsdException Locked=\"false\" Priority=\"21\" QFormat=\"true\"\n   Name=\"Intense Emphasis\"/>\n  <w:LsdException Locked=\"false\" Priority=\"31\" QFormat=\"true\"\n   Name=\"Subtle Reference\"/>\n  <w:LsdException Locked=\"false\" Priority=\"32\" QFormat=\"true\"\n   Name=\"Intense Reference\"/>\n  <w:LsdException Locked=\"false\" Priority=\"33\" QFormat=\"true\" Name=\"Book Title\"/>\n  <w:LsdException Locked=\"false\" Priority=\"37\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" Name=\"Bibliography\"/>\n  <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"\n   UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"TOC Heading\"/>\n  <w:LsdException Locked=\"false\" Priority=\"41\" Name=\"Plain Table 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"42\" Name=\"Plain Table 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"43\" Name=\"Plain Table 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"44\" Name=\"Plain Table 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"45\" Name=\"Plain Table 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"40\" Name=\"Grid Table Light\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"Grid Table 1 Light\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"Grid Table 6 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"Grid Table 7 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"Grid Table 1 Light Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"Grid Table 6 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"Grid Table 7 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"List Table 1 Light\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"List Table 6 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"List Table 7 Colorful\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 1\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 2\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 3\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 4\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 5\"/>\n  <w:LsdException Locked=\"false\" Priority=\"46\"\n   Name=\"List Table 1 Light Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"51\"\n   Name=\"List Table 6 Colorful Accent 6\"/>\n  <w:LsdException Locked=\"false\" Priority=\"52\"\n   Name=\"List Table 7 Colorful Accent 6\"/>\n </w:LatentStyles>\n</xml><![endif]--><!--[if gte mso 10]>\n<style>\n /* Style Definitions */\n table.MsoNormalTable\n {mso-style-name:\"Normale Tabelle\";\n mso-tstyle-rowband-size:0;\n mso-tstyle-colband-size:0;\n mso-style-noshow:yes;\n mso-style-priority:99;\n mso-style-parent:\"\";\n mso-padding-alt:0cm 5.4pt 0cm 5.4pt;\n mso-para-margin-top:0cm;\n mso-para-margin-right:0cm;\n mso-para-margin-bottom:8.0pt;\n mso-para-margin-left:0cm;\n line-height:107%;\n mso-pagination:widow-orphan;\n font-size:11.0pt;\n font-family:\"Calibri\",sans-serif;\n mso-ascii-font-family:Calibri;\n mso-ascii-theme-font:minor-latin;\n mso-hansi-font-family:Calibri;\n mso-hansi-theme-font:minor-latin;\n mso-fareast-language:EN-US;}\n</style>\n<![endif]--><span lang=\"EN-US\" style=\"font-family: &quot;Times New Roman&quot;,serif; font-size: 12.0pt; line-height: 107%; mso-ansi-language: EN-US; mso-bidi-language: AR-SA; mso-fareast-font-family: &quot;Times New Roman&quot;; mso-fareast-language: DE;\">A user\nmight start the process manually.</span> Then service 1 might be executed with the credentials of this user. But how about service 2? Should it be executed with credentials from the first user or the user who finished the user task? How about service 3? <br />\n<br />\n<a name='more'></a><br />\nFrom our experience, there is no rule of thumb but it needs to be decided based on the project requirements. All of the three options are valid:<br />\n<ul>\n<li>The starting user credentials will be used for all service calls in the process</li>\n<li>The last user credentials will be used for the next service calls (can get tricky with parallel paths by the way)</li>\n<li>Technical Users will be used for the service calls. This technical user might be defined for every service task.</li>\n</ul>\nIf you go for one of the first two options, a very interesting question arises: <b>&nbsp;</b><br />\n<br />\n<b>How can we use user credentials later in a process - which is potentially long running</b>?<br />\n<br />\nIn our example, at least the timer takes 2 weeks! And all wait states (see <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-wait-states\" target=\"_blank\">Wait States</a> for a list of BPMN wait states) may take a long time. As storing passwords is not a safe option the answer is: <b>use authentication tokens</b>. In most environments, this means to use <a href=\"http://en.wikipedia.org/wiki/Security_Assertion_Markup_Language\" target=\"_blank\">SAML</a> tokens. This token is issued by some token server (where you normally logged in once with your password) and can then be used for authentication. It has a validity but can typically be renewed (as two weeks is a long time to wait). <br />\n<br />\nSome environments have proprietary alternatives, e.g. IBM uses <a href=\"http://en.wikipedia.org/wiki/IBM_Lightweight_Third-Party_Authentication\" target=\"_blank\">LTPA </a>tokens. Even if the principle keeps the same, the implementation gets quite tricky, as you have to use proprietary and undocumented API. Especially with LTPA tokens there was a big puzzle to solve: How to renew the token? We could see that IBM can do this internally, but leveraging it was a bit tricky. In a recent project, our great partner <a href=\"http://www.novatec-gmbh.de/\" target=\"_blank\">Novatec</a> faced this issue and was able to solve it. Great job guys!<br />\n<br />\nTo use security tokens in camunda BPM you simply have to hook in the necessary functionality - which consists only of a couple of lines of code:<br />\n<ol>\n<li>An <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-delegation-code-execution-listener\" target=\"_blank\">ExecutionListener</a> being executed when a new process instance is started. It gets the security token and stores it as process variable (as byte array). You might want to save the user name too. As they operated in a WebSphere environment, login is handled by JAAS and the application server provided the security token out-of-the-box. So this was straight forward. </li>\n<li>An extension to the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications-the-process-application-class\" target=\"_blank\">process application class</a>, which intercepts calls to the process engine core. This is a perfect place to set the security context if not yet done. You can load the Security Token from the process variable and set it at the application server. Details depend a bit on the environment / application server.</li>\n</ol>\nThis can be packaged as \"<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-plugins\" target=\"_blank\">Process Engine Plugin</a>\" and added to camunda BPM in a generic way. The concept is applicable to all environments, even using propriatary security tokens, but may differ in details of the source code. <br />\n<br />\nIf you are interested in any details, <a href=\"http://camunda.com/bpm/consultation/\" target=\"_blank\">contact us</a> - as we cannot publish the code due to NDA agreements. We are happy to assist - so are our <a href=\"http://camunda.com/bpm/consulting/\" target=\"_blank\">competent partners</a> - as for example Novatec.",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6956424002684291290/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "8068326993577067480",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-05-06T09:30:00+02:00",
   "updated": "2015-05-06T09:31:24+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDMwODk3NDg0Mjg3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/05/camunda-liferay-community-meeting.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8068326993577067480",
   "title": "Camunda + Liferay Community Meeting",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-_yEfasSmK58/VUj4Agr-ITI/AAAAAAAAAQQ/DXUeeauUQK4/s1600/ancud.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-_yEfasSmK58/VUj4Agr-ITI/AAAAAAAAAQQ/DXUeeauUQK4/s1600/ancud.jpg\" height=\"150\" width=\"200\" /></a></div>\nYesterday evening we met at our Partner Ancud IT in Nurremberg (Germany). Ancud presented their experiences using Portals (namely the Open Source Portal Liferay) in combination with Process Engines (namely camunda :-)). That was already a topic in a recent webinar, you can check out the recording online: <a href=\"https://network.camunda.org/webinars/21\" target=\"_blank\">English </a>or <a href=\"https://network.camunda.org/webinars/3\" target=\"_blank\">German</a>. Afterwards we had interessting discussions about <b>DMN use cases</b> and a \"social collaboration hub\" research project. But let's start from the beginning.<br />\n<br />\n<a name='more'></a><br /><br />\n<b>camunda + Liferay</b><br />\n<br />\nA process application needs a user interface. According to Ancud experiences this is most often a portal - or at least some home grown portal like thing. Personally I am not yet convinced as we still do a lot of non-portal projects - but I see the use case anyway.<br />\n<br />\nFor combining Liferay and camunda you have a couple of options. The <b>problems you need to solve</b> are:<br />\n<ul>\n<li>Having a tasklist as portlet in the portal. That normally means you can not leverage the existing <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\" target=\"_blank\">Camunda Tasklist</a>. </li>\n<li>Showing forms for User Task in the portal (what we call <a href=\"http://docs.camunda.org/latest/guides/user-guide/#task-forms\" target=\"_blank\">task forms</a>). Ancud showed a generic way to use the form fields defined in the process modell (what we call <a href=\"http://docs.camunda.org/latest/guides/user-guide/#task-forms-generated-task-forms\" target=\"_blank\">generated forms</a>). Having custom developed forms is also possible, but you have to clarify how to do the packaging and deployment of a process application and how to communicate between portals in this case.&nbsp;</li>\n<li>Having an operating tool like <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\" target=\"_blank\">Camunda Cockpit</a>. We discussed that it might be better to use the existing cockpit and add SSO capabilities - as it would be a lot of effort to do a complete rewrite of Cockpit as portlet.</li>\n</ul>\n<br />\nAncud also explained <b>architecture options</b>, which basically are:<br />\n<ul>\n<li>Deploy the camunda engine as \"<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview-embedded-process-engine\" target=\"_blank\">embedded engine</a>\" within your Portlet or</li>\n<li>Deploy the camunda engine as \"<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview-shared-container-managed-process-engine\" target=\"_blank\">shared engine</a>\" on the same container as Liferay or</li>\n<li>Deploy the camunda engine as \"<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview-standalone-remote-process-engine-server\" target=\"_blank\">remote engine</a>\".&nbsp;&nbsp; </li>\n</ul>\n<br />\nWe discussed if it make sense to echange the internal \"Kaleo\" engine in Liferay to react on events in liferay (e.g. approval process when a new blog post is written). My personal oppinion: Depends on the use case. If you use Liferay as \"UI\" for process applications this is not necessary. It is only interessting if you really want to use BPMN for the internal Liferay processes.<br />\n<br />\nBy the way: If you think \"<b>Why should I use a portal?</b>\" - the answers were:<br />\n<ul>\n<li>User Managements / Authorization is already solved.</li>\n<li>Coorpoerate Identity is solved.</li>\n<li>Frame / Reusable Features are nice.</li>\n</ul>\n<br />\nLast but not least we quickly discussed graphical form editors, like the <a href=\"http://minikomi.github.io/Bootstrap-Form-Builder/\" target=\"_blank\">Bootstrap Form Builder</a> or&nbsp; the Liferay Web Forms. Both were successfully applied in real-life projects in the past.<br />\n<br />\nI will add a link to the slides as soon as they are set online from Ancud. <br />\n<br />\n<b>Social Collaboration Hub: Camunda + Liferay + Nuxeo + OpenExchange</b><br />\n<br />\n<a href=\"https://network.camunda.org/members/12025/profile\" target=\"_blank\">Christian </a>from <a href=\"http://www.iisys.de/\" target=\"_blank\">iisys </a>was present who explained their current research project, which is actually quite interessting. It is called the <a href=\"https://www.sc-hub.de/\" target=\"_blank\">Social Collaboration Hub</a>. They build a \"sharepoint alternative\" using Open Source Tools - namely Camunda, Liferay, Nuxeo (a Content Management System = CMS), OpenExchange (a Groupware), Elasticsearch and Apache Shinding (an Open Social Implementation). Interessting! They just recently started and have some way to go - but they are planning to make a Cloud product out of it.<br />\n<br />\nThe most interessting detail for me: They want to provide the possibility to start working \"document driven\" and record all activities you do related to a document (the document serves as common \"correlation id\"). Then some mining algorithms will be applied to extract CMMN case definitions from the history (as you know which activities were executed). This helps to get to a semi-structured Case Definition - maybe even automatically - or at least recommended. Something I will keep an eye on!<br />\n<br />\n<b>DMN Use Cases</b><br />\n<br />\nFinally we discussed&nbsp; potential use cases for using DMN (Decision Model and Notation) - the standard we will include in camunda BPM to provide Business Rule Management capabilities. To be precise we will be able to model and execute decision tables.<br />\n<br />\nThere was one real-life use case from the audience, which I never thought of before: \"How is a decision made if some theatre performance is booked for a city/town. It depends on the current city/town if this is decided by the mayor, some round table, some complicated process or something completly different. What if important people are on vacation?\". This is funny as you have to make decisions about how to make the decision :-) I would like trying to sketch this in DMN as soon as the requirements got more clear.<br />\n<br />\nAnother example was from automotive: If your car breaks down you might have a lot of information available already (or at least you will have them in the near future). Not only about insurance coverage, milage, driver, age of the car and so on - but maybe also real-time status information from the car computers. So decisions have to be made what to do (towing the car to a garage, try to repair it on the street, get a rental as this is a major problem, order spare parts, ...). <br />\n<br />\n<b>Thanks for reading</b><br />\n<br />\nIf you want to join community meetings go to <a href=\"https://network.camunda.org/meetings/\" target=\"_blank\">Camunda Network</a>, you can register for the newsletter easily to stay informed. If you want to host some or even offer a presentation / experience report let us know!",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8068326993577067480/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2112340099730682108",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-04-24T11:46:00+02:00",
   "updated": "2015-04-24T12:09:10+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI5ODcwMTUwMjEwCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/04/camunda-bpm-730-alpha3-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2112340099730682108",
   "title": "Camunda BPM 7.3.0-alpha3 released",
   "content": "A new alpha release of our open source BPM and Workflow platform is available for <a href=\"http://camunda.org/download/#latest\">download</a>. The highlights of this release are:<br />\n<ul>\n<li>Process Engine Java and Rest Api</li>\n<ul>\n<li>Process-level authorizations: define ACL-like authorizations for restricting possible interactions with process-related resources (Process Definitions, Process Instances, Tasks ...), in both Java and REST Api.</li>\n<li>Deep tissue refactoring of implementation of Multi Instance constructs in process engine.</li>\n<li>Many, many bug fixes related to multi instance, event subprocesses, boundary events and compensation.</li>\n<li>Api for process instance repair: Modify a process instance's execution structure through the ability to start and cancel activities in a flexible way.</li>\n<li>Job Executor Threadpool can be configured for shared process engine in Apache Tomcat</li>\n<li>Improved Error Handling: call activities now also map variables in case an error is thrown, access error code as process variable in error handler</li>\n<li>Improved Task Query capabilities: <code>processInstanceBusinessKeyIn(...), processDefinitionKeyIn(...), .taskDefinitionKeyIn(...), .parentTaskId(...), </code>, </li>\n<li>Adds Support for Databases: Mysql 5.5 / 5.6, Maria DB 10.0, Microsoft SQL Server 2014, PostgreSQL 9.4, IBM DB2 10.1 /10.5</li>\n<li>Adds Support for Application Servers: Wildfly 8.2, JBoss EAP 6.4</li>\n<li>Adds Support for Java Runtimes: IBM® J9 virtual machine (JVM) 8, OpenJDK 6 / 7</li>\n<li>Rest API now supports Jackson 2.3.x</li>\n</ul>\n<li>Cockpit</li>\n<ul>\n<li>Better auditing through improved User Operation Log now supporting all process instance related interactions</li>\n<li>Restrict visibility of process definitions, instances and tasks and the possible interactions on these based on authorizations</li>\n<li>Enterprise Edition-only feature: UI for process instance repair: Modify a process instance's execution structure through the ability to start and cancel activities in a flexible way.</li>\n<li>UI improvements</li>\n<li>bpmn.io is now used as diagram renderer</li>\n<li>Activity instance tree now correctly differentiates the multi instance body scope from the inner activity instance</li>\n</ul>\n<li>Tasklist</li>\n<ul>\n<li>Start process dialog: Restrict visibility of processes which a user is not authorized to start.</li>\n<li>Improved Filter Capabilities</li>\n</ul>\n<li>Admin</li>\n<ul>\n<li>Configure process-related authorizations</li>\n</ul>\n</ul>\n<div>\nThe <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13792\">full release notes</a> can retrieved from Jira.</div>\n<br />\n<div>\nYou can <a href=\"http://camunda.org/download#latest\">download Camunda</a>, <a href=\"https://github.com/camunda/docker-camunda-bpm-platform\">run it with Docker</a> or <a href=\"http://docs.camunda.org/7.2/guides/getting-started-guides/#apache-maven-apache-maven-coordinates\">add it to your application with maven</a>.</div>\n<a name='more'></a><br />\n<h3>\nRun this Release with Docker<br />\n</h3>\nIf you want to run this release with <a href=\"http://docker.io/\">Docker</a>, you can use the freshly baked Docker images. The following command line will start the tomcat distribution:<br />\n<pre class=\"prettyprint\"><code>docker pull camunda/camunda-bpm-platform:7.3.0-alpha3\ndocker run -d --name camunda -p 8080:8080 camunda/camunda-bpm-platform:7.3.0-alpha3\n</code></pre>\nOpen browser with url: <a href=\"http://localhost:8080/camunda/\">http://localhost:8080/camunda/</a><br />\n<br />\nSee the <a href=\"https://github.com/camunda/docker-camunda-bpm-platform\">Camunda Docker Images</a> project for alternative distributions and versions.<br />\n<br />\n<h3>\nThe Process Instance Modification Api<br />\n</h3>\nThis release introuces a very powerful new api for modifying the state of process instance. You can<br />\n<ul>\n<li>Cancel existing activity instances,</li>\n<li>Start execution before an activity, after an activitiy or on a sequence flow.</li>\n</ul>\nThe following is an example of how the api can be used.<br />\n<br />\nAssume that we have the following BPMN process: <br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-h7AM2zyyX20/VTnOcdljYKI/AAAAAAAAB2A/lmKY1CVnCYA/s1600/process1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-h7AM2zyyX20/VTnOcdljYKI/AAAAAAAAB2A/lmKY1CVnCYA/s1600/process1.png\" height=\"136\" width=\"640\" /></a></div>\n<br />\nWe have a process instance which is currently waiting in the <em>Prepare Bank Transfer</em> task. Due to a technical problem, the <em>Archive Invoice</em> service task must be executed again. In order to achieve that we can execute the following command using the process instance modification API:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">//find process instance for invoice id '1223123'\nProcessInstance pi = runtimeService.createProcessInstanceQuery()\n  .variableValueEquals(\"invoiceId\", \"1223123\")\n  .singleResult();\n\n// find active instance of 'prepareBankTransfer' activity for this process instance\nActivityInstance prepareBankTransferInstance = runtimeService.getActivityInstance(pi.getId())\n  .getActivityInstances(\"prepareBankTransfer\")[0];\n\n// perform the modification\nruntimeService.createProcessInstanceModification(pi.getId())\n  .startBeforeActivity(\"archiveInvoice\")\n  .cancelActivityInstance(prepareBankTransferInstance.getId())\n  .execute();\n</code></pre>\n<br />\nThe command will first search for the process instance for invoice with id '1223123'.<br />\nWithin this process instance it then searches for the instance of the 'prepareBankTransfer' activity.<br />\nFinally it executes the modification starting a new instance of the 'archiveInvoice' activity and then cancels the previous 'prepareBankTransfer' activitiy.<br />\n<br />\nWe believe the usecases for this Api are centered around<br />\n<ul>\n<li>Repairing process instances in which some steps have to be repeated or skipped.</li>\n<li>Migrating process instances from one version of a process definition to another.</li>\n<li>Testing: you can now flexibly \"skip ahead\" in the process or \"go back\" which is very useful for testing individual segments of a process</li>\n</ul>\n<br />\n<h3>\nProcess Instance Modification Plugin for Cockpit</h3>\n<br />\nCamunda Cockpit now also provides a plugin for using the modification API. This plugin is only available in the Camunda Enterprise Subscription.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-hwPs8WLgUzs/VTnUQ_pH4DI/AAAAAAAAB2Q/kUJWckAcTGY/s1600/cockpit-modifications.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-hwPs8WLgUzs/VTnUQ_pH4DI/AAAAAAAAB2Q/kUJWckAcTGY/s1600/cockpit-modifications.png\" height=\"304\" width=\"640\" /></a></div>\n<br />\n<h3>\nProcess Authorizations</h3>\n<br />\nThis release provides a first preview of the Process Authorization API. The Api allows users to authorize access to process related resources such as<br />\n<ul>\n<li>Process Definitions</li>\n<li>Process Instances</li>\n<li>Tasks</li>\n</ul>\n<br />\nIf authorization checks are enabled, authenticated users can only see, modify and delete those process definitions, process instances and tasks which they are authorized to see, modify and delete.<br />\n<br />\n<h4>\nExample</h4>\n<br />\nIf the demo user <em>mary</em> logs into the Camunda tasklist, she is not authorized to start the invoice process. As a result, she does not see the process in the list of processes she can start:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-a0Le86p0Jv4/VTnXx2FCyRI/AAAAAAAAB2o/QKXJ17Spgao/s1600/cockpit-no-auth.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-a0Le86p0Jv4/VTnXx2FCyRI/AAAAAAAAB2o/QKXJ17Spgao/s1600/cockpit-no-auth.png\" height=\"146\" width=\"640\" /></a></div>\nNext, we create the necessary authorization for Mary. We authorize her to READ the Process Definition invoice and to CREATE_INSTANCE of the Process Definition invoice.<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-sxWlaZLC9kM/VTnXxy1BGRI/AAAAAAAAB2c/QHzKLBfOvFc/s1600/admin-auth.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-sxWlaZLC9kM/VTnXxy1BGRI/AAAAAAAAB2c/QHzKLBfOvFc/s1600/admin-auth.png\" height=\"282\" width=\"640\" /></a></div>\n&nbsp; As a result, she can now see the Process Definition \"invoice and start a new process instance:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-BaPbYQ1KLcA/VTnXx8I4M3I/AAAAAAAAB2k/E86OYLrq8RQ/s1600/tasklist-auth.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-BaPbYQ1KLcA/VTnXx8I4M3I/AAAAAAAAB2k/E86OYLrq8RQ/s1600/tasklist-auth.png\" height=\"152\" width=\"640\" /></a></div>\n<br />\nAll of this is available at a Java API and REST API level as well.<br />\n<br />\nIn this alpha release, the authorization framework is still missing some pieces:<br />\n<br />\n<ul>\n<li>Variable Access</li>\n<li>Repsitory Service Access</li>\n<li>History</li>\n</ul>\n<div>\nThis will be completed before we release the 7.3.0 Final release.</div>\n<div>\n<br /></div>\n<div>\nWe believe this is a big step for Camunda as it will allow users to deploy the Rest API and web applications in the could and other untrusted networks and restrict access to resources on a per user or group level.</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2112340099730682108/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5743944460984869618",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-03-17T18:16:00+01:00",
   "updated": "2015-03-17T20:32:07+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI2NjIwNzI3MzIwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/03/camunda-workbench-release-1.0.0-alpha9.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5743944460984869618",
   "title": "New Camunda Workbench Release - Adds Stepping in Debugger",
   "content": "After a one day hack session, <a href=\"https://github.com/nikku\">Nico</a> and myself are proud to release a new version of <a href=\"https://github.com/camunda/camunda-bpm-workbench\">Camunda Workbench</a>.<br />\n<br />\nThe Highlights of this Release are:<br />\n<br />\n<ul><li>Upgrade <a href=\"http://bpmn.io/\">bpmn.io</a> to v0.9.0</li>\n<li>Create a new process</li>\n<li>Debugger now has stepping support</li>\n<li>Breakpoints after activities</li>\n<li>Display the type of variables</li>\n<li>Enhanced Script Editing</li>\n</ul><br />\n<a href=\"https://github.com/camunda/camunda-bpm-workbench/releases/tag/1.0.0-alpha9\">Download alpha9 for free!</a><br />\n<br />\n<a name='more'></a><br />\n<br />\n<h2>What is Camunda Workbench?</h2>Camunda Workbench is the next big thing in browser-based tooling for BPMN based process automation :) But most and foremost: Workbench is AWESOME!<br />\nIt brings usecases around modeling and execution of processes close together. In workbench you can model a process, deploy it to Camunda BPM Process Engine and then debug it in an interactive way.<br />\n<br />\nSee for yourself:<br />\n<br />\n<iframe src=\"https://player.vimeo.com/video/122449242\" width=\"500\" height=\"245\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> <p><a href=\"https://vimeo.com/122449242\">Camunda Workbench - Create and debug a new Process with Script Task</a> from <a href=\"https://vimeo.com/user22820658\">camunda</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p><br />\n<iframe src=\"https://player.vimeo.com/video/122464623\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> <p><a href=\"https://vimeo.com/122464623\">Debugging the invoice process in Camunda Workbench</a> from <a href=\"https://vimeo.com/user22820658\">camunda</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p><br />\nWorkbench can be used standalone (single jar file), from a Java Unit Test or embedded inside an Application. See the <a href=\"https://github.com/camunda/camunda-bpm-workbench/wiki\">Documentation</a> for details. ",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5743944460984869618/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5991671298192447755",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-03-11T10:37:00+01:00",
   "updated": "2015-03-11T18:28:00+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI2MDk0ODgwMTI4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/03/camunda-meets-cassandra-zalando.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5991671298192447755",
   "title": "Camunda meets Cassandra @Zalando: Community Meeting Write-up",
   "content": "Jorn Horstman, André Hartmann and Lukas Niemeier from Zalando Tech visited us yesterday evening to present their prototype for running Camunda engine on Apache Cassandra.<br />\nThey published their <a href=\"https://docs.google.com/presentation/d/1fvo9doqffDoR96yeat_wZNusQFacXi0GgF0kV4_mAbQ/edit?usp=sharing\">slides</a>.<br />\n<br />\nZalando is a \"<em>multinational e-commerce company that specialises in selling shoes, clothing and other fashion and lifestyle products online</em>\". 2014 they had a revenue of €2.3 billion and currently have 8,500 employees (Source: <a href=\"http://en.wikipedia.org/wiki/Zalando\">Wikipedia</a>). AND: they are Camunda enterprise edition subscribers and use Camunda process engine for processing their orders. Whenever you buy something in their online shop, a process instance is kicked off in Camunda process engine.<br />\n<br />\n<h2>Zalando's current Architecture</h2><br />\nZalando's system needs to scale horizontally.<br />\n<br />\nCurrently Zalando's order processing runs on PostgreSQL database. They partition their order and process engine data over <strong>8 Shards</strong>. Each shard is an independent instance of PostgreSQL. Such an \"instance\" is a small cluster with replication for performance and failover.<br />\n<br />\nAt the application server level they run on Apache Tomcat and use the Spring Framework. For each shard, they have a datasource for which they create an instance of camunda process engine. This is replicated over 16 nodes. When a new order comes in, it is assigned to one of the shards and an entry is made in a global mapping table, mapping orderIds to shards. Then the corresponding process instance is stated in that shard.<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-8JE-ZyH2y2s/VP_8DaW0nOI/AAAAAAAABp4/AgwKlI7g_fQ/s1600/current_architecture.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-8JE-ZyH2y2s/VP_8DaW0nOI/AAAAAAAABp4/AgwKlI7g_fQ/s1600/current_architecture.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Zalando's current Architecture</td></tr>\n</tbody></table><br />\nWhen messages come in, they are first correlated to an order. When the order is resolved, they can deduce the responsible shard for the order and resolve the corresponding process engine.<br />\n<br />\nThey say that this works quite well but has some drawbacks:<br />\n<ul><li>They need to implement the sharding themselves,</li>\n<li>The mapping table needs to be maintained,</li>\n<li>Queries must be done against all of the shards and data must be aggregated manually.</li>\n</ul><br />\nIn the context of their \"Hackweek\", they looked into Apache Cassandra as an alternave.<br />\n<br />\n<h2>The Cassandra Prototype</h2><br />\nOver the course of a week, they built a protoype where they exchanged the relational DB persistence layer in Camunda with an alternative implementation based on Cassandra.<br />\nThey say that they wanted to<br />\n<ul><li>Learn more about Cassandra</li>\n<li>Get a better understanding of the Camunda DB structure</li>\n</ul><br />\nTheir Goal was not to run this in production (yet).<br />\n<br />\n<a href=\"https://github.com/zalando/camunda-meets-cassandra\">The source code of their prototype is on GitHub</a>.<br />\n<br />\nThey provide an <a href=\"https://github.com/zalando/camunda-meets-cassandra/blob/master/src/main/java/de/zalando/hackweek/bpm/engine/impl/db/CassandraPersistenceSession.java\">alternative implementation</a> of Camunda's <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/engine/src/main/java/org/camunda/bpm/engine/impl/db/PersistenceSession.java\">PersistenceSession</a> interface.<br />\n<br />\nIn their prototype, they replicated Camunda's relational model in Cassandra. They had a table for executions in which each execution became a row, they had tables for variables, tasks etc. They did this on purpose since they wanted to start with a naive implementation and then learn from that.<br />\n<br />\nDuring development they used a setup where they multiplexed the persistence session and executed all statements both on an SQL database and cassandra in order to be able to enhance support progressively while always having a working system.<br />\n<br />\nAs a result, they can execute simple processes.<br />\n<br />\n<h2>Lessons Learned</h2><br />\nAfter they presented their prototype, we discussed the lessons learned. We focused on the core process execution usecase, not on complex monitoring or task queries and things like that, assuming those usecases could be implemented on top of a dedicated search database such as elasticsearch into which data in fed from the execution cluster in near real time.<br />\n<br />\n<ul><li>Copying the relational data model is problematic. A single process instance is composed of many entities, if they are stored as multiple rows in different tables,</li>\n<ul><li>Data related to a single process instance is distributed accross the cluster. This does not match the process engine's access pattern: often all data related to a process instance must be read or updated. If data is distributed, the network overhead is considerable.</li>\n<li>Without transactional guarantees we cannot make changed to multiple rows in different tables atomically.</li>\n</ul><li>Eventual consistency: Cassandra keeps multiple copies of a data item. When making changes, you can configure whether you want to wait for all copies of a particular data item to be updated or whether one of the copies is enough or whether you need something in between (quorum, etc...). After some discussion, we concluded that the process engine would require to update all copies with most write operations.</li>\n</ul><br />\nIt would be better to keep data related to a single process instance together in one row inside a single table. Then we could update it atomically, reading and updating it would entail minimal network overhead. In addition, we could require write operations to wait for all copies of the data they change to be updated.<br />\n<br />\nFrom this the following model results:<br />\n<ul><li>Data of a single process instance is kept in one row.</li>\n<li>If the process engine does an update to the row, it must first <em>lock</em> it. Conceptually, this could be a logical lock based on a retry mechanism.</li>\n<li>If the row is updated / deleted, the operation must be performed on all updates. (Forfeiting the A in the context of P).</li>\n</ul><br />\nConsequences: No intra-process instance concurrency (concurrency inside a single process instance) involving different process engine instances (a single process engine can still lock the row, do things in multiple threads, join the operations and do one atomic update, releasing the lock).<br />\n<br />\nDiscussing all of this was a lot of fun! <a href=\"https://network.camunda.org/meetings/\">More Meetings are scheduled</a>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "8",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5991671298192447755/comments"
   },
   "labels": [
    "big data",
    "cassandra",
    "community",
    "horizontal scalability",
    "zalando"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4693961496220131499",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-03-09T17:21:00+01:00",
   "updated": "2015-03-09T17:21:12+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI1OTE4MDcyMTQ0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/03/camunda-bpm-platform-osgi-110-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4693961496220131499",
   "title": "camunda-bpm-platform-osgi 1.1.0 released as a community extension",
   "content": "<div style=\"background-color: white; color: #222222; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 28px; font-stretch: normal; font-weight: normal; margin: 0.75em 0px 0px; position: relative;\">\n<a href=\"https://github.com/camunda/camunda-bpm-platform-osgi\" style=\"font-family: 'Droid Serif'; font-size: 15px; line-height: 23.1000003814697px;\">camunda-bpm-platform-osgi</a><span style=\"color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.1000003814697px;\">&nbsp;is a community extension that provides support for camunda Bpm platform inside OSGi containers.</span></div>\n<div class=\"post-body entry-content\" id=\"post-body-789114432812658997\" itemprop=\"description articleBody\" style=\"background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 15.3999996185303px; line-height: 1.4; position: relative; width: 692px;\">\n<span style=\"color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.1000003814697px;\"><br /></span></div>\n<div class=\"post-body entry-content\" id=\"post-body-789114432812658997\" itemprop=\"description articleBody\" style=\"background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 15.3999996185303px; line-height: 1.4; position: relative; width: 692px;\">\n<span style=\"color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.1000003814697px;\"><a href=\"https://github.com/rbraeunlich\">Ronny Bräunlich</a> has just released a new version <a href=\"https://github.com/camunda/camunda-bpm-platform-osgi/releases/tag/1.1.0\">1.1.0 of the libary</a>.</span></div>\n<div class=\"post-body entry-content\" id=\"post-body-789114432812658997\" itemprop=\"description articleBody\" style=\"background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 15.3999996185303px; line-height: 1.4; position: relative; width: 692px;\">\n<span style=\"color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.1000003814697px;\"><br /></span></div>\n<div class=\"post-body entry-content\" id=\"post-body-789114432812658997\" itemprop=\"description articleBody\" style=\"background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 15.3999996185303px; line-height: 1.4; position: relative; width: 692px;\">\n<span style=\"color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.1000003814697px;\">Read the official <a href=\"http://wrongtracks.blogspot.de/2015/03/camunda-bpm-platform-osgi-110-released.html\">release blog post</a> and make sure to <a href=\"https://github.com/camunda/camunda-bpm-platform-osgi\">fork the project on GitHub</a>.&nbsp;</span></div>\n",
   "author": {
    "id": "g103095829219633860375",
    "displayName": "Roman Smirnov",
    "url": "https://www.blogger.com/profile/16926070807839636634",
    "image": {
     "url": "//lh5.googleusercontent.com/-5x2tX0l0eeI/AAAAAAAAAAI/AAAAAAAAAB8/gOaW1PE04uM/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4693961496220131499/comments"
   },
   "labels": [
    "camunda-bpm-platform-osgi",
    "community-extensions",
    "osgi"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "9165888902779454903",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-03-05T17:37:00+01:00",
   "updated": "2015-06-04T15:48:25+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDMzNDI1NzA1ODc3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/03/camunda-BPM-7.3.0-alpha2-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/9165888902779454903",
   "title": "Camunda BPM 7.3.0-alpha2 released",
   "content": "A new alpha release of our open source BPM and Workflow platform is available for download. The highlights of this release are:<br />\n<ul><li>Process Engine and Rest Api</li>\n<ul><li>Native JSON and XML Variable Value Types</li>\n<li>Improved Sorting: specify multiple sort parameters in rest api, sort task by variable value</li>\n<li>Historic Job Log</li>\n<li>Support for databases: Oracle 12c</li>\n<li>Partially Order Historic Activity Instances by occurrence</li>\n</ul><li>Cockpit</li>\n<ul><li>UI improvements</li>\n<li>Advanced Process Instance Search (enterprise feature)</li>\n</ul><li>Tasklist</li>\n<ul><li>Sort by multiple parameters</li>\n<li>Sort by variable value</li>\n</ul><li>Admin</li>\n<ul><li>Browse Users by Group</li>\n</ul><li>JavaScript SDK</li>\n<ul><li>Add group resource</li>\n<li>Support local variables</li>\n</ul></ul><div>The <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13690\">full release notes</a> can retrieved from Jira. The <a href=\"https://app.camunda.com/jira/issues/?jql=affectedVersion%20%3D%207.3.0-alpha2\">known issues</a> as well.</div><br />\n<div>You can <a href=\"http://camunda.org/download#latest\">download Camunda</a>, <a href=\"https://github.com/camunda/docker-camunda-bpm-platform\">run it with Docker</a> or <a href=\"http://docs.camunda.org/7.2/guides/getting-started-guides/#apache-maven-apache-maven-coordinates\">add it to your application with maven</a>.</div><a name='more'></a><br />\n<h3>Run this Release with Docker<br />\n</h3>If you want to run this release with <a href=\"http://docker.io/\">Docker</a>, you can use the freshly baked Docker images. The following command line will start the tomcat distribution:<br />\n<pre class=\"prettyprint\"><code>docker pull camunda/camunda-bpm-platform:7.3.0-alpha2\ndocker run -d --name camunda -p 8080:8080 camunda/camunda-bpm-platform:7.3.0-alpha2\n</code></pre>Open browser with url: <a href=\"http://localhost:8080/camunda/\">http://localhost:8080/camunda/</a><br />\n<br />\nSee the <a href=\"https://github.com/camunda/docker-camunda-bpm-platform\">Camunda Docker Images</a> project for alternative distributions and versions.<br />\n<br />\n<h3>Native XML and JSON Variable Types</h3><div>This feature allows you to work with Xml and Json variables in a \"native\" way, in both the Rest Api and the Java Api.<br />\n<br />\nAssume you have the following Json Document:<br />\n<pre class=\"prettyprint\"><code class=\"language-json\">{\n  \"customerId\": \"SFAS-342434\",\n  \"revenue\": 3324.43,\n  ...\n}\n</code></pre>Then it can be stored as Json variable in the following way:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">import static org.camunda.spin.plugin.variable.SpinValues.*;\n\n// assuming the json document is available as string variable\nString customerData = ...;\n\n// set the customer as json variable of a process instance\nruntimeService.setVariable(pid, \"customerData\", jsonValue(customerData));\n</code></pre>The important part is the <code>jsonValue(...)</code> method. It tells the process engine that the provided string should not be interpreted as a string but as a json value. What is the benefit?<br />\n<br />\nFirst, the value can be of arbitrary size (while the max character size for string values is limited).<br />\n<br />\nIf we request the variable in expression language (when implementing the condition of a sequence flow), we can directly access the properties of the json object:<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;sequenceFlow name=\"vip customer\" sourceRef=\"...\" targetRef=\"...\"&gt;\n  &lt;conditionExpression xsi:type=\"tFormalExpression\"&gt;\n    &lt;![CDATA[\n      ${ customerData.prop(\"revenue\").doubleValue() &gt;= 10000 }\n    ]]&gt;\n  &lt;/conditionExpression&gt;\n&lt;/sequenceFlow&gt;\n</code></pre>Note how we can directly access a property of the json object in <code>customer.prop(\"revenue\")</code>.<br />\n<br />\nHow is this possible? The process engine internally uses the <a href=\"http://docs.camunda.org/latest/api-references/spin/\">Camunda Spin</a> library for parsing the Json value with Jackson and providing a lightweight wrapper over the Jackson Api, optimized for fluent Api access.<br />\n<br />\nYou get the same benefit if you request the variable from java code:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">public class ProcessCustomerData implements JavaDelegate {\n\n  public void execute(DelegateExecution execution) {\n    JsonValue customerData = execution.getVariableTyped(\"customerData\");\n    \n    double revenue = customerData.getValue().prop(\"revenue\").doubleValue();\n  }\n\n}\n</code></pre>Note that if the same variable is requested multiple times in the same command, it will only be parsed once.<br />\n<br />\nIn case you do not need a parsed representation, you can also request the serialized (string) representation:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">JsonValue customerData = execution.getVariableTyped(\"customerData\", false);    \nString valueAsString = customerData.getValueSerialized();\n</code></pre>For this feature some documentation is still missing but you can already read <a href=\"http://blog.camunda.org/2015/02/json-everywhere-how-to-use-json-in.html\">Roman's Blogpost</a>&nbsp;and <a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/usertask/task-form-embedded-json\">checkout the example</a> on GitHub.</div><br />\n<h3>Sort Tasks by Variable Value</h3><div>When querying for tasks, it is now possible to sort by variable value:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">taskService.createTaskQuery()\n  .taskAssignee(\"jonny\")\n  .orderByDueDate().desc()\n  .orderByTaskVariable(\"invoiceAmount\", ValueType.DOUBLE).desc()\n  .list();\n</code></pre><br />\nThe same can be done in the Tasklist as you can see here:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-Xj4VuyYRlBo/VPhzZI7bcAI/AAAAAAAABoE/eHMP03p47mA/s1600/tasklist-variable-sort.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-Xj4VuyYRlBo/VPhzZI7bcAI/AAAAAAAABoE/eHMP03p47mA/s1600/tasklist-variable-sort.png\" /></a></div><br />\n</div><br />\n<h3>Advanced Process Instance Search</h3>We added an enterprise feature to Cockpit which allows searching for process instances with complex criteria:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-YW6kGBN7KQw/VPiBiyr2wHI/AAAAAAAABoc/KokXNHH5tP4/s1600/search.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-YW6kGBN7KQw/VPiBiyr2wHI/AAAAAAAABoc/KokXNHH5tP4/s1600/search.png\" height=\"464\" width=\"640\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br />\n</div><h3>The most awesome things are yet to come!</h3>We have <strong>amazing</strong> things in the pipepline. On current master it is already possible to do this:<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">List<execution> executions = runtimeService.createExecutionQuery()\n  .processDefinitionKey(\"invoice\")\n  .activityId(\"selectAssignee\")\n  .list();\n\nfor (Execution e : executions) {\n  runtimeService.createProcessInstanceModification(e.getProcessInstanceId())\n    .cancelAllInActivity(\"selectApprover\")\n    .startBeforeActivity(\"approveInvoice\")\n      .setVariable(\"approver\", \"jonny1\")\n    .execute();\n}\n</code></pre>And that is just the beginning... :=)<br />\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/9165888902779454903/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8709272049783243221",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-02-17T14:38:00+01:00",
   "updated": "2015-02-17T15:59:59+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI0MTg1MTk5NDEzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/02/feedback-wanted-camunda-bpm-and.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8709272049783243221",
   "title": "Feedback wanted: Camunda BPM and Business Rules",
   "content": "<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">Have you ever used the business rules task in BPMN? <o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">Are your company's business rules closely related to your processes? <o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">Many of our users will answer these questions with a 'yes'. <o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">With the new DMN standard for decision management and business rules\nbeing close to the final release at OMG, the whole topic has recently been get<span style=\"font-family: inherit;\">ting</span> increased\nattention. The DMN (<a href=\"http://www.omg.org/spec/DMN/\">Decision Model and Notation</a>) standard has been\nbuilt in a way<span style=\"font-family: inherit;\"> so</span> that it can easily interact and integrate with BPMN.<o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">Camunda BPM is widely considered a great BPMN engine. We have recently\nadded the CMMN standard for case management to this engine, which was a great\nsuccess for our users. Now we are thinking about adding a solution for\nexecuting business rules based on DMN. <o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">We want to give you the chance to influence our decision,\nso that we build what you need most. <o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n</div>\n<br />\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">Th<span style=\"font-family: inherit;\">is</span> is why we are asking you to participate in our survey. It's just 10\nquestions, won't take longer than 10 minutes and doesn't require any personal data.\nPlease participate, even if you do not know DMN or if you do not care about\nbusiness rules.<o:p></o:p></span></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\"><br /></span></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">English version:</span></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\"><a href=\"https://www.surveymonkey.com/s/camunda_business_rules_en\">https://www.surveymonkey.com/s/camunda_business_rules_en</a></span></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\">German version:</span></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><span style=\"font-family: inherit;\"><a href=\"https://www.surveymonkey.com/s/camunda_business_rules_de\">https://www.surveymonkey.com/s/camunda_business_rules_de</a></span></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\">Thanks for taking part and for helping us decide.&nbsp;</span></div>\n",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8709272049783243221/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "638478380846320216",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-02-09T09:08:00+01:00",
   "updated": "2015-03-05T13:52:36+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI1NTU5OTU2MzI2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/02/json-everywhere-how-to-use-json-in.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/638478380846320216",
   "title": "{ \"json\" : \"everywhere\" } - How to use json in a process",
   "content": "Since Camunda BPM platform 7.2 it is very easy to read, write and manipulate json objects by using Camunda Spin. Among other things, this feature is used to serialize Java objects inside a process instance in the process engine.<br />\n<br />\nBut what if you want to use Json Variables without mapping to Java objects? With the next alpha release we will introduce a new <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-variables-supported-variable-values\">ValueType </a>\"json\" (and \"xml\" but that is an other story).<br />\n<br />\nIn this post I demonstrate how you can use the json value type to<br />\n<br />\n<ul><li>implement HTML Forms which work with a Json Variable,</li>\n<li>implement BPMN Sequence Flow conditions based on the properties of the Json Variable.</li>\n</ul><a name='more'></a><br />\n<br />\n<h3>Example Process</h3><div>In this post I use the following example process:</div><br />\n<br />\n<ul><ul></ul></ul><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-x1qVsd35w78/VNTEWgBP3AI/AAAAAAAAAEw/ABiL0CINhjc/s1600/process.png\" imageanchor=\"1\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-x1qVsd35w78/VNTEWgBP3AI/AAAAAAAAAEw/ABiL0CINhjc/s1600/process.png\" /></a></div><br />\n<br />\n<h3>Create a Json variable in a start form</h3><div>The process instance is started by using a plain Html form inside camunda Tasklist.<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-html\">&lt;form role=\"form\" class=\"form-horizontal\"&gt;\n  &lt;script cam-script type=\"text/form-script\"&gt;\n\n    var customer = $scope.customer = {};\n\n    camForm.on('form-loaded', function () {\n      // declare a 'json' variable 'customer'\n      camForm.variableManager.createVariable({\n        name: 'customer',\n        type: 'json',\n        value: customer\n      });\n    });\n\n  &lt;/script&gt;\n  &lt;div class=\"control-group\"&gt;\n    &lt;label class=\"control-label\" for=\"firstName\"&gt;First Name&lt;/label&gt;\n    &lt;div class=\"controls\"&gt;\n      &lt;input id=\"firstName\" class=\"form-control\"\n               type=\"text\" ng-model=\"customer.firstName\" required /&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;!-- Additional fields omitted --&gt;\n\n&lt;/form&gt;\n</code></pre><br />\nThe custom java script creates a new object and binds it to the angular <code>$scope</code> of the form as a variable named <code>customer</code>. Then a new process variable named <code>customer</code> will be created when the form has been loaded successfully. The type of the process variable is set to <code>json</code>, so that the variable will be persisted simply as json without the need to deserialize it to a custom Java object.<br />\n<br />\nThe form itself is a plain angular form (see <code>ng-model</code> binding of input field).<br />\n<br />\n<h3>Accessing an existing Json variable in a task form</h3></div><div>An existing json variable can be accessed using custom java script. The pattern is to fetch first the value of the variable and then bind it to an angular scope variable:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-html\">&lt;form role=\"form\" class=\"form-horizontal\"&gt;\n  &lt;script cam-script type=\"text/form-script\"&gt;\n\n    camForm.on('form-loaded', function () {\n      // tell the form SDK to fetch the json variable name 'customer'\n      camFom.variableManager.fetchVariable('customer');\n    });\n\n    camForm.on('variable-fetched', function () {\n      // work with the variable (bind it to current angular $scope)\n      $scope.customer = camForm.variableManager.variableValue('customer');\n    });\n\n  &lt;/script&gt;\n  &lt;div class=\"control-group\"&gt;\n    &lt;label class=\"control-label\" for=\"firstName\"&gt;First Name&lt;/label&gt;\n    &lt;div class=\"controls\"&gt;\n      &lt;input id=\"firstName\" class=\"form-control\"\n             type=\"text\" ng-model=\"customer.firstName\" required /&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;!-- Additional fields omitted --&gt;\n\n&lt;/form&gt;\n</code></pre><br />\n<h3>Accessing an existing json variable in an expressions</h3></div>In the past you could already store Json as variable values. However, you needed to store it as a String variable. The problem with that is that in a sequence flow you cannot easily write EL Expressions using the properties of the json if it is stored as a String.<br />\n<br />\nIn Camunda 7.2 we introduced Spin and it became possible to pare the String within El and <a href=\"http://docs.camunda.org/latest/guides/user-guide/#data-formats-xml-json-other-json-expression-language-integration\">use the Spin API for formulating conditions</a>:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">${ JSON(customer).prop(\"age\").numberValue() &gt;= 21}</code></pre><br />\nWhile this was a huge improvement the problem is that if you need to interpret the same variable as Json multiple times within a command, it needs to be parsed multiple times (among other downsides).<br />\nNow that we introduce Json variables as native ValueTypes, you can directly access the properties of a Json variable in conditions:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;sequenceFlow id=\"SequenceFlow_4\" name=\"age above 21\"\n    sourceRef=\"ExclusiveGateway_1\" targetRef=\"UserTask_2\"&gt;\n  &lt;conditionExpression xsi:type=\"tFormalExpression\"&gt;\n    &lt;![CDATA[\n      ${ customer.prop(\"age\").numberValue() &gt;= 21 }\n    ]]&gt;\n  &lt;/conditionExpression&gt;\n&lt;/sequenceFlow&gt;\n\n&lt;sequenceFlow id=\"SequenceFlow_5\" name=\"age under 21\"\n    sourceRef=\"ExclusiveGateway_1\" targetRef=\"UserTask_3\"&gt;\n  &lt;conditionExpression xsi:type=\"tFormalExpression\"&gt;\n    &lt;![CDATA[\n      ${ customer.prop(\"age\").numberValue() &lt; 21 }\n    ]]&gt;\n  &lt;/conditionExpression&gt;\n&lt;/sequenceFlow&gt;\n</code></pre><br />\n<br />\nThe example resources can be found <a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/usertask/task-form-embedded-json\">here</a>.",
   "author": {
    "id": "g103095829219633860375",
    "displayName": "Roman Smirnov",
    "url": "https://www.blogger.com/profile/16926070807839636634",
    "image": {
     "url": "//lh5.googleusercontent.com/-5x2tX0l0eeI/AAAAAAAAAAI/AAAAAAAAAB8/gOaW1PE04uM/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/638478380846320216/comments"
   },
   "labels": [
    "embedded forms",
    "JSON",
    "spin"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5392339544624742150",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-02-05T16:19:00+01:00",
   "updated": "2015-03-05T13:28:21+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDI1NTU4NTAxNjQ4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/02/data-mapping-and-transformation-with.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5392339544624742150",
   "title": "Data mapping and transformation with Camunda Spin and Java 8",
   "content": "<div>Working with text based data formats such as Xml and Json is a common requirement when implementing BPMN processes.<br />\n<br />\nSince version 7.2 Camunda provides an optional library which is called Camunda Spin. Spin is a lightweight wrapper library which provides a easy to use API when working with text based data formats such as XML and Json.</div><div><br />\n</div><div>In this post I show how the Camunda Spin can be used for implementing data transformations and mapping in combination with the Java 8 Stream processing API and contrast this to the classical Java 6 / 7 way of doing it.<br />\n<br />\n<a name='more'></a></div><h3>Example</h3><div>The example we use is how to transform a list of The Big Bang Theory episodes (provided as Xml) into Json output.</div><div><br />\n</div><div>The source is obtained from&nbsp;<a href=\"http://services.tvrage.com/feeds/episode_list.php?sid=8511\">http://services.tvrage.com/feeds/episode_list.php?sid=8511</a>&nbsp;and looks like this:</div><pre class=\"prettyprint\"><code class=\"language-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;show&gt;\n  &lt;name&gt;The Big Bang Theory&lt;/name&gt;\n  &lt;totalseasons&gt;8&lt;/totalseasons&gt;\n  &lt;episodelist&gt;\n    &lt;season no=\"1\"&gt;\n      &lt;episode&gt;\n        &lt;epnum&gt;1&lt;/epnum&gt;\n        &lt;seasonnum&gt;01&lt;/seasonnum&gt;\n        &lt;prodnum&gt;276023&lt;/prodnum&gt;\n        &lt;airdate&gt;2007-09-24&lt;/airdate&gt;\n        &lt;link&gt;http://www.tvrage.com/The_Big_Bang_Theory/episodes/550436&lt;/link&gt;\n        &lt;title&gt;Pilot&lt;/title&gt;\n      &lt;/episode&gt;\n      &lt;episode&gt;\n        &lt;epnum&gt;2&lt;/epnum&gt;\n        &lt;seasonnum&gt;02&lt;/seasonnum&gt;\n        &lt;prodnum&gt;3T6601&lt;/prodnum&gt;\n        &lt;airdate&gt;2007-10-01&lt;/airdate&gt;\n        &lt;link&gt;http://www.tvrage.com/The_Big_Bang_Theory/episodes/603610&lt;/link&gt;\n        &lt;title&gt;The Big Bran Hypothesis&lt;/title&gt;\n      &lt;/episode&gt;\n...\n</code></pre>As Output we want to obtain a json list of all episodes which aired after 2012: <br />\n<pre class=\"prettyprint\"><code class=\"language-json\">[{\n  \"name\":\"The Shiny Trinket Maneuver\",\n  \"air-date\":\"2012-01-12\"\n },\n {\n  \"name\":\"The Recombination Hypothesis\",\n  \"air-date\":\"2012-01-19\"\n }, ... ]\n</code></pre><br />\n<h3>Enable Spin in your project </h3>In order to enable Camunda Spin in your project,<br />\n<br />\n1) add it to your maven dependencies:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-xml\">&lt;dependencymanagement&gt;\n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupid&gt;org.camunda.bpm&lt;/groupid&gt;\n        &lt;artifactid&gt;camunda-bom&lt;/artifactid&gt;\n        &lt;version&gt;7.3.0-alpha1&lt;/version&gt;\n        &lt;scope&gt;import&lt;/scope&gt;\n        &lt;type&gt;pom&lt;/type&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/dependencymanagement&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupid&gt;org.camunda.spin&lt;/groupid&gt;\n      &lt;artifactid&gt;camunda-spin-core&lt;/artifactid&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupid&gt;org.camunda.spin&lt;/groupid&gt;\n      &lt;artifactid&gt;camunda-spin-dataformat-json-jackson&lt;/artifactid&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupid&gt;org.camunda.spin&lt;/groupid&gt;\n      &lt;artifactid&gt;camunda-spin-dataformat-xml-dom&lt;/artifactid&gt;\n    &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n</code></pre>2) In your Java Code, add the following static import:  <br />\n<pre class=\"prettyprint\"><code class=\"language-java\">import static org.camunda.spin.Spin.*;</code></pre><br />\n<h3>Parsing the Xml input with Spin</h3><div>In order to parse the Xml input, we can use Spin's XML(...) method:</div><div></div><pre class=\"prettyprint\"><code class=\"language-java\">XML(xmlInput)</code></pre><div></div><div>Spin can consume Xml in the form of a string or a java.io.Reader instance.<br />\n<h3>The Java 6/7 way</h3></div><div>We'll start with the classical Java way of transforming the input.</div><div><h4>Using Spin's xPath function to iterate through all episodes</h4></div><div>In oder to iterate through all episodes in the document, we can use Spin's xPath funciton:</div><div></div><div><pre class=\"prettyprint\"><code class=\"language-java\">for (SpinXmlElement element : XML(xmlInput).xPath(\"/Show/Episodelist/Season/episode\").elementList()) {\n  // work with the element        \n}\n</code></pre><h4>Getting the production Year as Integer</h4><div>Since we only want to retain those episodes which aired after 2012, we need to get the production year element for the episode and interpret it as integer:</div></div><pre class=\"prettyprint\"><code class=\"language-java\">for (SpinXmlElement element : XML(xmlInput).xPath(\"/Show/Episodelist/Season/episode\").elementList()) {\n\n  int productionYear = Integer.parseInt(element.childElement(\"airdate\").textContent().substring(0, 4));\n\n}</code></pre><h4>Creating an empty Json Document</h4><div>Next, lets create an empty Json document into which we can collect the episodes which aired after 2012:</div><div></div><pre class=\"prettyprint\"><code class=\"language-java\">SpinJsonNode resultJson = JSON(\"[]\");</code></pre><h4>Transform the Episodes into Json </h4>Next we create a json object into which we copy the values from the xml source:  <br />\n<pre class=\"prettyprint\"><code class=\"language-java\">SpinJsonNode episodeJson = JSON(\"{}\")\n      .prop(\"name\", episode.childElement(\"title\").textContent())\n      .prop(\"air-date\", episode.childElement(\"airdate\").textContent());\n</code></pre>The complete Java 6/7 source code then looks like this:  <br />\n<pre class=\"prettyprint\"><code class=\"language-java\">SpinJsonNode resultJson = JSON(\"[]\");\n\nfor (SpinXmlElement episode : XML(xmlInput).xPath(\"/Show/Episodelist/Season/episode\").elementList()) {\n  int productionYear = Integer.parseInt(episode.childElement(\"airdate\").textContent().substring(0, 4));\n  if(productionYear &gt;= 2012) {\n    \n    SpinJsonNode episodeJson = JSON(\"{}\")\n      .prop(\"name\", episode.childElement(\"title\").textContent())\n      .prop(\"air-date\", episode.childElement(\"airdate\").textContent());\n    \n    resultJson.append(episodeJson);\n  }\n}\n</code></pre><pre></pre><h3>The Java 8 Way</h3>Java 8 introduces the Stream API and lambdas. This allows us to write a very compact representation for obtaining the same thing:  <br />\n<pre class=\"prettyprint\"><code class=\"language-java\">final SpinJsonNode resultJson = JSON(\"[]\");\n\nXML(xmlInput)\n  .xPath(\"/Show/Episodelist/Season/episode\").elementList()\n  .stream()\n  .filter(e -&gt; Integer.parseInt(e.childElement(\"airdate\").textContent().substring(0, 4)) &gt;= 2012)\n  .map(e -&gt; JSON(\"{}\")\n              .prop(\"name\", e.childElement(\"title\").textContent())\n              .prop(\"air-date\", e.childElement(\"airdate\").textContent()))\n  .forEach(e -&gt; resultJson.append(e));\n</code></pre><h3>What is missing?</h3>The above example is not \"purely\" <a href=\"http://en.wikipedia.org/wiki/Functional_programming\">functional</a>. In the <span style=\"font-family: Courier New, Courier, monospace;\">forEach</span> method we collect the generated customers and append them to the <span style=\"font-family: Courier New, Courier, monospace;\">resultJson</span> object.<br />\n<br />\nA more functional approach would use a <span style=\"font-family: Courier New, Courier, monospace;\">java.util.stream.Collector</span>:<br />\n<br />\n<pre class=\"prettyprint\"><code class=\"language-java\">SpinJsonNode resultJson = XML(xmlInput)\n  .xPath(\"/Show/Episodelist/Season/episode\").elementList()\n  .stream()\n  .filter(e -&gt; Integer.parseInt(e.childElement(\"airdate\").textContent().substring(0, 4)) &gt;= 2012)\n  .map(e -&gt; JSON(\"{}\")\n              .prop(\"name\", e.childElement(\"title\").textContent())\n              .prop(\"air-date\", e.childElement(\"airdate\").textContent()))\n  .collect(asJsonList());\n</code></pre><br />\nThe <span style=\"font-family: Courier New, Courier, monospace;\">SpinCollectors.asJsonList()</span> method does not exist yet. This would be something the Spin library could provide. In case anybody would use this? <br />\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5392339544624742150/comments"
   },
   "labels": [
    "data mapping",
    "data transformations",
    "spin"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3438174834840295531",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-02-03T14:26:00+01:00",
   "updated": "2015-02-03T14:26:51+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDIyOTcwMDExNjYyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/02/the-symbiosis-of-test-and-documentation.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3438174834840295531",
   "title": "The symbiosis of test and documentation",
   "content": "We want to build a library of reusable widgets, which are tested and documented. The components of the tasklist search are examples for such widgets:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-CmJO8miLGR0/VM-WiUVxfsI/AAAAAAAACzQ/eDdiAe87iMs/s1600/searchTasklistScreenshot.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-CmJO8miLGR0/VM-WiUVxfsI/AAAAAAAACzQ/eDdiAe87iMs/s1600/searchTasklistScreenshot.PNG\" height=\"265\" width=\"320\" /></a></div>\n<br />\nThis blog entry describes how we document and test widgets and make sure that tests and documentation stay in sync.<br />\n<br />\n<a name='more'></a><br />\n<h3>\nTests</h3>\nWith <a href=\"https://docs.angularjs.org/guide/e2e-testing\" target=\"_blank\">E2E tests</a> we specify and test the desired behavior of the widgets. For our angular widgets, we use <a href=\"http://angular.github.io/protractor/#/\" target=\"_blank\">Protractor</a>. E2E tests interact with a webpage, e.g. by clicking on links and buttons or typing text. This simulates the user behavior. To run these tests, we have to create the webpages the tests use. These webpages display the widget in the environment we want to test.<br />\n<h3>\nDocumentation</h3>\nFor the documentation, we describe the interface of the widget and show scenarios where this widget can be used. We also include code samples. This allows developers to copy the code into their application and get an instance of the widget. We also have to create a webpage for this documentation.<br />\n<h3>\nBringing Both Together</h3>\nCreating separate webpages for documentation and tests creates some problems: When we change the interface or implementation of a widget, we have to adapt both pages. There is a much higher risk of inconsistency between tests and documentation. Therefore documentation and tests should be close together.<br />\n<br />\nTo solve this problem, we create a single webpage, which serves as documentation page, but is also used for automated testing. This page contains three parts:<br />\n<br />\n<ol>\n<li><b>Interface description: </b>Very useful for the developers, but ignored by Protractor</li>\n<li><b>Example codes:&nbsp;</b>Also useful for the developers, ignored by Protractor</li>\n<li><b>Functional Sample Widgets:&nbsp;</b>Useful for the developers. They can play around with the widget before using it in the app. This is also the part where Protractor performs its tests.</li>\n</ol>\n<div>\nBy having documentation and test on the same page, we ensure that both stay in sync and consistent.</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-V_x8LlWKzgo/VM-XbPvKafI/AAAAAAAACzY/vdRi2P-oIFE/s1600/screenshot_commons_docu.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-V_x8LlWKzgo/VM-XbPvKafI/AAAAAAAACzY/vdRi2P-oIFE/s1600/screenshot_commons_docu.PNG\" height=\"267\" width=\"320\" /></a></div>\n<h3>\nTry It Out!</h3>\n<br />\n<ol>\n<li>Check out the <a href=\"https://github.com/camunda/camunda-commons-ui\" target=\"_blank\">camunda-commons-ui project</a>&nbsp;</li>\n<li>To execute the tests:</li>\n<ol>\n<li>In the root directory, execute <span style=\"font-family: Courier New, Courier, monospace;\">grunt</span></li>\n</ol>\n<li>To access the documentation:</li>\n<ol>\n<li>In the root directory, execute&nbsp;<span style=\"font-family: Courier New, Courier, monospace;\">grunt connect:widgetTests:keepalive</span></li>\n<li><span style=\"font-family: inherit;\">Navigate to the .spec.html file of the widget (e.g. http://localhost:8070/lib/widgets/search-pill/test/search-pill.spec.html)</span></li>\n</ol>\n</ol>\n",
   "author": {
    "id": "g101736838810379067186",
    "displayName": "Sebastian Stamm",
    "url": "https://www.blogger.com/profile/02218002246070663891",
    "image": {
     "url": "//lh4.googleusercontent.com/-jG4LxF9Q8sM/AAAAAAAAAAI/AAAAAAAAAB4/pyclCyhyxpU/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3438174834840295531/comments"
   },
   "labels": [
    "e2e test",
    "JavaScript",
    "testing",
    "UI test"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5688681932037673520",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-02-02T13:38:00+01:00",
   "updated": "2015-02-02T13:43:53+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDIyODgxMDMzNTU5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/02/gracefully-cancelling-process-instance.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5688681932037673520",
   "title": "Gracefully Cancelling a Process Instance",
   "content": "Cancelling a running process instance in Camunda is easy:\n<br />\n<pre>DELETE /process-instance/{id}\n</pre>\nor, using Java API:\n<br />\n<pre>RuntimeService.deleteProcessInstance(String, String)\n</pre>\nthis will simply delete the process instance and remove it from the database. Sometimes this is exactly what you need.<br />\n<br />\nHowever: what if you want to cancel the process instance gracefully? Gracefully in the sense that the effects it has had on the outside world are undone? The answer to this is compensation. In this post I discuss two ways to implement compensation.<br />\n<br />\n<a name='more'></a><br /><br />\n<h3>\nInternal Compensation</h3>\nModeling compensation inside the process itself:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-KBa6dKFuMxE/VM9uZjhaNvI/AAAAAAAABNQ/MWRNag5wgqA/s1600/internal-compensation.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-KBa6dKFuMxE/VM9uZjhaNvI/AAAAAAAABNQ/MWRNag5wgqA/s1600/internal-compensation.png\" /></a></div>\n<br />\n<br />\nThe compensation undoes the effects of the process so far. This is usually modeled in a way where you attach a <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-task-markers-compensation\">compensation handler</a> to those service tasks which have effects on \"the outside world\" and implement logic which undoes the effects of those service tasks. Then, top level inside the process you can have an <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#subprocesses-event-subprocess\">interrupting event subprocess</a> with a message start event followed by an intermediate compensation throw event.<br />\n<br />\nWhen you send the message it will<br />\n<br />\n<ol>\n<li>interrupt (effectively cancel) everything currently happening inside the process instance.</li>\n<li>throw compensation which will propagate to all compensation handlers which have been activated so far.</li>\n</ol>\n<br />\n<b>Advantage</b><br />\n<br />\n<ul>\n<li>everything self-contained inside the same process model</li>\n<li>compensation handlers can directly access variables of the process instance</li>\n<li>the process engine \"knows\" which service tasks have already been executed (effectively how far the process instance made progress) and handles triggering of the right compensation handlers for you</li>\n</ul>\n<br />\n<b>Downside</b><br />\n<br />\n<ul>\n<li>you cannot implement it \"retro actively\" in the sense that it already has to be modeled inside the process before you deploy the process.</li>\n<li>if every service task has a compensation handler, the model may become \"cluttered\".</li>\n</ul>\n<h3>\nExternal Compensation</h3>\nModeling a second process which undoes the effects of the first process.<br />\n<br />\nFirst, you model a regular process (lets call it the \"main process\") without any compensation logic:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-lMshnWfbdOQ/VM9unCamdaI/AAAAAAAABNY/tOCswuXzvwU/s1600/external-compensation-main.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-lMshnWfbdOQ/VM9unCamdaI/AAAAAAAABNY/tOCswuXzvwU/s1600/external-compensation-main.png\" /></a></div>\n<br />\nThen you can model a second process (lets call it \"compensation process\") which undoes the effects of the main process:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-RIHkO93Tl4s/VM9vMUGTZ7I/AAAAAAAABNo/S6xKQkPLYy4/s1600/external-compensation.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-RIHkO93Tl4s/VM9vMUGTZ7I/AAAAAAAABNo/S6xKQkPLYy4/s1600/external-compensation.png\" /></a></div>\n<br />\nThe compensation process can load the variables of the main process from history and may also check history to see how far the main process has made progress (because it does not know which services in the main process were executed and which services were not).<br />\n<br />\n<b>Or Better</b>: you provide the necessary variables as input of the compensation process and make the compensation services idempotent. Meaning, the Cancel Flight service does nothing if no flight has been booked. That way you can just call them all.<br />\n<br />\n<b>Advantage</b><br />\n<br />\n<ul>\n<li>can be done retro-actively after the \"main process\" has been deployed into production</li>\n<li>cancellation and compendation logic do not \"clutter\" main process model</li>\n</ul>\n<br />\n<b>Downside</b><br />\n<br />\n<ul>\n<li>if you change the main process you may have to change the compensation process. People tend to forget to do this :) If you have everything inside a single model, this is simpler.</li>\n<li>You either need to load the progress of the main process from history or make the compensation services idempotent</li>\n</ul>\n<div>\n<br /></div>\n<div>\nAny thoughts?</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5688681932037673520/comments"
   },
   "labels": [
    "BPMN",
    "compensation"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6991632210113053376",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-01-27T16:24:00+01:00",
   "updated": "2015-01-27T16:53:53+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDIyMzc0MDMzOTY4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/01/camunda-BPM-7.3.0-alpha1-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6991632210113053376",
   "title": "Camunda BPM 7.3.0-alpha1 released",
   "content": "The first alpha release in the 7.3 branch is ready! This is what's inside:<br />\n<br />\n<ul>\n<li><b>New Documentation</b></li>\n<ul>\n<li>Case Management Getting Started Tutorial (<a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/cmmn/\">Docs</a>)</li>\n<li>Multi Tenancy (<a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview-multi-tenancy-model\">Docs</a>)</li>\n</ul>\n<li><b>Process Engine</b></li>\n<ul>\n<li>Features</li>\n<ul>\n<li>Namespaces in XPath (<a href=\"https://app.camunda.com/jira/browse/CAM-2342\">CAM-2342</a>)</li>\n<li>Typed Variable API in CDI Module (<a href=\"https://app.camunda.com/jira/browse/CAM-3152\">CAM-3152</a>, contribution by Michael Scholz)</li>\n<li>Support for CMMN Manual Activation Rule (<a href=\"https://app.camunda.com/jira/browse/CAM-3169\">CAM-3169</a>)&nbsp;</li>\n<li>Use BPMN Call Activity for starting a CMMN Case Instance (<a href=\"https://app.camunda.com/jira/browse/CAM-3353\">CAM-3353</a>)</li>\n</ul>\n<li>Bugfixes</li>\n<ul>\n<li>Multi Instance (<a href=\"https://app.camunda.com/jira/browse/CAM-986\">CAM-986</a>,&nbsp;contribution by Ronny Bräunlich)</li>\n<li>Variable Serialization (<a href=\"https://app.camunda.com/jira/browse/CAM-3167\">CAM-3167</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-3174\">CAM-3174</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-3176\">CAM-3176</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-3179\">CAM-3179</a>)</li>\n</ul>\n</ul>\n<li><b>Cockpit</b></li>\n<ul>\n<li>Maintenance</li>\n<ul>\n<li>Upgrade to Bootstrap 3 (<span style=\"color: red;\">See \"Known Issues\" below</span>)</li>\n<li>Switched from Angular UI to Angular Bootstrap&nbsp;(<span style=\"color: red;\">See \"Known Issues\" below</span>)</li>\n<li>Support for&nbsp;requirejs-angular-define deprecated</li>\n</ul>\n<li>Features</li>\n<ul>\n<li>Improved startup time: All Javascript resources are now minified (including plugins)</li>\n<li>Advanced Process Instance Search (<a href=\"https://app.camunda.com/jira/browse/CAM-2697\">CAM-2697</a>, enterprise edition only)</li>\n</ul>\n</ul>\n<li><b>Camunda Tasklist</b></li>\n<ul>\n<li>Features</li>\n<ul>\n<li>Create a standalone task</li>\n<li>Support custom libraries providing custom angular controllers and other components. (<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-customizing-custom-scripts\">Docs</a>)</li>\n<li>Support for plugins (<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-plugins\">Docs</a>)</li>\n</ul>\n</ul>\n</ul>\n<div>\nAll together, 75 issues were closed.&nbsp;<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13506\">Read the complete release notes in JIRA</a>.</div>\n<div>\n<br /></div>\n<div>\nCamunda BPM is open source and can be downloaded from <a href=\"http://camunda.org/download/#latest\">http://camunda.org/download/#latest</a>.</div>\n<div>\n<a name='more'></a><h3>\nProcess Engine Bug Fixes</h3>\n<div>\nFrom the perspective of the process engine, this release is primarily a bugfix release with some minor new features mostly in the case management support. Community users running the process engine in production might consider upgrading to this release.</div>\n<div>\nEnterprise subscription customers have already received these bug fixes backported to the 7.2 branch (or 7.1 if applicable) through their enterprise subscription.</div>\n<h3>\nCamunda Cockpit Known Issues</h3>\n</div>\n<div>\nWe started to upgrade some of the frontend frameworks we use in Cockpit. This includes the upgrade from Bootstrap 2 to Bootstrap 3 as well as the switch from Angular UI to Angular Bootstrap.</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-TF05a1x4tK0/VMeVRnuJO7I/AAAAAAAABKE/7GjQGjmliQ4/s1600/cockpit-bootstrap3.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-TF05a1x4tK0/VMeVRnuJO7I/AAAAAAAABKE/7GjQGjmliQ4/s1600/cockpit-bootstrap3.png\" height=\"287\" width=\"400\" /></a></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\nAs a result of this upgrade, the cockpit application currently has some known issues:</div>\n<div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><a href=\"https://app.camunda.com/jira/browse/CAM-3369\">CAM-3369</a>,&nbsp;</span><a href=\"https://app.camunda.com/jira/browse/CAM-3370\">CAM-3370</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-3372\">CAM-3372</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-3373\">CAM-3373</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-3378\">CAM-3378</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-3379\">CAM-3379</a>.</div>\n<div class=\"MsoNormal\">\n<br /></div>\n</div>\n<div>\nBut don't worry, Valentin is busy fixing them!</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-38MJYsSfLTo/VMeTYkh63sI/AAAAAAAABJ0/wR2QDFV-ieA/s1600/IMG_20150127_143135897.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-38MJYsSfLTo/VMeTYkh63sI/AAAAAAAABJ0/wR2QDFV-ieA/s1600/IMG_20150127_143135897.jpg\" height=\"180\" width=\"320\" /></a></div>\n<h3 style=\"clear: both; text-align: left;\">\nMinification</h3>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nWe also finally added minification for cockpit:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nBefore: 222 Requests, 2.5 MB transferred</div>\nAfter: 18 Requests, 1.0 MB transferred<br />\n<div>\n<br /></div>\n<div>\nThis should make cockpit better suited for Web / Cloud deployments</div>\n<div>\n<br /></div>\n<div>\n</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6991632210113053376/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "991981533196459550",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-01-14T18:03:00+01:00",
   "updated": "2015-01-14T18:03:02+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDIxMjU0OTgyNzgxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/01/camunda-72-hands-on-webinars-recordings.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/991981533196459550",
   "title": "Camunda 7.2 Hands-on Webinars: Recordings available",
   "content": "Camunda 7.2 is packed with new features, which is why we just ran a series of developer-oriented webinars about the most important ones.<br />\n<br />\nWe hope you like what we built! The best way to let us know what we can do in order to provide you with the best BPM technology in the universe is to<br />\n<div>\n<br /></div>\n<div>\n<span style=\"font-size: large;\"><a href=\"https://www.surveymonkey.com/s/DM7DHP9\">participate in our survey, please - it's only 3 questions!</a></span></div>\n<div>\n<br /></div>\n<div>\nThank you so much!&nbsp;</div>\n<br />\n<b>Recordings in English</b><br />\n<ul>\n<li><a href=\"https://vimeo.com/116234319\">Tasklist and Javascript Forms SDK</a></li>\n<li><a href=\"https://vimeo.com/116525703\">CMMN Case Management</a></li>\n<li><a href=\"https://vimeo.com/116633460\">Connectors, Data, Scripting</a></li>\n<li><a href=\"https://vimeo.com/116737950\">Performance, Scalability</a></li>\n</ul>\n<br />\n<b>Slides in English</b><br />\n<ul>\n<li><a href=\"http://de.slideshare.net/camunda/2015-0107-tasklist-en\">Tasklist and Javascript Forms SDK</a></li>\n<li><a href=\"http://de.slideshare.net/camunda/2015-0109-cmmn-en\">CMMN Case Management</a></li>\n<li><a href=\"http://de.slideshare.net/camunda/2015-0112-connectors-data-scripting\">Connectors, Data, Scripting</a></li>\n<li><a href=\"http://de.slideshare.net/camunda/2015-0113-performance-en\">Performance, Scalability</a></li>\n</ul>\n<div>\n<br /></div>\n<div>\n<b>Recordings in German</b></div>\n<div>\n<ul>\n<li><a href=\"https://vimeo.com/116146291\">Tasklist und Javascript Forms SDK</a></li>\n<li><a href=\"https://vimeo.com/116330092\">CMMN Case Management</a></li>\n<li><a href=\"https://vimeo.com/116745287\">Konnektoren, Daten, Skripte</a></li>\n<li><a href=\"https://vimeo.com/116648184\">Performance und Skalierbarkeit</a></li>\n</ul>\n<div>\n<br /></div>\n</div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/991981533196459550/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "447735242686422990",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2015-01-06T14:53:00+01:00",
   "updated": "2015-01-07T08:25:52+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDIwNjE1NTUyNDc1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2015/01/camunda-modeler-270-release.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/447735242686422990",
   "title": "Camunda Modeler 2.7.0 release",
   "content": "<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">The camunda BPM team is pleased to announce the release of camunda Modeler 2.7.0. This release is dedicated to align the latest improvements of camunda BPM 7.2 with the modelers properties panel.&nbsp;</span><br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\"><br /></span>\n<br />\n<div style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">\nFind a complete list of issues solved in this release in&nbsp;<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13292\" style=\"color: #2288bb; text-decoration: none;\">JIRA</a>.</div>\n<div style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">\n<br /></div>\n<div style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">This release covers Eclipse&nbsp;<a href=\"http://camunda.org/release/camunda-modeler/update-sites/kepler/latest/site/\" style=\"color: #2288bb; text-decoration: none;\">Kepler</a>&nbsp;and&nbsp;<a href=\"http://camunda.org/release/camunda-modeler/update-sites/latest/site/\" style=\"color: #2288bb; text-decoration: none;\">Juno/Indigo</a>&nbsp;as well as the&nbsp;<a href=\"http://camunda.org/bpmn/tool/\" style=\"color: #2288bb; text-decoration: none;\">camunda Modeler Standalone</a>.<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n</div>\n<a href=\"https://www.blogger.com/null\" name=\"more\"></a></div>\n<div style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">\nThe new features were mainly developed by&nbsp;<a href=\"https://github.com/romansmirnov\" style=\"color: #2288bb; text-decoration: none;\">Roman</a>!</div>\n<br />\n<a name='more'></a><br />\n<h3 style=\"background-color: white; color: #666666; font-family: Volkswagen, Arial, Helvetica, sans-serif !important; margin: 15px 0px 0px; position: relative;\">\nWhat's inside?</h3>\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">We exposed the attributes we have added with the Modeler release 2.6.1 on the properties panel, namely i/o mapping, connectors and asyncBefore/asyncAfter.&nbsp;</span><br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\"><br /></span>\n<span style=\"color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif;\"><span style=\"background-color: white; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Two new tabs were added to the properties panel in order to configure Input/Output parameter and connector settings. A new input dialog was implemented for adding and editing the paramter details.&nbsp;</span></span><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-jWZ_r5i_xK8/VKvW6-exS3I/AAAAAAAADdY/6isMU93rsnU/s1600/modeler_release270_pp_general.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-jWZ_r5i_xK8/VKvW6-exS3I/AAAAAAAADdY/6isMU93rsnU/s1600/modeler_release270_pp_general.png\" height=\"326\" width=\"640\" /></a></div>\n<br />\n<br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Find a complete overview about all camunda extension elements in our <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#custom-extensions\">BPMN 2.0 Implementation Reference</a>.&nbsp;</span><br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\"><br /></span>\n<br />\n<h3 style=\"background-color: white; color: #666666; font-family: Volkswagen, Arial, Helvetica, sans-serif !important; margin: 15px 0px 0px; position: relative;\">\nWhere to download?</h3>\n<div>\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Eclipse Modeler&nbsp;<a href=\"http://camunda.org/download/modeler/\">http://camunda.org/download/modeler/</a></span><br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Standalone Modeler&nbsp;<a href=\"http://camunda.org/bpmn/tool/\">http://camunda.org/bpmn/tool/</a></span><br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Kepler: <a href=\"http://camunda.org/release/camunda-modeler/update-sites/kepler/latest/site/\">http://camunda.org/release/camunda-modeler/update-sites/kepler/latest/site/</a></span><br />\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Indigo and Juno: <a href=\"http://camunda.org/release/camunda-modeler/update-sites/latest/site/\">http://camunda.org/release/camunda-modeler/update-sites/latest/site/</a></span></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Please give us feedback in our <a href=\"http://camunda.org/forum/\">forum </a>and on <a href=\"https://twitter.com/camundaBPM\">twitter</a>.</span></div>\n<div>\n<br /></div>\n<div>\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\">Happy modeling!&nbsp;</span></div>\n<div>\n<br /></div>\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\"><br /></span>\n<span style=\"background-color: white; color: #666666; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.1999998092651px; line-height: 18.4799995422363px;\"><br /></span></div>\n",
   "author": {
    "id": "g106268355273833601853",
    "displayName": "Michael Schöttes",
    "url": "https://www.blogger.com/profile/04022636284264094615",
    "image": {
     "url": "//lh3.googleusercontent.com/-J42zEmWWZeA/AAAAAAAAAAI/AAAAAAAADU0/Kve0YC_wOIg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/447735242686422990/comments"
   },
   "labels": [
    "BPMN",
    "camunda-modeler",
    "Eclipse",
    "modeling",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7554363770699832296",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-12-18T16:35:00+01:00",
   "updated": "2014-12-18T19:57:49+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4OTI5MDY5Mzg3Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/12/cycle-31-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7554363770699832296",
   "title": "Cycle 3.1 Released",
   "content": "We are happy to announce the release of Cycle version 3.1. Cycle is a tool which makes synchronization of BPMN diagrams between the camunda modeler and third party modeling tools possible. With this release we provide a feature which allows bpmn tool vendors to integrate their tool with camunda cycle by providing custom Connectors. <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13500\" target=\"_blank\">The complete release notes can be found in JIRA</a><br />\n<br />\nYou can download the <a href=\"http://camunda.org/download/cycle/\" target=\"_blank\">distribution of Cycle 3.1 from camunda.org</a> and view the <a href=\"https://github.com/camunda/camunda-cycle\" target=\"_blank\">source code on GitHub</a>.<br />\n<h3>\nConnectors</h3>\nCycle uses Connectors which implement the necessary operations to synchronize BPMN diagrams. With Cycle 3.1, we provide a way to augment Cycle with custom Connectors. Tool vendors can implement needed operations and publish a Connector which integrates their tool with camunda Cycle. This allows users of the third party tool to seamlessly work with the third party tool, integrate the changes into camunda BPM and merge changes back. We provide a repository where we&nbsp;<a href=\"https://github.com/camunda/camunda-cycle-connectors\" target=\"_blank\">list all available custom Connectors</a>. The <a href=\"https://www.ibo.de/ibo.html\" target=\"_blank\">IBO Software GmbH</a> already contributed a Connector for their <a href=\"https://www.ibo.de/prozessmanagement/prozessmanagement-software.html\" target=\"_blank\">Prometheus tool</a>.<br />\n<br />\nTool vendors can find an example how to implement a Connector to integrate their tool with camunda Cycle in our <a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/cycle/camunda-cycle-connector-example\" target=\"_blank\">examples repository</a>.<br />\n<br />\nIn addition to the possibility to augment Cycle with custom Connectors, we also added build-in GIT support for camunda Cycle.<br />\n<br />\n<h3>\nDiagram Rendering</h3>\nCycle displays an image of the current state of the BPMN diagram. Previously, the tool was responsible to provide this image alongside the BPMN file and keep the image file up to date. With this release we add the option to let Cycle render the bpmn diagram by using the BPMN file instead of using a provided image. This improves the integration of tools which do not provide an image themselves.<br />\n<br />\nTo render the diagrams, we use the awesome <a href=\"http://bpmn.io/\" target=\"_blank\">bpmn.io toolkit</a>.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-6ahEAly2UFU/VI_zysQvnMI/AAAAAAAACn0/LbHcz_bJCHQ/s1600/screenshot_cycle.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-6ahEAly2UFU/VI_zysQvnMI/AAAAAAAACn0/LbHcz_bJCHQ/s1600/screenshot_cycle.PNG\" height=\"251\" width=\"320\" /></a></div>\n<br />\n<br />\n<h3>\nUpgrading to Cycle 3.1</h3>\nIf you want to use the new version of Cycle, we provide you with the necessary upgrade scripts. Please see our installation guide for information <a href=\"http://stage.docs.camunda.org/guides/installation-guide/camunda-cycle/#migration\" target=\"_blank\">how to upgrade to camunda Cycle 3.1</a>.",
   "author": {
    "id": "g101736838810379067186",
    "displayName": "Sebastian Stamm",
    "url": "https://www.blogger.com/profile/02218002246070663891",
    "image": {
     "url": "//lh4.googleusercontent.com/-jG4LxF9Q8sM/AAAAAAAAAAI/AAAAAAAAAB4/pyclCyhyxpU/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7554363770699832296/comments"
   },
   "labels": [
    "BPMN",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2079925230170354846",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-12-17T18:06:00+01:00",
   "updated": "2014-12-18T19:57:58+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4OTI5MDc4NzAyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/12/getting-started-cmmn-and-camunda.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2079925230170354846",
   "title": "Getting Started: CMMN and Camunda",
   "content": "With <a href=\"http://blog.camunda.org/2014/11/camunda-BPM-7.2.0-Final-released.html\">Camunda BPM 7.2</a>, we have released our very first implementation of the Case Management Model and Notation (CMMN) standard. Some people even say it is the first available CMMN implementation at all. Like BPMN, CMMN is a specification by the Object Management Group and while BPMN is a standard for modeling <i>processes</i> that are highly structured, CMMN is a standard for modeling <i>cases</i>. In contrast to processes, cases are user- and data-driven and typically are much less pre-defined in terms of execution order and required tasks.\n<br><br>\n\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-EI5ZO559M6w/VJGqej8ZBWI/AAAAAAAAAAU/xX9R9LYE4ec/s1600/cmmn-complete.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-EI5ZO559M6w/VJGqej8ZBWI/AAAAAAAAAAU/xX9R9LYE4ec/s320/cmmn-complete.png\" /></a></div>\n<br><br>\n\nWith 7.2, it is now possible to deploy CMMN models to the engine, and interact with case instances via a rich Java and REST API. For human tasks, camunda Tasklist can be used just like it can be used for BPMN user tasks. To walk you through the development of your first CMMN application, we have compiled a <a href=\"http://docs.camunda.org/7.2/guides/getting-started-guides/cmmn/\">getting started guide</a>. It guides you through the following:\n\n<ul>\n<li> Creating a CMMN model</li>\n<li> Deploying the model to Camunda BPM </li>\n<li> Using camunda Tasklist to work on human tasks </li>\n<li> Specifying and implementing new CMMN constructs like sentries and milestones </li>\n</ul>\n\nSo now:\n\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://docs.camunda.org/7.2/guides/getting-started-guides/cmmn/\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-4tQMfdNTJtQ/VJGtSkMmscI/AAAAAAAAAAs/QXmqM6WqTQo/s200/blogpost-cmmn.png\" /></a></div>",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2079925230170354846/comments"
   },
   "labels": [
    "CMMN"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4850824778977824949",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-12-11T16:57:00+01:00",
   "updated": "2014-12-11T17:09:39+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4MzE0MTc5NDIxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/12/bpmnio-releases-060-connect-and-delete.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4850824778977824949",
   "title": "BPMN.io releases 0.6.0 - Palette and Sub-Process Modeling",
   "content": "The BPMN.io guys are making AWESOME progress. Version 0.6.0 of the BPMN Javascript toolkit BPMN.io has been released today. With this release support for modeling has been greatly enhanced.<br />\n<br />\n<a href=\"http://bpmn.io/blog/posts/2014-palette-and-sub-processes.html\">Read up on the details in Nico's Blogpost.</a><br />\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4850824778977824949/comments"
   },
   "labels": [
    "bpmn.io"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3132879510922977116",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-12-05T11:51:00+01:00",
   "updated": "2014-12-09T10:40:37+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4MTE4MDM3NDA2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/12/camunda-modeler-261-release_5.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3132879510922977116",
   "title": "Camunda Modeler 2.6.1 release",
   "content": "It's been a while since our last eclipse Modeler release. We are happy to announce the new Camunda Modeler release 2.6.1.<br />\n<br />\n<h3>\nDownloads</h3>\nEclipse Modeler&nbsp;http://camunda.org/download/modeler/<br />\nStandalone Modeler&nbsp;http://camunda.org/bpmn/tool/<br />\nKepler: http://camunda.org/release/camunda-modeler/update-sites/kepler/latest/site/<br />\nIndigo and Juno: http://camunda.org/release/camunda-modeler/update-sites/latest/site/<br />\n<h3>\nWhat's inside?</h3>\nThis release ensures compatibility of the Modeler with the latest attributes introduced in Camunda BPM 7.2.<br />\n<br />\nRoman has done a great job updating the meta model of the Modeler so that BPMN 2.0 XMLs which contain i/o-mapping and script attributes can now be opened.<br />\n<br />\nAdditionally, we are happy that two pull requests from our great community are included in this release.<br />\n<br />\n<h3>\nWhat's next?</h3>\n<div>\nCurrently we are working on the 2.7.0 version of our Modeler, which will expose the attributes we have added with 2.6.1 on the properties panel, namely i/o mapping, scripts and asyncBefore/asyncAfter.&nbsp;</div>\n",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3132879510922977116/comments"
   },
   "labels": [
    "Eclipse",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2907162195918631292",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-12-04T15:07:00+01:00",
   "updated": "2014-12-04T15:07:03+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3NzAyMDIzODU5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/12/internationalization-in-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2907162195918631292",
   "title": "Internationalization in the Camunda BPM Tasklist",
   "content": "In an international open source project like ours, the users speak a huge variety of languages. When building our new <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\" target=\"\">Tasklist </a>we had to adress the question of how to deal with internationalization.<br />\n<br />\n<h3>\nCustomizing Your Own Language</h3>\nIn addition to the default language, we added the possibility to plugin your own language for all Tasklist texts, labels, dates and date formats. You can of course use multiple languages at a time, based on the browser settings of your users. To achieve this, you simply need to add your own language file(s) to your Tasklist, without even restarting the application.<br />\n<br />\n<a name='more'></a><br />\nRead the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-customizing-localization\" target=\"_blank\">documentation on how to customize your language settings</a>.<br />\n<br />\n<h3>\nExisting Translations</h3>\nThe great thing of having a community is that you get a lot of feedback and contributions. Existing translations are available as community extension, so far for German, Russian, Ukrainian, Polish and Dutch.<br />\nAll languages available can be found in the <a href=\"https://github.com/camunda/camunda-tasklist-translations\" target=\"_blank\">tasklist-translations community extension</a>.<br />\nWe welcome any other contribution for new languages, e.g., Spanish, Portuguese, Indian, French, Chinese, ...<br />\n<br />\n<h3>\nWatch the video to see how it works.</h3>\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"281\" mozallowfullscreen=\"\" src=\"//player.vimeo.com/video/113602609\" webkitallowfullscreen=\"\" width=\"500\"></iframe> <br />\n<br />\n<h3>\nDefault Language</h3>\nFor us, the most natural language to use is English, which is spoken most by our users. That is why our Tasklist is shipped in English. We did not add any other languages to the product, since we want to focus on development rather than translation.<br />\n<h4>\nLimitations</h4>\nAs you can see, there are parts of the application which are not translated by a new language file. This refers to labels which are associated to the specific user tasks (title), processes and filters. Those entities come from the engines database or from the specific process applications which cannot be controlled by the Tasklist.<br />\nThe solution to this issue are language specific filters and process applications.<br />\n<h4>\nFurther readings</h4>\n<div>\nRead our user guide to find our more about other <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-customizing\" target=\"_blank\">customization capabilities of the Tasklist</a>.</div>\n",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2907162195918631292/comments"
   },
   "labels": [
    "tasklist",
    "web-app"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4597892984508880365",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-12-01T06:59:00+01:00",
   "updated": "2014-12-03T13:18:08+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3NjA5MDg4NjQ4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/12/cockpit-and-deployments.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4597892984508880365",
   "title": "Cockpit and Deployments",
   "content": "The last days before I traveled to Hong Kong I built a cockpit plugin to \nshow and delete deployments.<br />\n<div>\n<br /></div>\n<div>\nOn my first\n engagement, I thought about how to clean up my database from all the \nfailing process diagrams that I don't need any more. I asked Bernd how to \nget rid of the old stuff. He deleted the H2 files from his computer. \nThat's a very fresh start. And he is now very fast in finding and \ninstalling the enterprise license key again. This could be done better in my \nopinion.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nOn the next customer engagement I\n saw a test system with version 168 of the process definition to test. \nSomeone should clean up here. But how?</div>\n<div>\n<br /></div>\n<div>\nWhat \nabout deleting the deployment with cascade=true? Who calls the Java-API and when? An engine plugin seems too complicated for this and somehow you have to get the IDs of the deployments to delete.</div>\n<div>\n<h3>\nREST-API</h3>\n</div>\n<div>\nIn &nbsp;a camunda training I saw the REST-API. Together with the fancy \nrest-clients, it should be easy to call &nbsp;repositoryService.<wbr></wbr>deleteDeployment().\n But it wasn't implemented as a REST service. There wasn't even a REST &nbsp;deployment service. The team built it for 7.2. But they missed the \ndelete method. Was it a security issue? If someone is able to call \ndeleteDeployment with cascade=true, he will delete all current process \ninstances and even the history, too.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nBut \nRobert told me, that there weren't any security concerns, it was just not so important for the team. So I looked at the rest-implementation how to \ndelete process instances and made a contribution to delete deployments.&nbsp;</div>\n<div>\n<h3>\nCockpit Plugin Archetype</h3>\n</div>\n<div>\nIn\n the advanced training Falko introduced the plugin archetype and with this \nvery easy approach I quickly wrote a cockpit plugin that deletes \ndeployments on the server side, without a graphical user interface. I \ninstalled it on my favorite Jboss 7.1.5 Enterprise version to get rid of\n the old deployments. I deleted them with the ID from the \ndatabase and called the cockpit plugin rest service with a rest client.&nbsp;</div>\n<pre>DELETE http://localhost:8080/camunda/api/cockpit/plugin/delete-deployment/default/pluginDeployment/88771df2-753d-11e4-9987-52ff20524153?cascade=true</pre>\n<div>\nNext task for me was a community event about cockpit plugins. I dug&nbsp;deeper into the structure of the files generated by the maven archetype and prepared a plugin to display the number of flow node instances of the last 30 days. You can find it on the <a href=\"http://camunda.org/plugins\" target=\"_blank\">plugin-store</a>. For this presentation I had to find more examples of JavaScript programming, especially the date stuff. The articles of <a href=\"http://shop.heise.de/katalog/ct-programmieren-2014\" target=\"_blank\">these magazine</a> gave me an overview and introduction into the concepts of JavaScript. I had forgotten them completely during the last 13 years of java enterprise programming.<br />\n<br />\nThe JavaScript stuff of this plugin was straight forward. Just one file plugin.js, well prepared to get it running easily. Browsing\n the JavaScript code of the camunda webapp, I found that the developers \ndivided the files into controllers and resources.<br />\n<br />\nNow I created a deployment-plugin from the archetype, chose \n7.2.0-alpha5 as camunda version and started to write some code.</div>\n<div>\n<br /></div>\n<div>\nTo handle deployments in the cockpit, you should have a search for deployment by time range in the <span style=\"background-color: rgba(255,255,255,0);\">dashboard</span>. you don't want to fill your page with 168 Versions, if you are too lazy to clean up.&nbsp;</div>\n<div>\n<h3>\nAngular JS-Stuff</h3>\n</div>\n<div>\nTo\n decide, which deployments can be deleted without harming the system, \nyou need the number of running process instances for the process \ndefinitions of the deployment together with deployment times. Ok, that's a\n three-stage folding of three different resources. Deployment - Process \nDefinitions - Process Instances. A deep dive into angular coding, but it\n went quite well. I extracted some services, and used a date-picker for selection criteria. Coffeehouses in Vienna are a good place to do this. \nCafe Ritter with free Wi-Fi access or Cafe Bräunerhof where you have to \nbe better prepared as they don't offer Wi-Fi access. Wiener Melange helps \nyou, too.</div>\n<div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-O5853k-ihUM/VHsDeJ_Tu0I/AAAAAAAAACI/nvgLXokURwo/s1600/screenshot.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img alt=\"Deployment Plugin\" border=\"0\" src=\"http://4.bp.blogspot.com/-O5853k-ihUM/VHsDeJ_Tu0I/AAAAAAAAACI/nvgLXokURwo/s1600/screenshot.png\" height=\"424\" title=\"Deployment Plugin\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Screenshot of deployment plugin</td></tr>\n</tbody></table>\n<br /></div>\n<div>\nNow I'm nearly finished. We decided to put\n it in the plugin store. The one missing piece is the refresh after \ncoming back from the confirmation popup. To implement it in a brute force way I \nhave to copy about 30 lines of JavaScript into a new function. Seems \nthat I can improve my JavaScript code. <span style=\"background-color: rgba(255,255,255,0);\">To get to this point, it was sufficient to read the chapter about calling rest resources in <a href=\"http://shop.oreilly.com/product/0636920028055.do\" target=\"_blank\">the angular book</a>. Now&nbsp;</span>I will start reading the angular book from the beginning.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nAnd for 7.2 production environments, <a href=\"http://docs.camunda.org/7.1/api-references/rest/#overview-configuring-authentication\" target=\"_blank\">secure your rest api with the filters</a> in your production environment.</div>\n",
   "author": {
    "id": "g114697388531686487620",
    "displayName": "Ingo Richtsmeier",
    "url": "https://www.blogger.com/profile/11127045572873296897",
    "image": {
     "url": "//lh5.googleusercontent.com/-QalsZgNcJcM/AAAAAAAAAAI/AAAAAAAAABk/KIj_K_-huz4/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4597892984508880365/comments"
   },
   "labels": [
    "cockpit",
    "plugins",
    "store"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6743202495435908118",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-11-28T12:34:00+01:00",
   "updated": "2014-12-09T10:31:52+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4MTE3NTEyMjU1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/11/camunda-BPM-7.2.0-Final-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6743202495435908118",
   "title": "Camunda BPM 7.2.0 Final Released",
   "content": "Today we announce the official release of Camunda BPM 7.2.0 Final. This version constitutes the latest production-ready release of Camunda BPM platform and will be supported with patch updates in the the Camunda Enterprise Subscription.<br />\n<br />\n<b>Camunda BPM is open source</b>, you can <a href=\"http://camunda.org/download\">download the distribution from camunda.org</a> and <a href=\"http://github.com/camunda\">inspect the sources on GitHub</a>.<br />\n<h2>\nHighlights of 7.2.0 Final</h2>\n<div>\nThis blogpost provides a summary of the highlights of the 7.2.0 Release. <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12997\">The complete release notes can be found in JIRA</a>.</div>\n<h3>\nNew Tasklist</h3>\n<div>\nThis version ships a completely redesigned Tasklist.<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-SYonG-9HP4Y/VHhAt4rWR8I/AAAAAAAAAhs/UKwvhaQ1MP8/s1600/tasklist.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-SYonG-9HP4Y/VHhAt4rWR8I/AAAAAAAAAhs/UKwvhaQ1MP8/s1600/tasklist.png\" height=\"384\" width=\"640\" /></a></div>\nThe Tasklist is a single page Java Script application which is developed as part of the camunda BPM community Endition (Open Source). If you are interested in the <a href=\"https://github.com/camunda/camunda-tasklist-ui\">source code of Camunda Tasklist</a>, you can find it on Github.<br />\n<br />\nThe tasklist layout is divided into three columns: a configurable list of filters, a list of tasks and the task details. Each column can be collapsed: for instance, once you have selected a filter, you can collapse the left column and focus on the list of tasks or an individual task. The task view itself can be maximized which gives more room for complex forms.<br />\n<br />\n<a href=\"http://blog.camunda.org/2014/09/introducing-task-filters.html\">Task Filters</a> represent Task Queries (which some of you may know from using the Java API or the REST Api of the process engine) which are saved to the database such that they can be executed repeatedly. Filters can be configured directly inside the tasklist:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-9guO-zKCqPQ/VHhAregJRoI/AAAAAAAAAiQ/oYAuzT_xDJk/s1600/filter-general.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-9guO-zKCqPQ/VHhAregJRoI/AAAAAAAAAiQ/oYAuzT_xDJk/s1600/filter-general.png\" height=\"400\" width=\"640\" /></a></div>\n<br />\nThe above image shows the \"General\" settings of &nbsp;a filter. A filter can be assigned a name, a description as well as a color and a priority (which determines the ordering in the list of filters). The \"Auto refresh\" setting is interesting: if it is enabled, the filter is periodically refreshed such that users of the tasklist notice if a task is added or removed by another user or the process enigne.<br />\n<br />\nIt is also possible to define the criteria of the filter (which represent the actual task query):<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-mDsZDOSSeMY/VHhArZjLQBI/AAAAAAAAAiE/5E8zeWWFl18/s1600/filter-criteria.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-mDsZDOSSeMY/VHhArZjLQBI/AAAAAAAAAiE/5E8zeWWFl18/s1600/filter-criteria.png\" height=\"498\" width=\"640\" /></a></div>\n<br />\nFilters (and the task query itself, for that matter) now also support expressions which make the filters more flexible and usable by multiple users. Check the userguide for a list of <a href=\"http://docs.camunda.org/7.2/guides/user-guide/#process-engine-expression-language-internal-context-functions\">useful expression language additions for filters</a>.<br />\n<br />\nWe put in place <u>a sophisticated authorization system</u> for filters: first, you can configure which users and groups are authorized to create new filters. Users who are authorized to create filters can then share these filters with either all other users (globally) or with defined users and groups. This way users can determine which filters other users can see inside the tasklist and by extension, which kinds of tasks these other users should work on.<br />\n<br />\nFinally, it is also possible to configure a list of variables which should be fetched and displayed in the list of tasks:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-pEIG4L1Qo6Y/VHhAr-m3ybI/AAAAAAAAAiU/9C1t5t_PD0Y/s1600/filter-variables.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-pEIG4L1Qo6Y/VHhAr-m3ybI/AAAAAAAAAiU/9C1t5t_PD0Y/s1600/filter-variables.png\" height=\"510\" width=\"640\" /></a></div>\n<br />\nThe result is that these variables are fetched for all tasks matched by the filter:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-WJS5o_6oDpk/VHhAswI4ZWI/AAAAAAAAAh0/qhl4ZJ7Gki8/s1600/task-list-details.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-WJS5o_6oDpk/VHhAswI4ZWI/AAAAAAAAAh0/qhl4ZJ7Gki8/s1600/task-list-details.png\" height=\"312\" width=\"640\" /></a></div>\n<br />\nBesides the variables, the \"task cards\" in the list of tasks provide the following information:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-JcKwip_Bad8/VHhAscW462I/AAAAAAAAAh4/1-K7KN3VVsk/s1600/task-card.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-JcKwip_Bad8/VHhAscW462I/AAAAAAAAAh4/1-K7KN3VVsk/s1600/task-card.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe name of the task, the name of the process or case definition, Created Date, Due Date and Follow Up Date, the name of the assignee, the task priority and the variables configured in the filter. Since this information is fetched for all tasks in the list, we implemented a new, powerful, mediatype in the <a href=\"http://docs.camunda.org/7.2/api-references/rest/#overview-hypertext-application-language-hal\">REST Api (application/json+hal)</a>. This is now available to all users of the API and allows then to <u>fetch this complex information in a singe Rest request</u> which is assembled by the REST Api using a constant number of database queries. In addition, resources like users and groups are cached to minimize the number of LDAP requests necessary for fetching user information.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nWhen working on a task, users are presented a form:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-HD45lZjIph4/VHhAstjB9yI/AAAAAAAAAhc/ofXYQHxmXz4/s1600/task-form.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-HD45lZjIph4/VHhAstjB9yI/AAAAAAAAAhc/ofXYQHxmXz4/s1600/task-form.png\" height=\"490\" width=\"640\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe tasklist supports different kinds of forms, the screenshot above shows an HTML based \"embedded form\". <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/examples/invoice/src/main/webapp/forms/assign-approver.html\">The source code of this form</a> can be found on GitHub.&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nSupport for such forms is provided through the new <a href=\"http://docs.camunda.org/7.2/api-references/embedded-forms/\">Camunda Javascript SDK</a>. The SDK is developed as a separate project allowing users to use embedded forms in their own applications. <a href=\"https://github.com/camunda/camunda-bpm-sdk-js\">The sourcecode of the SDK</a> can also be found on Github.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nBesides the form, users can inspect the history of a task:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-hhpb4wQXRL4/VHhAs6xzj7I/AAAAAAAAAho/ZGDnJ8kVcaM/s1600/task-history.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-hhpb4wQXRL4/VHhAs6xzj7I/AAAAAAAAAho/ZGDnJ8kVcaM/s1600/task-history.png\" height=\"458\" width=\"640\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe history is sourced from the \"User Operation Log\" we introduced in camunda BPM 7.1. Finally, the diagram view shows the BPMN 2.0 Diagram, highlighting the current user task in the process:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-6xiOAtmg9Sc/VHhAtZy_PlI/AAAAAAAAAhw/cmsash7ttqg/s1600/task-process.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-6xiOAtmg9Sc/VHhAtZy_PlI/AAAAAAAAAhw/cmsash7ttqg/s1600/task-process.png\" height=\"496\" width=\"640\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe diagram is rendered with our new <a href=\"http://bpmn.io/\">Javascript Toolkit for BPMN 2.0: bpmn.io</a>.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nWe are really excited to provide this new release of Camunda Tasklist to the community. A lot of customer feedback has been distilled into this and I am looking forward to seeing how it is used.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nNote that the tasklist can also be localized, a community project with localizations has already been started:&nbsp;<a href=\"https://github.com/camunda/camunda-tasklist-translations\">https://github.com/camunda/camunda-tasklist-translations</a></div>\n</div>\n<h3>\nCase Management with CMMN</h3>\n<div>\nWith 7.2.0, we introduce support for a completely new definition language called <a href=\"http://docs.camunda.org/7.2/api-references/cmmn10/\">Case Management Model and Notation (CMMN)</a>.</div>\n<div>\nCMMN is an emerging OMG standard for (Adaptive) Case Management. Version 1.0 is freshly released and vendor adoption starts to take off.<br />\n<br />\nCMMN allows modeling Cases. A case allows humans to do work in a more or less structured way in order to achieve something. Classic examples where case management is applied are Credit Application, Customer Support Management, Document Management, and so on.<br />\n<br />\nThe following is a simple Example of a Credit Application Case modeled in CMMN:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-XGGj3Ikt-58/U8eXtudzhxI/AAAAAAAAAbU/L9WZHvOWXJw/s1600/loan-application.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-XGGj3Ikt-58/U8eXtudzhxI/AAAAAAAAAbU/L9WZHvOWXJw/s1600/loan-application.png\" height=\"245\" width=\"320\" /></a></div>\n<br />\n<div>\nThe Picture above shows the graphical representation of the CMMN Model. The model also has an executable XML representation which looks like this:\n</div>\n<div>\n<script src=\"https://gist.github.com/meyerdan/3f5611399c3c2ca25538.js\"></script>\n</div>\n<br /></div>\n<div>\nWith 7.2 we introduce coverage for the following CMMN contructs:<br />\n<br />\n<ul>\n<li>Stage</li>\n<li>Human Task, Process Task, Case Task</li>\n<li>Sentries</li>\n<li>Milestones</li>\n</ul>\n<br />\nThe implementation is provided through the process engine Java API as well as the REST Api.</div>\n<h3>\nProcess Engine Improvements for High Load Scenarios</h3>\n<div>\nThe camunda process engine has been improved to work better in high load scenarios. First, we have done a complete rewrite of the persistence session / first level cache (formerly known as DbSqlSession). The new implementation has the following advantages:<br />\n<br />\n<ul>\n<li>Reduction of <u>dead locks</u> due to consistent flush ordering. Before, the ordering of the database flush (INSERTS, UPDATES, DELETES) at the end of the transaction could lead to deadlocks, the new implementation enforces that any two transactions working on the same pair of entities will flush modifications in the same order.</li>\n<li><u>1st level cache reuse</u>: the first level cache will always be consistent with the database at the end of a transaction which allows us to reuse it in subsequent transactions. The cache can currently be reused in sequences of asynchronous continuations executed by the Job Executor. At the end of a transaction we flush the deltas and then reuse the cache in the next transaction, instead of throwing the memory state away and re-fetching everything from the database. This makes asynchronous continuations a lot more light-weight.</li>\n<li>In the future:</li>\n<ul>\n<li>&nbsp;it may be easier to support alternative databases such as Mongo DB. We already experimented with Hazelcase (in-memory data grid) as persistence provider and it worked out.</li>\n<li>we will be able to remove the limitation induced by the fact that atomic operations are executed recursively: the stack size grows limiting the number of activity instance which can be executed in a single transaction. We could now remove this in the next release if users should need this.</li>\n</ul>\n</ul>\nNext, the <u>scalability of the Job Executor</u>&nbsp;(responsible for asynchronous processing) has been improved in 7.2. Before only 1-2 nodes could consume effectively from the queue, now users can now have larger clusters.<br />\n<u><br /></u>\n<u>Custom history levels</u>: it is now possible to implement a custom history level which allows users to determine in a very fine granular way what data should be logged. This is useful for users with extreme amounts of process instances and who need to control the number of history events produced.<br />\n<br />\n<div>\nPerformance and &nbsp;scalability are continuous efforts for us. We improve them with each release because we always have customers who push the limits. I am already looking forward to the improvements we will have to do in the next release :)</div>\n</div>\n<h3>\nXml, Json and other Dataformats</h3>\n<div>\nThe 7.2 release introduces support for <a href=\"http://docs.camunda.org/latest/guides/user-guide/#data-formats-xml-json-other\">Xml and Json Dataformats</a> at different levels. Fist, the process enigne can now serialize Java Objects using Xml or Json out of the box.<br />\nThe serialization dataformat can be configured using the new, typed variable API:<br />\n<br />\n<pre>CustomerData customerData = new CustomerData();\n\nexecution.setVariable(\"customerData\", objectValue(customerData)\n  .serializationDataFormat(SerializationDataFormats.JSON)\n  .create());\n</pre>\n<br />\nWe also introduce the <a href=\"http://docs.camunda.org/latest/api-references/spin/\">Spin Dataformat API</a> which provides support for parsing, writing, querying and mapping Xml and Json data. The Spin Dataformat API can be used in Expression Language as well, allowing users to directly execute XPath or JsonPath when configuring sequence flow conditions:<br />\n<br />\n<pre>${XML(customer).xPath(\"/customer/address/postcode\").element().textContent() == \"1234\"}\n</pre>\n<br />\nThe Spin Dataformat API allows users to extend it with custom functionality or implement their own dataformats. <a href=\"https://github.com/camunda/camunda-spin\">Source code for the Spin Dataformat API is avaliable on Github</a>.</div>\n<h3>\nImproved Scripting &amp; Templating</h3>\n<div>\nUsers can now use <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-scripting\">script languages</a>, namely Javascipt, Groovy, JRuby and Jython. For these languages, support has been improved in the following way:<br />\n<ul>\n<li>Compilation: the process enigne can be configured to compile (and cache the compiled scripts) these languages. This <u>improves performance</u>.</li>\n<li>Scripts <u>can now be used everywhere</u> where expression language or custom Java code can be used, including Execution Listeners, Task Listeners, Sequence Flow conditions.</li>\n</ul>\n<div>\nOn top of this, we provide script engine wrappers for <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-templating\">template engines</a> (namely Freemarker, Apache Valocity and XSLT) which can be used everywhere where scripts are used. Template engines are useful for composing data and payload such as XML and JSON or formatting text such as Emails.</div>\n</div>\n<h3>\nOut of the box REST and SOAP Connectors</h3>\n<div>\n<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-connectors\">Camunda 7.2 introduces a new API for connectors</a>: the <a href=\"http://docs.camunda.org/latest/api-references/connect/\">Camunda Connect API</a>. Out of the box, the 7.2 Release provides support for a REST and SOAP connectors.<br />\n<br />\nWhat makes connectors different from plain &nbsp;Java delegate implementations (which you already know)?<br />\n<ol>\n<li>The most important difference is that connectors declare their input / output parameters. This will make it possible for us to build tooling which allows users to configure the input / output parameters of arbitrary connectors. Connector I/O is configured using <a href=\"http://docs.camunda.org/7.2/guides/user-guide/#process-engine-process-variables-inputoutput-variable-mapping\">variable I/O mapping</a> (also new :) )</li>\n<li>Connectors provide a simple Interceptor API which allows users to customize connectors. This way they can implement cross cutting concerns such as logging, authentication, encryption etc.</li>\n<li>Connectors provide a more Request / Response oriented API. We may also support asynchronous connectors in the future.</li>\n</ol>\n<div>\nNote: camunda Modeler does not yet support configuring such connector, the next release of the modeler will provide this support.</div>\n</div>\n<h3>\nWildfly Application Server</h3>\n<div>\nWildfy application server is now officially supported in Camunda BPM 7.2. :)</div>\n<h2>\nUpgrading to 7.2.0 Final</h2>\n<div>\nWe have prepared a <a href=\"http://docs.camunda.org/7.2/guides/migration-guide/#migrate-from-camunda-bpm-71-to-72\">migration guide</a> which explains how an existing installation or application can be upgraded to Camunda 7.2.0 Final.</div>\n<h2>\nEnterprise Support</h2>\nThe 7.2 release is the basis for the next supported production release for camunda BPM. It is fully supported in <a href=\"http://camunda.com/bpm/enterprise/\">the Camunda BPM enterprise subscription</a>. Support includes Help Requests based on different SLAs as well as access to camunda BPM maintenance releases. Maintenance releases allow customers to get bugfixes for production systems based on the 7.2 codebase. While the community project will forge ahead for 7.3, we will backport bugfixes to the 7.2 branch and perform maintenance releases reserved for enterprise subscription customers.<br />\n<br />\nThere is a <a href=\"http://docs.camunda.org/7.2/guides/migration-guide/#migrate-from-camunda-bpm-71-to-72\">Migration Guide</a>&nbsp;targeting existing Camunda BPM 7.1 installations.\n\n<br />\n<h2>\nJoin the Release Webinars</h2>\n<div>\nJoin us for our (free) <a href=\"http://camunda.com/landing/webinar-release72/\">English</a> and <a href=\"http://camunda.com/de/landing/webinar-release72/\">German</a> Release Webinars!</div>\n<h2>\nCommunity</h2>\nFinally I want to thank the community for the awesome contributions we keep getting, both in the form of bug fixes and improvements to the main code base as well as community extension projects.<br />\n<br />\n<h2>\nWhat's Next?</h2>\n<div class=\"MsoNormal\">\n</div>\n<ul>\n<li>We will release camunda Cycle 3.1 providing support for Git connector (among others) and better extensibility.</li>\n<li>The documentation will be improved, including chapters on Multi Tenancy</li>\n<li>And after that: Camunda BPM 7.3 :)</li>\n</ul>\n<br />\n<div class=\"MsoNormal\">\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6743202495435908118/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "555985444806843442",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-11-25T11:34:00+01:00",
   "updated": "2014-11-25T11:34:20+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTExNjYwNTI4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/11/query-numeric-variable-values.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/555985444806843442",
   "title": "Who cares about Types? Querying with Numeric Variable Values",
   "content": "The final camunda 7.2 release is a stone's throw away and ships a ton of new features. One of these is the <i>typed variable value API</i>. You may already know the plain-value-based API that exists since the process engine's very first days. A variable can be set on an execution/task/... as follows:\n<pre class=\"prettyprint\">execution.setVariable(\"var\", 42);</pre>\n\nBehind the scenes, the process engine performs some magic to squeeze numbers, booleans, or even complex Java objects into the database and return it from there on the next call:\n<pre class=\"prettyprint\">int myLuckyNumber = (Integer) execution.getVariable(\"var\");</pre>\n<br />\n\nWith 7.2 (and the latest alpha), we introduce the typed value API. It is not a whole new API but rather of a gentle extension. Like before, the variable API is map-based and no existing code breaks. With the typed value API, performing the same task as above, it is possible to write<br />\n<pre class=\"prettyprint\">execution.setVariable(\"var\", Variables.integerValue(42));</pre>\nand<br />\n<pre class=\"prettyprint\">TypedValue typedValue = execution.getValueTyped(\"var\");</pre>\n\nYou might have noticed the <i>TypedValue</i> which is the very core of this concept. Instead of the plain variable value, there is an intermediate object, the typed value.<br />\n<br />\n<br />\nWhat can you do with it? Assume there is a variable called \"var\" in four different process instances:<br />\n\n<pre class=\"prettyprint\">runtimeService.setVariable(processInstance1.getId(), \"var\", 42000);\nruntimeService.setVariable(processInstance2.getId(), \"var\", (short) 42);\nruntimeService.setVariable(processInstance3.getId(), \"var\", (long) 123123123);\nruntimeService.setVariable(processInstance4.getId(), \"var\", 745.0d);</pre>\n\nThe four variables all differ in type and exact value. Yet, all are numeric values. In order to find all process instances with variable value > 10, the following can be written:<br />\n\n<pre class=\"prettyprint\">runtimeService.createProcessInstanceQuery()\n  .variableValueGreaterThan(\"var\", 10).list();</pre>\n\nUnfortunately, this returns only one process instance, <code>processInstance1</code>. Why? Because 42 is an integer value and the query only searches for process instances with an integer value greater than 10.<br />\n<br />\nOften, this is not what users want. All values are numeric and can be compared on a conceptual level. That is where typed values come to the rescue. Now, it is possible to write the following process instance query:\n\n<pre class=\"prettyprint\">runtimeService.createProcessInstanceQuery()\n  .variableValueGreaterThan(\"var\", Variables.numberValue(10)).list();</pre>\n\nThis query returns all four process instances. The process engine detects that the types <i>integer</i>, <i>short</i>, <i>long</i>, and <i>double</i> are all subordinates of the type <i>number</i>. It now knows that you do not mean integers with value greater than 10 but any number value that is greater than 10.<br />\n<br />\n<br />\nWhy should you care? Sometimes you don't know the type a variable in question has. In Cockpit, users specify a numeric value to query with. Its exact type is of little interest. While some MyBatis and SQL hacks made this possible in Cockpit before 7.2, it is now a well-defined API feature. And the best: You can use it in your own queries, wherever variable values can be specified.<br />\n<br />\nThat is not all to it; the typed value API has much more to offer. To learn more about it, stay tuned for the <a href=\"http://camunda.com/landing/webinar-release72/\">release webinar</a>, blog posts, tutorials, and examples to follow. Of course, you can right now have a look at the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-variables-typed-value-api\">documentation</a> and discover the typed value API.",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/555985444806843442/comments"
   },
   "labels": [
    "engine"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5996239554895634296",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-11-14T16:06:00+01:00",
   "updated": "2014-11-14T16:06:06+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE1OTc3NTY2MDQ2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/11/camunda-bpm-720-alpha6-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5996239554895634296",
   "title": "camunda BPM platform 7.2.0-alpha6 released",
   "content": "6 weeks after the last release we release camunda BPM 7.2.0-alpha6. The release ships<br />\n<br />\n<ul>\n<li><b>Tasklist</b></li>\n<ul>\n<li>Flexible layout with collapsible / expandable areas</li>\n<li>Enhanced Forms Support</li>\n<ul>\n<li>Embedded Forms</li>\n<ul>\n<li>Check Box, Select box, Date Picker</li>\n<li>Advanced Scripting</li>\n<li>Working with JSON-Serialized Java Objects</li>\n<li>Save partially filled in form to local Storage</li>\n<li>AngularJS interoperability</li>\n</ul>\n<li>Generated Forms</li>\n<li>External Forms</li>\n</ul>\n<li>List of Tasks</li>\n<ul>\n<li>Search by process / task / case variable</li>\n<li>Navigate through list using Keyboard</li>\n</ul>\n<li>Process Diagram is displayed (with <a href=\"http://bpmn.io/\">bpmn.io</a>)</li>\n<li>Display the value of Process / Case Variables in the list of tasks</li>\n<li>Support for CMMN Human Tasks</li>\n<li>Bugfixes<br /></li>\n</ul>\n<li><b>Process Engine / REST API</b></li>\n<ul>\n<li>CMMN-Based Case Management</li>\n<ul>\n<li>History for Case Instances and Case Activity Instances</li>\n<li>Sentries</li>\n<li>Variable Listeners</li>\n<li>Transformer Extensions</li>\n</ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-variables-typed-value-api\">New Typed Variable API</a> (<a href=\"https://app.camunda.com/jira/browse/CAM-2903\">CAM-2903</a>)</li>\n<ul>\n<li>Work with both Serialized and De-serialized representation of Object Values</li>\n<li>Specify Serialization Data Format for Objects (e.g. JSON, XML...)</li>\n<li>Support Typed Null Values (e.g. 'Integer' with value null)</li>\n<li>Better variable support in REST Api</li>\n</ul>\n<li>Improved Support for Inclusive Gateway (OR Gateway)</li>\n<li>Custom History Levels (fine grained control over the amount of Data Logged, <a href=\"https://app.camunda.com/jira/browse/CAM-2724\">CAM-2724</a>)</li>\n<li>Job Executor Improvements</li>\n<ul>\n<li>First Level Cache reuse (performance boost) (<a href=\"https://app.camunda.com/jira/browse/CAM-2763\">CAM-2763</a>)</li>\n<li>Better Scalability and Work Distribution in clusters (<a href=\"https://app.camunda.com/jira/browse/CAM-2805\">CAM-2805</a>)</li>\n</ul>\n<li>Improved performance of Expression Language execution (<a href=\"https://app.camunda.com/jira/browse/CAM-2725\">CAM-2725</a> contribution by Jörn Horstmann, Zalado)</li>\n<li>Improved HAL Support in REST Api (<a href=\"https://app.camunda.com/jira/browse/CAM-2940\">CAM-2940</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-2798\">CAM-2798</a>,&nbsp;</li>\n<li>Upgraded Mybatis dependency to 3.2.8 (Contribution by Frank Langelage)<br /></li>\n</ul>\n<li>Improved integration of camunda SPIN for <a href=\"http://docs.camunda.org/latest/guides/user-guide/#data-formats-xml-json-other\">working with XML and JSON data</a></li>\n<ul>\n<li>Spin is now an optional Process Engine Plugin</li>\n<li>Default provider for JAX-B or Jackson based Object Serialization<br /></li>\n</ul>\n<li>Improved integration of camunda Connect providing HTTP and SOAP connectors</li>\n<ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-connectors\">Connect is now an optional Process Engine Plugin</a><br /></li>\n</ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/installation-guide/was/#bpm-platform\">Greatly improved distribution for IBM Websphere Application Server</a></li>\n<ul>\n<li>Resource Adapter embedded into EAR</li>\n<li>Better support for Shared Libraries</li>\n<li>IBM Deployment Descriptors provide default values for deployment metadata</li>\n</ul>\n</ul>\n<div style=\"text-align: left;\">\nAll in all, 217 Jira Issues were closed.&nbsp;<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13499\">See the complete Release Notes in JIRA</a>.</div>\n<div style=\"text-align: left;\">\n<br /></div>\n<div style=\"text-align: center;\">\n<a href=\"http://camunda.org/download/#latest\">Download camunda BPM 7.2.0-alpha6 now for free!</a></div>\n<div style=\"text-align: center;\">\n<br /></div>\n<div style=\"text-align: left;\">\nalpha6 is the last alpha release before the 7.2.0 final release which is due end of this month (November). It can be considered to be the \"release candidate\". Almost all features planned for the 7.2.0 relase are in alpha6 and we do not expect any more major API or Database changes. (No guarantees, however :) )</div>\n<div>\n<br /></div>\n<div>\n<a name='more'></a><h3>\nTasklist == Awesome!!</h3>\n</div>\n<div>\nWe made good progress on the tasklist application and you can now do some very interesting things with it. We also improved the invoice demo application so if you download alpha6 and start it up, there are some tasks automatically created for you to play around with. At this point I just want to post some impressions:&nbsp;</div>\n<div>\n<br /></div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"https://3.bp.blogspot.com/-X4pNcYpH0VM/VGYQ8DrwyRI/AAAAAAAAAgI/scuLOG7pyxc/s1600/tasklist1.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"346\" src=\"https://3.bp.blogspot.com/-X4pNcYpH0VM/VGYQ8DrwyRI/AAAAAAAAAgI/scuLOG7pyxc/s640/tasklist1.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">A task with an embedded form</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-XBiWsLxhoWM/VGYQ8Ih96qI/AAAAAAAAAgQ/L4Y88Ny8s_0/s1600/tasklist2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"376\" src=\"https://1.bp.blogspot.com/-XBiWsLxhoWM/VGYQ8Ih96qI/AAAAAAAAAgQ/L4Y88Ny8s_0/s640/tasklist2.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">The history of a task</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"https://4.bp.blogspot.com/-RmD5Q2cK82Q/VGYQ9A7Gc7I/AAAAAAAAAgU/m9z4LXrogL8/s1600/tasklist3.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"376\" src=\"https://4.bp.blogspot.com/-RmD5Q2cK82Q/VGYQ9A7Gc7I/AAAAAAAAAgU/m9z4LXrogL8/s640/tasklist3.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Share a filter with users and groups</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"https://3.bp.blogspot.com/-DGt0oYMoiyg/VGYQ9K8mOeI/AAAAAAAAAgg/wd6P4022tms/s1600/tasklist4.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"346\" src=\"https://3.bp.blogspot.com/-DGt0oYMoiyg/VGYQ9K8mOeI/AAAAAAAAAgg/wd6P4022tms/s640/tasklist4.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">List of tasks with variable values. Variables to fetch can be defined in filter.</td></tr>\n</tbody></table>\n<br />\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"https://3.bp.blogspot.com/-g84WDHAQ4S4/VGYQ9e3bF1I/AAAAAAAAAgY/X2b6XpeGAC0/s1600/tasklist5.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"376\" src=\"https://3.bp.blogspot.com/-g84WDHAQ4S4/VGYQ9e3bF1I/AAAAAAAAAgY/X2b6XpeGAC0/s640/tasklist5.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Searching for tasks based on variables<br /><br /><br /><br /><h3 style=\"text-align: left;\">\nJoin our Webinar on camunda BPM 7.2.0:</h3>\n<div style=\"text-align: left;\">\nThere is so much more stuff in alpha6 which deserves more than a bullet point but it has been a busy couple of weeks and the guys start opening beers and I think I am going to join them. You should Jakob Freund and myself in the Webinar we are going to do where we will try to present and explain all the awesome features which are new in camunda BPM 7.2.0:</div>\n<div style=\"text-align: left;\">\n<br /></div>\n<div style=\"text-align: center;\">\n<b><span style=\"font-size: x-large;\"><a href=\"http://camunda.com/landing/webinar-release72/\">Webinar: Camunda BPM 7.2</a></span></b></div>\n</td></tr>\n</tbody></table>\n<div style=\"text-align: center;\">\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5996239554895634296/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7132204466061491008",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-11-07T15:45:00+01:00",
   "updated": "2014-11-14T08:32:55+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE1OTUwMzc1NjI5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/11/job-suspension-powerful-operations-with.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7132204466061491008",
   "title": "Job Suspension - Powerful Operations with Camunda BPM",
   "content": "This blogpost is about a very powerful feature in <a href=\"http://camunda.org/\">camunda BPM</a> for operating critical processes which are in production. Given a core process which operates under high volume, almost any problem is critical in a way. The more options you have to deal with those problem the better. I am going to show you one of those options, namely <b>job suspension</b>.<br />\n<br />\n<a name='more'></a><br />\n<h1>\nThe Process</h1>\nLet's say you have automated your order processing, i.e. the orders which are generated in your web shop. I will use a very simple example. New orders start a process in the backend, the delivery is scheduled and once the goods are delivered, the payment is scheduled. Let's say your business is successful and you have many orders per minute.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-zowNdLTpVfM/VFuQyS8-BxI/AAAAAAAAAGM/U0aXmcvyJ4A/s1600/OrderProcessingOK.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-zowNdLTpVfM/VFuQyS8-BxI/AAAAAAAAAGM/U0aXmcvyJ4A/s1600/OrderProcessingOK.png\" height=\"288\" width=\"400\" /></a></div>\n<br />\nFrom a technical perspective, all steps are executed <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-asynchronous-continuations\">asynchronously</a>.<br />\n<br />\n<h1>\n</h1>\n<h1>\nThe Problem</h1>\n<div>\nLet's assume that the payment service is down for an hour. Immediately you will observe loads of exceptions from your engine, arising from failing process instances, which cannot settle the payment.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-taewLG8BYWw/VFuSUDzVIOI/AAAAAAAAAGY/8djUeiELl60/s1600/OrderProcessingDown.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-taewLG8BYWw/VFuSUDzVIOI/AAAAAAAAAGY/8djUeiELl60/s1600/OrderProcessingDown.png\" height=\"288\" width=\"400\" /></a></div>\n<div>\n<br /></div>\n<div>\nWhile the payment service stays down, what do you need?</div>\n<div>\n<ul>\n<li>You still need to take incoming orders, no argument about that, that's your business</li>\n<li>Still, you do not want any process instance that calls the payment service to end up in a corrupted state, that has to be dealt with afterwards.&nbsp;</li>\n</ul>\n<h1>\n</h1>\n<h1>\nThe Solution</h1>\n</div>\n<div>\nSince you are using asynchronous continuations, the job suspension feature of camunda BPM comes into play. Using job suspension you can suspend all jobs of process instances which are about to call the payment service. This is very helpful, since you are still able to start new process instances for incoming orders but you avoid running instances from ending up in a failed state. This can be done globally from a process perspective.&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-s7Ygt3HCpfo/VFuUjUA4PWI/AAAAAAAAAGk/m002VSalOfg/s1600/OrderProcessingStop.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-s7Ygt3HCpfo/VFuUjUA4PWI/AAAAAAAAAGk/m002VSalOfg/s1600/OrderProcessingStop.png\" height=\"288\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nOnce the payment service is up again, you do the inverse and simply unsuspend the job definition. Of course it will take some time until all \"waiting\" jobs are executed, but in general the process engine is doing the job which would have involved manual intervention otherwise.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<h1 style=\"clear: both; text-align: left;\">\n</h1>\n<h1 style=\"clear: both; text-align: left;\">\nOther Use Cases</h1>\n<div>\n<ul>\n<li>you are calling java code which has a bug. you can stop all instances from calling the wrong java code, deploy a hotfix and continue</li>\n<li>you need to make changes to a script or business rules before you want processes to continues</li>\n<li>any other problem which is related to your process but beyond the control of the engine</li>\n</ul>\n<h1>\n</h1>\n<h1>\n</h1>\n<h1>\nJob Suspension vs. Job Retry</h1>\n<div>\nWhat are the different use cases for job suspension and the engine's built-in retry mechanism? In short, I would recommend the retry mechanism for unknown and unexpected problems which occur temporarily. As soon as you know that something is not going to work, I would recommend to use job suspension to avoid too many retries/exceptions of the same problem. Of course this is a general statement that has to be decided depending on the actual problem.</div>\n<h1>\n</h1>\n<h1>\nRelated Readings</h1>\n</div>\n<div>\n<ul>\n<li>Cockpit provides Tooling for <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit-suspension-job-definition-suspension\">job suspension</a>&nbsp;and <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit-failed-jobs-bulk-retry\">bulk retry for failed jobs</a>.&nbsp;</li>\n<li>Read the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-concepts-suspending-and-activating-job-execution\">engine documentation on job suspension</a></li>\n<li><a href=\"http://docs.camunda.org/latest/api-references/rest/#job-definition\">REST API on job suspension</a>&nbsp;(globally for all instances)</li>\n<li><a href=\"http://docs.camunda.org/latest/api-references/rest/#job\">REST API on job suspension</a> (for single jobs)</li>\n<li>Using camunda BPM as <a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-architecture-overview-shared-container-managed-process-engine\">shared process engine</a> makes this feature even more powerful, since the engine is more independent from your application logic</li>\n</ul>\n</div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7132204466061491008/comments"
   },
   "labels": [
    "async",
    "cockpit",
    "engine"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "80382715766791315",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-09-30T19:05:00+02:00",
   "updated": "2014-09-30T19:05:29+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDEyMDk2NzI5MDgyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/09/introducing-task-filters.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/80382715766791315",
   "title": "Introducing Task Filters",
   "content": "With Camunda BPM 7.2.0-alpha5, we introduce Task Filters. Task filters are TaskQueries which can be saved to the database so that you can run them repeatedly.<br />\n<br />\n<a name='more'></a><h3>\nCreating a Filter using Java API</h3>\n<br />\nAt a Java API Level, a filter can be created as a regular task query:\n<br />\n<pre class=\"prettyprint\">// create a taskQuery\nTaskQuery myTasksQuery = taskService.createTaskQuery().taskAssignee(\"daniel.meyer\").active();\n\n// save taskQuery as filter\nFilter myTasksFilter = filterService.newTaskFilter(\"My Tasks\");\nmyTasksFilter.setOwner(\"daniel.meyer\");\nmyTasksFilter.setQuery(myTasksQuery);\nString filterId = filterService.saveFilter(myTasksFilter);\n \n// execute the filter\nList&lt;Task&gt; tasks = filterService.listPage(filterId, 0, 20);\n\n</pre>\nIf you want to share the filter with other users and for each user, make should return that particular user's tasks, it is possible to use Expression Language in the task query:\n<br />\n<pre class=\"prettyprint\">taskService.createTaskQuery().taskAssigneeExpression(\"${ currentUser() }\").active();\n</pre>\nThe above example uses the built-in expression <span style=\"font-family: Courier New, Courier, monospace;\">currentUser()</span><span style=\"font-family: inherit;\"> which returns the </span><span style=\"font-family: Courier New, Courier, monospace;\">userId</span><span style=\"font-family: inherit;\"> of the currently authenticated user (set through&nbsp;</span><span style=\"font-family: Courier New, Courier, monospace;\">IdentityService.setAuthentication()</span><span style=\"font-family: inherit;\">).</span><br />\n<span style=\"font-family: inherit;\"><br /></span>\nFor more built-in Expression Language functions, see the corresponding User Guide Section.<br />\n<br />\nFilters can also be managed using the REST Api.<br />\n<h3>\nManaging Task Filters in camunda Tasklist</h3>\nWith the latest release of camunda Tasklist, you can manage filters. Filters are displayed at the left handside of the tasklist and can be assigned a Name, a Priority and a Color.<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-MEDVVJr3APE/VCqml6wz5UI/AAAAAAAAAeQ/S62MfmyaDJk/s1600/overview.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-MEDVVJr3APE/VCqml6wz5UI/AAAAAAAAAeQ/S62MfmyaDJk/s1600/overview.png\" height=\"509\" width=\"640\" /></a></div>\n<h4>\nCreating a new Task Filter</h4>\n<div>\nA new filter can be created by selecting the \"New filter\" button. A dialog opens which allows to configure the filter:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-3bau-VStdSE/VCqmlElPjsI/AAAAAAAAAeI/EzPhmKae8Zw/s1600/create-filter-oveview.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-3bau-VStdSE/VCqmlElPjsI/AAAAAAAAAeI/EzPhmKae8Zw/s1600/create-filter-oveview.png\" height=\"507\" width=\"640\" /></a></div>\n<div>\n<br /></div>\n<h4>\nDefining Filter Criteria</h4>\n<div>\nFilter criteria can be defined in the \"Criteria\" section. In this example we select all tasks by candidate Group and Due Date:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-dwnbGV4KDQ4/VCqmlBVJF0I/AAAAAAAAAeg/0JLXLjg176M/s1600/create-filter-criteria.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-dwnbGV4KDQ4/VCqmlBVJF0I/AAAAAAAAAeg/0JLXLjg176M/s1600/create-filter-criteria.png\" height=\"508\" width=\"640\" /></a></div>\n<h4>\nSharing Filters</h4>\n<div>\nFilters can be shared with other users and Groups by defining Authorizations. This filter is shared with all users part of the group \"management\". They have been granted \"<span style=\"font-family: Courier New, Courier, monospace;\">READ</span>\" permission meaning that they can see and execute the filter but they cannot modify or delete it.</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-iXrRP11vmkQ/VCqmlBKYhgI/AAAAAAAAAeM/08PA3rhB45I/s1600/create-filter-sharing.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-iXrRP11vmkQ/VCqmlBKYhgI/AAAAAAAAAeM/08PA3rhB45I/s1600/create-filter-sharing.png\" height=\"507\" width=\"640\" /></a></div>\n<div>\n<br /></div>\n<h3>\nWhat's next?</h3>\n<div>\nWith Camunda 7.2 we limit out of the box support for filters to Task Filters. If this is a success, we can think of many more interesting usecases for filters:</div>\n<div>\n<ul>\n<li>camunda Cockpit: Process Definition and Process Instance Filters in cockpit</li>\n<li>Operations Monitoring: define a Filter Query and monitor it via REST from an Operations tool like Nagios</li>\n<li>Combine Filers and Timer Jobs: At midnight, execute a Filter and for each Task, send a reminder email...</li>\n<li>...</li>\n</ul>\n</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/80382715766791315/comments"
   },
   "labels": [
    "tasklist"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4369456341001164431",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-09-30T16:33:00+02:00",
   "updated": "2014-09-30T19:06:35+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDEyMDk2Nzk1MTA5Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/09/camunda-bpm-720-alpha5-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4369456341001164431",
   "title": "Camunda BPM 7.2.0-alpha5 released",
   "content": "Camunda BPM 7.2.0-alpha5 has been released. This alpha release contains<br />\n<ul>\n<li>Tasklist:&nbsp;</li>\n<ul>\n<li><a href=\"http://blog.camunda.org/2014/09/introducing-task-filters.html\">Task Filters</a></li>\n<li><a href=\"https://github.com/camunda/camunda-bpm-sdk-js/blob/master/doc/embedded-forms/index.md\">Improved embedded Forms</a></li>\n<li>Many Bugfixes</li>\n</ul>\n<li>Process Engine:</li>\n<ul>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-1971\">New Persistence layer minimizing Deadlock Issues</a></li>\n<li>Persistent Task Filters</li>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-2213\">Improved Deployment Duplicate Filtering</a></li>\n<li>Serialize Java Object Variables with JAX-B</li>\n<li>Many bugfixes</li>\n<li>CMMN Milestones</li>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-templating-using-xslt-as-template-engine\">XSLT as Template Engine (Enterprise Edition Only)</a></li>\n</ul>\n<li>Wildfly Distribution</li>\n<li>Documentation</li>\n<ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-variables\">Variables</a></li>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-expression-language\">Expression Language</a></li>\n</ul>\n</ul>\n<br />\n<div>\nAll in all, 120 issues were closed. <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13493\">See complete Release Notes in Jira.</a></div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://camunda.org/download/#latest\">Download Camunda BPM 7.2.0-alpha5 now!</a><br />\n<br />\nNote that this may be the last alpha version before the <a href=\"http://blog.camunda.org/2014/09/announcing-release-date-of-camunda-bpm.html\">7.2.0-Final release which is due November 30st</a>.</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4369456341001164431/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "1300272143082030109",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-09-30T15:13:00+02:00",
   "updated": "2014-10-10T14:48:13+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDEyOTQ1MjkzOTYzCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/09/announcing-release-date-of-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1300272143082030109",
   "title": "Announcing the Release Date of camunda BPM 7.2.0 GA",
   "content": "<span style=\"font-family: Arial, Helvetica, sans-serif;\"><span style=\"background-color: white; color: #333333; font-size: 15px; line-height: 23.1000003814697px;\">The next release date of&nbsp;</span><a href=\"http://www.camunda.org/\" style=\"background-color: white; color: #b5152b; font-size: 15px; line-height: 23.1000003814697px; text-decoration: none;\">camunda BPM</a><span style=\"background-color: white; color: #333333; font-size: 15px; line-height: 23.1000003814697px;\">&nbsp;has been finalized:</span></span><br />\n<h3>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\"><span style=\"color: #333333; line-height: 23.1000003814697px;\">7.2.0 GA* will ship on November 30</span><span style=\"color: #333333; line-height: 23.1000003814697px;\">,</span><span style=\"color: #333333; line-height: 23.1000003814697px;\">&nbsp;2014</span></span></h3>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\">From that date on camunda BPM 7.2 will be be&nbsp;<a href=\"http://camunda.com/bpm/enterprise/\">supported as enterprise edition</a>&nbsp;as well.&nbsp;</span></div>\n<div>\n<i style=\"background-color: white; color: #333333; font-size: 15px; line-height: 21.5599994659424px;\"><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: xx-small;\">(*General Availability)</span></i></div>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\">Here are the highlights of this release:</span></div>\n<div>\n<ul>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\">New <b><a href=\"http://blog.camunda.org/2014/07/news-from-front-end.html\">Tasklist </a></b>including F<b>ilters</b> and improved F<b>orms</b></span></li>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\">Embeddable<b> <a href=\"http://blog.camunda.org/2014/07/embedded-case-management-with-cmmn-in.html\">Case Management Engine</a></b> based on the CMMN OMG-Standard&nbsp;</span></li>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\">New <b><a href=\"http://blog.camunda.org/2014/07/scripting-everywhere-in-camunda-bpm.html\">Scripting</a></b>, <b><a href=\"http://blog.camunda.org/2014/07/hello-name-templating-with-camunda-bpm.html\">Templating</a></b>,&nbsp;<b>Data Format</b>&nbsp;and <b>Connector</b> Capabilities</span></li>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\"><b><a href=\"http://blog.camunda.org/2014/07/advanced-asynchronous-continuations.html\">Advanced Asynchronous&nbsp;Continuations</a></b>: asyncBefore and asyncAfter</span></li>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\">Optimizations on the <b>JobExecutor</b> for High Load Scenarios</span></li>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\">Rework of the Process Engine <b>Persistance Layer</b></span></li>\n<li><span style=\"font-family: Arial, Helvetica, sans-serif;\">Process Variable Serialization as XML or JSON</span></li>\n</ul>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\">Of course there is lots of other great stuff in this release, built by the <a href=\"http://camunda.org/team/\">team</a> and our <a href=\"http://camunda.org/team/\">contributors</a>.&nbsp;</span><br />\n<span style=\"font-family: Arial, Helvetica, sans-serif;\"><br />\nYou want to know more? We will announce the release webinar dates soon on this blog. &nbsp;</span></div>\n</div>\n<h4>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\">A note on the release date&nbsp;</span></h4>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\">So far we have been communicating end of October as our release date. Due to very interesting feedback from our <a href=\"http://camunda.com/bpm/references/\">enterprise customers</a> and during our <a href=\"http://blog.camunda.org/2014/09/camunda-bpm-community-day.html\">community day</a> we decided to improve the product even further based on that feedback. That's why we need to take another month.</span></div>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\"><br /></span></div>\n<div>\n<span style=\"font-family: Arial, Helvetica, sans-serif;\">Looking forward to a really awesome release!</span></div>\n",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1300272143082030109/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3702177477350121788",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-09-24T09:07:00+02:00",
   "updated": "2014-09-24T09:23:06+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDExNTQzMzg2OTY5Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/09/how-to-handle-absent-assignees.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3702177477350121788",
   "title": "How to handle absent Assignees",
   "content": "<p>\n<blockquote>\"I want usertasks to be reassigned if the assignee is currently absent. How would I do this in Camunda?\"\n</blockquote>\n</p>\n<p>\nAs always, there is plenty of possible approaches to handle this situation. One of them begin a Task Listener. I created a little snippet that demonstrates how this can work: \n</p>\n<p>\n<a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/task-assignment-absence\">Absence Manager Snippet on GitHub</a>\n</p>\n<p>\nFor those of you who don't want to build and deploy this demo application right away, there is also a little screencast below. \n</p>\n<p>\n<iframe src=\"//player.vimeo.com/video/107013859?title=0&amp;byline=0&amp;portrait=0\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> <p><a href=\"http://vimeo.com/107013859\">How to handle absent Assignees</a> from <a href=\"http://vimeo.com/user22820658\">camunda</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p>\n</p>",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3702177477350121788/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "8389330169421476136",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-09-22T08:37:00+02:00",
   "updated": "2014-09-22T08:38:31+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDExMzY3OTExOTk1Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/09/camunda-bpm-community-day.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8389330169421476136",
   "title": "camunda BPM Community Day 2014",
   "content": "Last Thursday we organized the 2nd <a href=\"http://network.camunda.org/meetings/32\">camunda BPM community Day</a>. After visiting <a href=\"http://blog.camunda.org/2013/10/what-wonderful-community-day-in-prague.html\">Prague last year</a> we went for the home game and invited the community to our Berlin offices. So we put all our desks and chairs and other stuff away to make room for the attendees. Around 65 people had registered and without doing an exact headcount, I suppose that more than 50 attended which Bernd described as \"the biggest open source community day he ever attended\".<br />\n<div>\n<br /></div>\n<div>\n<a href=\"http://column2.com/\">Sandy Kemsley</a>, who also attended, already published extensive summaries on the most of the talks so I am just going to link to them here:</div>\n<div>\n<ul>\n<li><a href=\"http://column2.com/2014/09/australia-post-at-camunda-community-day/\">Australia Post at Camunda Community Day</a></li>\n<li><a href=\"http://column2.com/2014/09/camunda-community-day-technical-presentations/\">camunda Community Day technical presentations</a></li>\n<li><a href=\"http://column2.com/2014/09/whats-next-in-camunda-wrapping-up-community-day/\">What’s Next In camunda – Wrapping Up Community Day</a></li>\n</ul>\n</div>\n<div>\nThank you Sandy!</div>\n<div>\n<br />\nPersonally, I took away many very interesting ideas and lots of user feedback. I am already looking forward to the next camunda BPM community day!<br />\n<br />\n<a name='more'></a><br />\n<br /></div>\n<div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-TpH7Gh2ThyE/VB_BiBoCXmI/AAAAAAAAAbo/IIASX69yegI/s1600/IMG_20140918_124247.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-TpH7Gh2ThyE/VB_BiBoCXmI/AAAAAAAAAbo/IIASX69yegI/s1600/IMG_20140918_124247.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-NtRPAgRP_Nk/VB_Bpp5EKFI/AAAAAAAAAdk/3wWhRxpunDc/s1600/IMG_20140918_125525.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-NtRPAgRP_Nk/VB_Bpp5EKFI/AAAAAAAAAdk/3wWhRxpunDc/s1600/IMG_20140918_125525.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-iRXa02oPaTs/VB_BiXV8mjI/AAAAAAAAAbk/rECyR_WwyHo/s1600/IMG_20140918_131439.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-iRXa02oPaTs/VB_BiXV8mjI/AAAAAAAAAbk/rECyR_WwyHo/s1600/IMG_20140918_131439.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-yDKTxwpsGGY/VB_BjBvFJ8I/AAAAAAAAAbw/_6nnAx2ZJMM/s1600/IMG_20140918_135817.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-yDKTxwpsGGY/VB_BjBvFJ8I/AAAAAAAAAbw/_6nnAx2ZJMM/s1600/IMG_20140918_135817.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-hCCnVuqXtMA/VB_BjgV2-II/AAAAAAAAAb0/b_YSTNu8n9k/s1600/IMG_20140918_145408.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-hCCnVuqXtMA/VB_BjgV2-II/AAAAAAAAAb0/b_YSTNu8n9k/s1600/IMG_20140918_145408.jpg\" height=\"320\" width=\"240\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-zVMlju5qDMI/VB_Bkeyv2wI/AAAAAAAAAcA/dAWV9Okfcjw/s1600/IMG_20140918_145412.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-zVMlju5qDMI/VB_Bkeyv2wI/AAAAAAAAAcA/dAWV9Okfcjw/s1600/IMG_20140918_145412.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-he0PHIMEUX4/VB_BkVzFKHI/AAAAAAAAAb8/WrQQh51ItQU/s1600/IMG_20140918_150625.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-he0PHIMEUX4/VB_BkVzFKHI/AAAAAAAAAb8/WrQQh51ItQU/s1600/IMG_20140918_150625.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-kR2sUa9B9uo/VB_BlGMRnkI/AAAAAAAAAcE/81IfiSBAoZA/s1600/IMG_20140918_150915.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-kR2sUa9B9uo/VB_BlGMRnkI/AAAAAAAAAcE/81IfiSBAoZA/s1600/IMG_20140918_150915.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-eJC-kyQX1bc/VB_Bld41SZI/AAAAAAAAAcY/9Q3s9c79fZ0/s1600/IMG_20140918_152846.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-eJC-kyQX1bc/VB_Bld41SZI/AAAAAAAAAcY/9Q3s9c79fZ0/s1600/IMG_20140918_152846.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/--D2qWubZdro/VB_Blv_xQzI/AAAAAAAAAcQ/uiOuFLS63x8/s1600/IMG_20140918_153339.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/--D2qWubZdro/VB_Blv_xQzI/AAAAAAAAAcQ/uiOuFLS63x8/s1600/IMG_20140918_153339.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-ZqG-hO9VnKM/VB_Bmkv4N1I/AAAAAAAAAcg/PDT5GChtwhk/s1600/IMG_20140918_154425.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-ZqG-hO9VnKM/VB_Bmkv4N1I/AAAAAAAAAcg/PDT5GChtwhk/s1600/IMG_20140918_154425.jpg\" height=\"320\" width=\"240\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-u8mfMbIdxlo/VB_BnLXZ-kI/AAAAAAAAAck/-k-YH6PTp4I/s1600/IMG_20140918_154531.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-u8mfMbIdxlo/VB_BnLXZ-kI/AAAAAAAAAck/-k-YH6PTp4I/s1600/IMG_20140918_154531.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-Bel522oktpI/VB_Bn5oVR3I/AAAAAAAAAco/nWoC-t74G3E/s1600/IMG_20140918_160419.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-Bel522oktpI/VB_Bn5oVR3I/AAAAAAAAAco/nWoC-t74G3E/s1600/IMG_20140918_160419.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-pj9aCukMwfE/VB_BoBtAbFI/AAAAAAAAAcs/muIv56i2qEo/s1600/IMG_20140918_165015.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-pj9aCukMwfE/VB_BoBtAbFI/AAAAAAAAAcs/muIv56i2qEo/s1600/IMG_20140918_165015.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-RTXclcdYXl0/VB_BoR-s_7I/AAAAAAAAAc0/ODw3-mesgQc/s1600/IMG_20140918_174431.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-RTXclcdYXl0/VB_BoR-s_7I/AAAAAAAAAc0/ODw3-mesgQc/s1600/IMG_20140918_174431.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-7TNKmCZsGio/VB_Bo0bwjwI/AAAAAAAAAc8/Y2K8iXkbAX0/s1600/IMG_20140918_175531.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-7TNKmCZsGio/VB_Bo0bwjwI/AAAAAAAAAc8/Y2K8iXkbAX0/s1600/IMG_20140918_175531.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-y-4APOLYWzA/VB_BpdYJ4WI/AAAAAAAAAdA/7wCV3fsLZaE/s1600/IMG_20140918_190334.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-y-4APOLYWzA/VB_BpdYJ4WI/AAAAAAAAAdA/7wCV3fsLZaE/s1600/IMG_20140918_190334.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-qm2h0wyPBK8/VB_BqK6YHeI/AAAAAAAAAdI/_15fk8dcZ1o/s1600/IMG_20140918_190338.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-qm2h0wyPBK8/VB_BqK6YHeI/AAAAAAAAAdI/_15fk8dcZ1o/s1600/IMG_20140918_190338.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-y94C_2gls3A/VB_BqkpBSiI/AAAAAAAAAdM/BiY80zNBqNc/s1600/IMG_20140918_191950.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-y94C_2gls3A/VB_BqkpBSiI/AAAAAAAAAdM/BiY80zNBqNc/s1600/IMG_20140918_191950.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-hyl10QqY6QA/VB_BrC7zASI/AAAAAAAAAdQ/3m7Y40O6e7w/s1600/IMG_20140918_203230.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-hyl10QqY6QA/VB_BrC7zASI/AAAAAAAAAdQ/3m7Y40O6e7w/s1600/IMG_20140918_203230.jpg\" height=\"240\" width=\"320\" /></a></div>\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8389330169421476136/comments"
   },
   "labels": [
    "community",
    "Open Source"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6557421771006590358",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-08-15T10:11:00+02:00",
   "updated": "2014-08-18T21:59:48+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA4MzkxOTg4NzI1Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/08/cockpit-plugin-store.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6557421771006590358",
   "title": "cockpit plugin store",
   "content": "We have Camunda Cockpit as a great tool for monitoring and operations. But roles and requirements for monitoring and operations always differ in our real-life projects -&nbsp;so we allow plugins for Cockpit. In the last 48 hours (on our Camunda hackdays) we implemented a \"plugin store\" for the existing community plugins - so everybody can much easier try out plugins or see what plugins exist.<br />\n<br />\n<a name='more'></a><br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"325\" mozallowfullscreen=\"\" src=\"//player.vimeo.com/video/103495911\" webkitallowfullscreen=\"\" width=\"500\"></iframe><br />\n<br />\nThe plugin store scans various GitHub repositories and searches for plugin metadata. And we compiled a list of all default plugins included in the standard distribution (as most of the cockpit functionality is implemented as plugin). You can browse through all plugins easily:<br />\n<br />\n<div style=\"text-align: center;\">\n<span style=\"font-size: large;\">Try it out:&nbsp;<a href=\"http://camunda.org/plugins/\" target=\"_blank\">http://camunda.org/plugins/</a></span></div>\n<br />\nAfter collecting plugins you can:<br />\n<br />\n<ul>\n<li>download the cockpit.war: In the background this clones the GitHub repository and does a Maven build for all plugins. Then a cockpit Maven project is created which does an overlay of the original cockpit and adds all plugins as dependency. This generates the cockpit.war which then is provided as download.</li>\n<li>download the pom.xml and index.html: You can download the pom.xml used to generate cockpit and build it yourself. The index.html must be included in cockpit to exclude default plugins.</li>\n<li>save the configuration: You will get a unique URL to access the configuration later on - or to send it to your colleagues.</li>\n</ul>\n<div>\nTry it out and give us feedback in <a href=\"http://camunda.org/community/forum.html\" target=\"_blank\">the forum</a>.</div>\n<div>\n<br /></div>\n<div>\nIf you want to develop own plugins these links may be convenient for you - so you can help filling our plugin store immediately:</div>\n<div>\n<ul>\n<li>Maven archetype for cockpit plugins:&nbsp;<a href=\"https://github.com/camunda/camunda-archetypes/tree/master/camunda-archetype-cockpit-plugin\">https://github.com/camunda/camunda-archetypes/tree/master/camunda-archetype-cockpit-plugin</a></li>\n<li>How-to develop a cockpit plugin:&nbsp;<a href=\"http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin\">http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin</a></li>\n<li>Cockpit plugins in the User Guide:&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit-plugins\">http://docs.camunda.org/latest/guides/user-guide/#cockpit-plugins</a></li>\n</ul>\n<div>\nThanks guys (Christian, Falko and Ingo) - we were a great team. Cant't wait for hackdays 2015!</div>\n</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-qKDSXydTC_8/U-2s3pgLb8I/AAAAAAAAAPs/fo3C5Ffvhek/s1600/team.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-qKDSXydTC_8/U-2s3pgLb8I/AAAAAAAAAPs/fo3C5Ffvhek/s1600/team.png\" height=\"213\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6557421771006590358/comments"
   },
   "labels": [
    "cockpit",
    "plugins"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3785856627668174565",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-08-07T16:11:00+02:00",
   "updated": "2014-11-28T12:57:26+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MTc1ODQ2NzU2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/08/camunda-bpm-720-alpha4-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3785856627668174565",
   "title": "camunda BPM 7.2.0-alpha4 released: CMMN Listener, Tasklist, Spin, Connect",
   "content": "Today we release the next alpha release of camunda BPM platform. The highlights of this release are:<br />\n<br />\n<ul>\n<li>CMMN Listener support</li>\n<li>Embedded Forms in Tasklist &nbsp;</li>\n<li>JSON support in Spin</li>\n<li>JSON to Java mapping with Spin</li>\n<li>Simple REST HTTP Connector</li>\n</ul>\n<div>\nSee <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13490\" target=\"_blank\">complete release notes in Jira.</a></div>\n<div>\n<br /></div>\n<div style=\"text-align: center;\">\n<a href=\"http://camunda.org/download\" target=\"_blank\">Download camunda BPM 7.2.0-alpha4 now.</a></div>\n<br />\n<br />\n<a name='more'></a><h3>\nAdd Listeners to your CMMN Case Definitions</h3>\nAs the CMMN support of our platform steadily increases we started to add features known from our BPMN implementation. With this alpha release you can add <i>camunda:caseExecutionListener</i> to plan items and <i>camunda:taskListener</i> to human tasks:<br />\n<br />\n<script src=\"https://gist.github.com/menski/aaa98ff2c2f8b2bd5df0.js\"></script>\n\n<br />\nCase execution listener can be added for the following state transitions: close, complete, create, disable, enable, exit, manualStart, occur, parentResume, parentSuspend, parentTerminate, reactivate, reenable, resume, start, suspend and terminate. Task listener on human tasks are triggered for the following events: assignment, complete, create and delete. Case execution listeners and task listeners on human task which do not specify a event will be triggered on <i>all</i> previous listed events.<br />\n<br />\nThe CMMN Listeners support all features of our BPMN Listeners like field injection or script execution.<br />\n<h3>\nEmbedded forms in Tasklist</h3>\n<div>\nAfter a refactoring of our front end projects and infrastructure finally new features are arriving in the tasklist. Embedded forms of processes and tasks are now visible in the tasklist. There were some major changes to the forms SDK which will improve the performance and the variable handling of your forms. For a sneak peak of the new features see the <a href=\"https://github.com/camunda/camunda-bpm-sdk-js/blob/master/doc/embedded-forms/index.md\" target=\"_blank\">docs</a> of the camunda-bpm-sdk-js. Also tasks can now be assigned from the task list and are correctly displayed by the available filters.<br />\n<br /></div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-u3j7khqcIg0/U-NMC4tf55I/AAAAAAAAADk/Ojptzi3SAT0/s1600/2014-08-07-115043_1015x756_scrot.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-u3j7khqcIg0/U-NMC4tf55I/AAAAAAAAADk/Ojptzi3SAT0/s1600/2014-08-07-115043_1015x756_scrot.png\" height=\"476\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Filtered tasklist with an embedded form. The assignee can be changed directly from the tasklist.</td></tr>\n</tbody></table>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<h3>\ncamunda Spin JSON support</h3>\n<div>\nIt is now possible to read, modify and write JSON with camunda Spin. For more information on all features please see the <a href=\"http://docs.camunda.org/latest/api-references/spin/\" target=\"_blank\">documentation</a>.</div>\n<br />\n<script src=\"https://gist.github.com/menski/3f2a3eb75a6d843075a5.js\"></script>\n\nBesides the manipulation of JSON it is also possible to map Java Objects to their JSON representation and vice versa. This feature will be used by the process engine to improve the serialization of Java Objects inside a process instance. It is already implemented in the core of the engine but not yet available from the public API.<br />\n<br />\n<h3>\nAccessing REST APIs with camunda Connect</h3>\n<div>\n<div style=\"text-align: left;\">\nWith the new camunda Connect REST HTTP Connector we provide a low level connector to access REST APIs from a BPMN process. A simple example process which demonstrates the new connector in combination with variable mappings and script execution can be found in our <a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/servicetask/rest-service\" target=\"_blank\">examples repository</a>.</div>\n</div>\n",
   "author": {
    "id": "g103291278183400801830",
    "displayName": "Sebastian Menski",
    "url": "https://www.blogger.com/profile/06805666054844709860",
    "image": {
     "url": "//lh5.googleusercontent.com/-ke4nOUH5ACw/AAAAAAAAAAI/AAAAAAAAACw/4uZajsjQ5sg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3785856627668174565/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "272279435655105668",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-25T12:58:00+02:00",
   "updated": "2014-07-25T12:58:06+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA2Mjg1ODg2NTgxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/hello-name-templating-with-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/272279435655105668",
   "title": "Hello ${name}! - Templating with camunda BPM",
   "content": "As part of our <a href=\"http://blog.camunda.org/2014/07/scripting-everywhere-in-camunda-bpm.html\" target=\"_blank\">scripting improvements</a>&nbsp;we also addressed templating as a new feature of camunda BPM. With the new <a href=\"http://blog.camunda.org/2014/07/camunda-bpm-720-alpha3-released.html\" target=\"_blank\">camunda BPM 7.2.0-alpha3</a> release it is now also possible to use <a href=\"http://freemarker.org/\" target=\"_blank\">FreeMarker</a> or <a href=\"https://velocity.apache.org/\" target=\"_blank\">Apache Velocity</a> templates inside your BPMN process.<br />\n<br />\n<a name='more'></a><br />\nWe integrated this template engines as JSR 223 compatible scripting engines. Therefore we create small wrappers for these template engines in our <a href=\"https://github.com/camunda/camunda-template-engines-jsr223\" target=\"_blank\">camunda-template-engines-jsr223</a>&nbsp;project.&nbsp;This has the advantage that we do not need new extension elements or attributes for the BPMN xml. Instead a template can be used everywhere a script can be used. This is especially useful for script tasks and input output mappings. If the template engine JSR 223 wrapper is part of your classpath you can use the name of the template engine as script language.<br />\n<br />\nThe maven coordinates of the template engine wrappers a the following if you want to use them with an embedded engine or in a JUnit test case:<br />\n<br />\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\">&lt;dependency&gt;\n  &lt;groupId&gt;org.camunda.template-engines&lt;/groupId&gt;\n  &lt;artifactId&gt;camunda-template-engines-freemarker&lt;/artifactId&gt;\n  &lt;version&gt;1.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n  &lt;groupId&gt;org.camunda.template-engines&lt;/groupId&gt;\n  &lt;artifactId&gt;camunda-template-engines-velocity&lt;/artifactId&gt;\n  &lt;version&gt;1.0.0&lt;/version&gt;\n&lt;/dependency&gt;</pre>\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"></pre>\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"></pre>\n<div style=\"white-space: pre-wrap; word-wrap: break-word;\">\n<span style=\"font-family: inherit;\">The following example shows a simple use case where an input output mapping is used on a service task to generate a text content needed by this task. Here we use the FreeMarker template engine to generate the body of an email.</span></div>\n<br />\n<script src=\"https://gist.github.com/menski/b880b33bdb34aae5e50b.js\"></script>\n\nAs you can see the process variables in the current scope can directly be used in the template. The result of the processed template is than save in a local variable which is available inside of the service task.<br />\n<br />\nAnother interesting use case for templates are camunda connectors (added in <a href=\"http://blog.camunda.org/2014/06/camunda-bpm-720-alpha2-released.html\" target=\"_blank\">7.2.0-alpha2</a>). As templates like scripts can be loaded from external resources it is possible to use the a SOAP envelope template in multiple processes or projects. An example for such an template can be found in our <a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/servicetask/soap-service\" target=\"_blank\">SOAP connector example</a>.<br />\n<br />\n<script src=\"https://gist.github.com/menski/2fd9e14f175d5755def4.js\"></script>\n\nAs a side effect of this new feature we have demonstrated that you can now easily integrate own scripting-like languages in camunda BPM. If it is possible to create a JSR 223 compatible wrapper it can be used in camunda BPM.<br />\n<br />\nTo read more technical details about templating please visit our <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-templating\" target=\"_blank\">user guide</a>. And please let us know what you think about this new feature.",
   "author": {
    "id": "g103291278183400801830",
    "displayName": "Sebastian Menski",
    "url": "https://www.blogger.com/profile/06805666054844709860",
    "image": {
     "url": "//lh5.googleusercontent.com/-ke4nOUH5ACw/AAAAAAAAAAI/AAAAAAAAACw/4uZajsjQ5sg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/272279435655105668/comments"
   },
   "labels": [
    "BPMN",
    "scripting",
    "templating"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8088840387540502192",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-23T09:25:00+02:00",
   "updated": "2014-07-23T16:28:32+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA2MTI1NzEyOTI0Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/news-from-front-end.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8088840387540502192",
   "title": "News from the front-(end)",
   "content": "The front-end of the camunda BPM platform has been under heavy development.<br />\nThe web-apps have been externalized and separated into different projects,<br />\nwhich means that the \"<a href=\"https://github.com/camunda/camunda-admin-ui\" target=\"_blank\">admin</a>\", the \"<a href=\"https://github.com/camunda/camunda-cockpit-ui\" target=\"_blank\">cockpit</a>\" and the upcoming \"<a href=\"https://github.com/camunda/camunda-tasklist-ui\" target=\"_blank\">tasklist</a>\" have their own repositories,<br />\nand those projects are now relying on the \"<a href=\"https://github.com/camunda/camunda-commons-ui\" target=\"_blank\">UI commons</a>\" and the \"<a href=\"https://github.com/camunda/camunda-bpm-sdk-js\" target=\"_blank\">Javascript SDK</a>\"&nbsp;libraries.<br />\n<br />\n<a name='more'></a><br />\n<h2>\nThe Javascript SDK</h2>\nThe actual JS SDK has already been implemented in the upcoming tasklist and allows us to start processes and use their embedded forms (when they use one).<br />\n<br />\nThe forms handling is also being re-written from scratch to be easier to use and less conflicting with the HTML you might have wrote to customize your user experience.<br />\n<br />\n<h3>\nNew embedded form:</h3>\nWhat did change? Mostly, the attributes.<br />\n<ul>\n<li>An embedded form&nbsp;<strong>must</strong>&nbsp;have an attribute&nbsp;<em>cam-form</em>&nbsp;in order to be discovered by the toolkit.</li>\n<li>The fields who are relevant to the engine&nbsp;<b>must</b>&nbsp;have the&nbsp;<i>c</i><i>am-variable-name</i> attribute with a value being the name of a variable.</li>\n<li>The tags having a cam-variable-name attribute may also have a <i>cam-variable-type</i> attribute with one of the following values:\n    <ul>\n<li>string - only supported type at the moment of writing this post</li>\n<li>java primitive types, date, integer, long, short, ...</li>\n<li>your own type - if you want to work with complex data</li>\n</ul>\n</li>\n</ul>\nHow does it work? The following things will happen:\n<br />\n<ol>\n<li>look for form <i>tag</i> with a <i>cam-form</i> attribute</li>\n<li>within the form, iterate threw the fields having a <i>cam-variable-name</i> attribute and collect information</li>\n<li>send a request to the engine to get information about the variables</li>\n<li>update the form fields accordingly (the values and types already present in the form are not being overridden)</li>\n<li>the user fills the form and click the submit button</li>\n<li>the data is validated (and messages are shown if necessary)</li>\n<li>if the validation succeeded, a request - using the API client - is performed</li>\n</ol>\n<script src=\"https://gist.github.com/zeropaper/35248319105f3470af65.js?file=start-form.html\"></script>\nNote, if you cloned the <a href=\"https://github.com/camunda/camunda-bpm-platform\" target=\"_blank\">camunda-bpm-platform</a> repository, you will find this file under<br />\n<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/examples/invoice/src/main/webapp/forms/start-form.html\">examples/invoice/src/main/webapp/forms/start-form.html</a>. \n\n<br />\n<h3>\nNew API client</h3>\nThe API client is aimed to ease the communication between your front-end (or node.js) application and the platform engine. Using it will not only reduce the amount of code you have to write but also increase the life span of your scripts.\n<br />\nOur goal is to standardize as much as possible the methods and their signatures for each resources in order to make it easy to learn and use. So, most of the resources will have a <i>list</i> function taking<br />\n<ol>\n<li>an object - describing the query parameters&nbsp;/ options&nbsp;- as first argument</li>\n<li>a callback - à-la node.js - to treat the response.\n  In the case of a <i>list</i> call, the callback function will have 2 arguments - again, à-la node.js - like:\n    <ol>\n<li>error: should be falsy, unless an error occurred</li>\n<li>result: is going to be an object with the properties\n        <ul>\n<li>count: is the total amount of records matching the \"where\" criteria</li>\n<li>items: will be an array of objects</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\nThe following snippet is inspired by the implementation in the new tasklist.\n<script src=\"https://gist.github.com/zeropaper/35248319105f3470af65.js?file=sdk-process-definition.js\"></script>\n<br />\n<h3>\nUpcoming</h3>\nAs mentioned, there is a lot of work done (and to be done) on the different aspects of the web-apps.<br />\nWe have a plan, we started implementing it and we will, within a few weeks, add API client resources, support additional form field types, improve the stability of our code and provide a brand new web-based user interface for the tasklist.<br />\n<br />\nBy the way... if you want to work on those kind of projects, with a small but great team and play some kicker: we are still <a href=\"http://camunda.com/about/jobs/frontend-developer.php\">looking for front-end developers</a>.",
   "author": {
    "id": "g115815277775497560712",
    "displayName": "Valentin Vago",
    "url": "https://www.blogger.com/profile/07490902735766561171",
    "image": {
     "url": "//lh3.googleusercontent.com/-On5q8HQUpvg/AAAAAAAAAAI/AAAAAAAAADA/3FpT4wS9bKw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8088840387540502192/comments"
   },
   "labels": [
    "cockpit",
    "embedded forms",
    "JavaScript",
    "node.js",
    "SDK",
    "task forms",
    "tasklist",
    "toolkit",
    "UI",
    "web-app",
    "webapp"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4795031805747295778",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-22T07:27:00+02:00",
   "updated": "2014-12-17T20:08:19+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4ODQzMjk5MzU0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/embedded-case-management-with-cmmn-in.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4795031805747295778",
   "title": "Embedded Case Management with CMMN in camunda BPM",
   "content": "In our latest alpha release we include a preview of the upcoming support for CMMN (Case Management Model and Notation) in camunda BPM. Time to have a look at CMMN and the way it is implemented in camunda BPM.<br />\n<a name='more'></a><h3>\nWhat is CMMN?</h3>\nCMMN is an emerging OMG standard for (Adaptive) Case Management. Version 1.0 is freshly released and vendor adoption starts to take off. <a href=\"http://www.businessprocessincubator.com/tools/case-management/cmmnwebmodeler.html\">Trisotech already provides a Web-based Modeler for CMMN</a>&nbsp;and we at camunda have the ambition to provide the first <a href=\"http://blog.camunda.org/2014/07/open-source-embedded-case-management.html\">embedded, Open Source Runtime Engine for CMMN</a>.<br />\n<br />\nCMMN allows modeling Cases. A case allows humans to do work in a more or less structured way in order to achieve something. Classic examples where case management is applied are Credit Application, Customer Support Management, Document Management, and so on.<br />\n<br />\nThe following is a simple Example of a Credit Application Case modeled in CMMN:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-XGGj3Ikt-58/U8eXtudzhxI/AAAAAAAAAbU/L9WZHvOWXJw/s1600/loan-application.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-XGGj3Ikt-58/U8eXtudzhxI/AAAAAAAAAbU/L9WZHvOWXJw/s1600/loan-application.png\" height=\"245\" width=\"320\" /></a></div>\n<br />\n<div>\nThe Picture above shows the graphical representation of the CMMN Model. The model also has an executable XML representation which looks like this:\n</div>\n<div>\n<script src=\"https://gist.github.com/meyerdan/3f5611399c3c2ca25538.js\"></script>\n</div>\n<h3>\nNew Features in 7.2.0-alpha3</h3>\n<div>\nIn camunda BPM 7.2.0-alpha3 we implemented the basic Case Instance and Plan Item Instance lifecycle. On top of this, the following task types are available:<br />\n<br />\n<ul>\n<li>Stage</li>\n<li>Human Task</li>\n<li>Process Task</li>\n<li>Case Task</li>\n</ul>\n<br />\nUsing API you can now start and complete cases and perform the lifecycle on the plan items:</div>\n<div>\n<script src=\"https://gist.github.com/meyerdan/44e83b51053add9639e4.js\"></script></div>\n<h3>\nRead the Docs</h3>\n<div>\n<a href=\"http://docs.camunda.org/latest/api-references/cmmn10/\">There is some documentation on the CMMN implementation available.</a><br />\n<br />\n<b>Update!</b><br />\nWe have published a <a href=\"http://blog.camunda.org/2014/12/getting-started-cmmn-and-camunda.html\">getting started guide for CMMN</a>.</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4795031805747295778/comments"
   },
   "labels": [
    "ACM",
    "adaptive case management",
    "case management",
    "CMMN",
    "dynamic case management"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2000170527412974688",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-21T15:28:00+02:00",
   "updated": "2014-07-22T07:32:57+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA2MDA3MTc3MjMzCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/scripting-everywhere-in-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2000170527412974688",
   "title": "Scripting Everywhere in camunda BPM",
   "content": "With the last <a href=\"http://blog.camunda.org/2014/07/camunda-bpm-720-alpha3-released.html\" target=\"_blank\">camunda BPM 7.2.0-alpha3</a> release we heavily extended the scripting support of the camunda BPM platform. We started to improve scripting support with the <a href=\"http://blog.camunda.org/2014/05/720-alpha1-released-rest-api-bugfixes.html\" target=\"_blank\">7.2.0-alpha1</a> release and now we think we are done. It is now your turn to start using the different scripting languages and help us to polish this feature for our final release. To get an detailed overview of the scripting support please visit our&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-scripting\" target=\"_blank\">user guide</a>.<br />\n<a name='more'></a><br />\n<h3>\nWhere can I use scripts?&nbsp;</h3>\n<div>\nEverywhere but to be more specific you can use scripts as:</div>\n<div>\n<ul>\n<li>Script tasks (of course)</li>\n<li>Execution listener</li>\n<li>Task listener</li>\n<li>Condition of sequence flows</li>\n<li>Input output mapping (added in <a href=\"http://blog.camunda.org/2014/06/camunda-bpm-720-alpha2-released.html\" target=\"_blank\">7.2.0-alpha2</a>)</li>\n</ul>\n<div>\nThe implementation of the scripting support in camunda BPM is designed to be independent from BPMN which will allow us to also support scripting in our new <a href=\"http://blog.camunda.org/2014/07/open-source-embedded-case-management.html\" target=\"_blank\">CMMN implementation</a> right from the beginning.</div>\n<h3>\nWhy should I use scripts?</h3>\n</div>\n<div>\nFirst of all scripting is fun. But besides that there are also more&nbsp;convincing reasons to use scripting in camunda BPM.</div>\n<div>\n<br /></div>\n<div>\nWith the extended scripting support it is easy to prototype complete processes including the business logic. Also the sharing of such prototypes is simple, because the whole code can be embedded inside the process. So only one file has to be exchanged and discussed. In combination with the BPMN model API it allows you to create mock processes with business logic directly inside your code.</div>\n<div>\n<br /></div>\n<div>\nAnother advantage is that now also non-Java programmers can use camunda BPM to execute their processes without writing Java code. Or if you already have an non-Java code base you can now use it inside camunda BPM without porting it to Java.</div>\n<div>\n<br /></div>\n<div>\nWe also allow you to reuse scripts by using the camunda:resource attribute. Which loads scripts from external resources. Either the scripts can be part of your deployment or reside in the classpath of your application. To get more information on this please see the corresponding <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-scripting-script-source\" target=\"_blank\">section</a> in the user guide.</div>\n<div>\n<br /></div>\n<h3>\nLet there be scripts</h3>\n<div>\nTo demonstrate the new feature I created a small example process without a single line of Java code. The following process simulates a dice game in a casino.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-N3P_O7NkXEQ/U8y9hXZzb7I/AAAAAAAAADM/iulOCrZDiII/s1600/scripting-everywhere.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-N3P_O7NkXEQ/U8y9hXZzb7I/AAAAAAAAADM/iulOCrZDiII/s1600/scripting-everywhere.png\" height=\"236\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe first process element is a script task which should welcome the new player.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<script src=\"https://gist.github.com/menski/5c5877d1ff6bc8a357b4.js\"></script>\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nWe use a input parameter mapping to randomly select our new player. Therefore a groovy script is evaluated and the result of the last script line is saved to the local variable <span style=\"background-color: white; font-family: inherit;\">player</span>. Inside the script task than another groovy script just welcomes the newly select player with a kind message.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAt the start of the exclusive gateway we roll the dice. To do so we use an execution listener for the start event of the gateway.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<script src=\"https://gist.github.com/menski/cc5789441ad35f3b5445.js\"></script>\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe execution listener is another script which saves the result as a process variable so it can be used to evaluate the following sequence flow conditions. The variable is set with the help of the execution variable which corresponds to the DelegateExecution interface.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe conditions of the sequence flow could be expression language but this is a blog post about scripting so lets use a script for that.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<script src=\"https://gist.github.com/menski/58dee4e7dcd6285bdff9.js\"></script>\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nBoth groovy scripts just evaluate the process variable set by the exclusive gateway.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe last action is to inform the system which user task should be executed. For that we add a task listener to both user tasks for the create event.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<script src=\"https://gist.github.com/menski/2af437bfa7e5788fc397.js\"></script>\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe task listeners are again groovy scripts which uses the task variable to print the task name and the event. The task variable corresponds to the DelegateTask interface.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nSo that's it. A whole process without a single line of Java code. To see the complete BPMN xml have a look at <a href=\"https://gist.github.com/menski/6809bba3c3e3bbc3ad56\" target=\"_blank\">this gist</a>. Or if you want directly start playing with it you can clone a test project <a href=\"https://github.com/menski/camunda-engine-unittest/tree/scriptingEverywhere\" target=\"_blank\">here</a>.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nNow it's your turn. Have fun and start scripting. And if you have any remarks our if you miss a features please let us know.</div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g103291278183400801830",
    "displayName": "Sebastian Menski",
    "url": "https://www.blogger.com/profile/06805666054844709860",
    "image": {
     "url": "//lh5.googleusercontent.com/-ke4nOUH5ACw/AAAAAAAAAAI/AAAAAAAAACw/4uZajsjQ5sg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2000170527412974688/comments"
   },
   "labels": [
    "BPMN",
    "groovy",
    "scripting"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3732897290927397664",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-21T14:41:00+02:00",
   "updated": "2014-07-21T14:41:21+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA1OTQ2NDgxNjIxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/bpmnio-introduces-simple-modeling.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3732897290927397664",
   "title": "bpmn.io introduces Simple Modeling Features",
   "content": "The latest release of the <a href=\"http://bpmn.io/\">bpmn.io Javascript toolkit for BPMN</a>&nbsp;introduces basic modeling features.<br /><br /><a href=\"http://bpmn.io/blog/posts/2014-simple-process-modeling.html\">Read more about it in Nico's blogpost</a>.",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3732897290927397664/comments"
   },
   "labels": [
    "bpmn.io",
    "JavaScript",
    "modeling"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4108230365925481710",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-19T10:00:00+02:00",
   "updated": "2014-12-17T20:09:18+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4ODQzMzU4MTUwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/open-source-embedded-case-management.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4108230365925481710",
   "title": "The Case for Open Source Embedded Case Management",
   "content": "<div>\nIn camunda BPM we enhance our lightweight embedded BPMN Process Engine with <a href=\"http://docs.camunda.org/latest/api-references/cmmn10/\">case management features</a> based on CMMN. CMMN is the new emerging industry standard for (Adaptive) Case Management (ACM) developed by the OMG (Object Management Group), the same consortium which is also behind &nbsp;the BPMN 2.0 standard. I believe that lightweight open source solutions based on open standards can make a difference in the case management space. This is why.</div>\n<h3>\nThe traditional \"hard-coded\" Approach</h3>\n<div>\nTraditionally, case management applications were hard coded. If an enterprise needed an application for handling credit applications, it would call on to their Java Developers (or worse: their Cobol Mainframe Developers), there would be some kind of software specification document written and the developers would get down to business and hard code the complete application logic in Java (or Cobol ;) ).</div>\n<div>\nIf the enterprise has a good software development process and skilled software developers, the result of this is usually also quite good: the application is exactly tailored to the specific requirements of the enterprise. However, there are also many downsides to this approach: &nbsp;</div>\n<div>\n<ul>\n<li>due to the fact that the complete business logic is hard coded, it is hard to understand and change. Also, the implemented case logic may not correspond to the initial specification.</li>\n<li>There are many \"generic\" parts of a case management application which have to be rewritten for each and every application.</li>\n<li>If you have multiple case management applications, there is no \"central monitoring\" for all applications. There is no overview over both credit applications and customer support management, for example.</li>\n</ul>\n<h3>\nThe blind Alley: Proprietary Suites</h3>\n<div>\nThe answer to this is usually that an enterprise buys a proprietary case management suite. While these suites help enterprises to solve some of the problems of hard-coded case management applications, they come with an entirely new set of problems:</div>\n</div>\n<div>\n<ul>\n<li>Vendor Lock In,</li>\n<li>Usually these suites have an all-in&nbsp;<a href=\"http://blog.camunda.org/2013/04/the-camunda-hypothesis.html\">zero-coding approach</a>: everything from the user interface up to the business rules has to be \"graphically configured\". This limits developers to the possibilities that the vendor foresaw in the development tool and it keeps developers from doing what they do best: coding,</li>\n<li>The applications are usually generic and cannot easily be adapted to the specific requirements an enterprise may have.</li>\n</ul>\n<h3>\nThe Future is Open Source Embedded Case Management</h3>\n<div>\nSo traditionally, enterprises had to choose between either developing everything themselves or buying an expensive proprietary case management suite. This is where I believe that&nbsp;<b>lightweight, embedded case management based on open source and open standards</b>&nbsp;can make a difference. If you use CMMN and a lightweight open source case engine like camunda,</div>\n<div>\n<ul>\n<li>You have minimal vendor lock-in due to open standards (CMMN, Java, ...) and Open Source,</li>\n<div>\n</div>\n<li>You can leverage the CMMN standard for modeling executable Case Models which are more easy to understand and refactor than code,</li>\n<li>The lightweight case engine can be embedded into custom applications so that you can still code many aspects (such as business logic, user interfaces, ...) in Java and other programming languages but on the other hand you can delegate the generic aspects (case instance state management, monitoring, ...) to the case management engine.</li>\n</ul>\n<div>\n<b>Update!</b></div>\n</div>\n</div>\n<div>\nWe have published a&nbsp;<a href=\"http://blog.camunda.org/2014/12/getting-started-cmmn-and-camunda.html\">getting started guide for CMMN</a>.</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4108230365925481710/comments"
   },
   "labels": [
    "ACM",
    "adaptive case management",
    "BPMN",
    "case management",
    "CMMN",
    "dynamic case management",
    "Open Source"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2730088734685662247",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-18T14:24:00+02:00",
   "updated": "2014-07-18T14:24:27+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA1Njg2MjY3NjY2Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/advanced-asynchronous-continuations.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2730088734685662247",
   "title": "Advanced Asynchronous Continuations in camunda BPM",
   "content": "<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-asynchronous-continuations\">Asynchronous continuations</a> are a a very powerful process engine feature. Up until now you could use asynchronous continuations in two ways:\n<br />\n<ol>\n<li>Before an activity.&nbsp;</li>\n<li><a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-start-events-asynchronous-instantiation\">Asynchronous process instantiation using the async start event. </a>(Added in 7.0).</li>\n</ol>\nWith <a href=\"http://blog.camunda.org/2014/07/camunda-bpm-720-alpha3-released.html\">camunda BPM 7.2.0-alpha3</a>, Asynchronous continuations become even more powerful:<br />\n<ol>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-configuring-asynchronous-continuations\">You can now place an asynchronous continuation AFTER an activity. </a>(<span style=\"color: red;\"><b>HOT!)</b></span></li>\n<li>Asynchronous continuations are now supported on more BPMN 2.0 constructs, such as the Parallel Gateway.</li>\n</ol>\n<div>\n<a name='more'></a></div>\n<h3>\nWhy Asynchronous Continuations?</h3>\n<div>\nAsynchronous continuations are break-points in the process execution. They are used as transaction boundaries and allow another thread than the currently active thread to continue execution.</div>\n<div>\n<br /></div>\n<div>\nFrom a use case perspective\n<br />\n<ul>\n<li>Async is used for placing a safe-point before an activity such that the execution state is committed. If the activity then fails to execute, the transaction is rolled back only up to the safe point.</li>\n<li>Async also comes in handy if you have longer-running computations and do not want to block the calling thread (eg. HTTP Thread) but instead want to delegate the heavy lifting to a background thread.</li>\n<li>Finally, due to the fact that asynchronous continuations are executed by the job executor, the retry mechanism can be used in order to retry a failed activity execution.</li>\n</ul>\n</div>\n<div>\n<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-why-asynchronous-continuations\">Asynchronous continuations are covered from a use case perspective in the user guide.</a><br />\n<br />\n<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-understanding-asynchronous-continuations\">More in-depth information about how asynchronous continuations work in camunda BPM can be found in the userguide.</a></div>\n<h3>\nNEW: Asynchronous Continuations After an Activity</h3>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://stage.docs.camunda.org/guides/user-guide/assets/img/process-engine-async.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://stage.docs.camunda.org/guides/user-guide/assets/img/process-engine-async.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\"><br />\nAsynchronous Continuations BEFORE and AFTER an activity. <a href=\"http://stage.docs.camunda.org/guides/user-guide/#process-engine-transactions-in-processes-understanding-asynchronous-continuations\">Details</a>.</td></tr>\n</tbody></table>\n<div>\n<br /></div>\n<div>\nAsynchronous continuations after an activity come in handy when you want to place a safe point after an activity:</div>\n<div>\n<br /></div>\n<div>\n<script src=\"https://gist.github.com/meyerdan/de3bea2a1de7eb1039d8.js\"></script></div>\n<div>\n<br /></div>\n<div>\nAsynchronous continuations after an activity are useful if you want to make sure that the state changes performed by the activity are saved before the process engine continues process execution.</div>\n<div>\n<ul>\n<li>Usually this is a lot more intuitive than placing the asynchronous continuation before the next activity.</li>\n<li>An activity may have multiple outgoing sequence flows. Without the capability to place an asynchronous continuation after the activity, you would have to place it before all of the next activities.</li>\n<li>Not every activity may have a \"next activity\". In BPMN 2.0 it is perfectly valid that an activity does not have any outgoing flows. Or, the activity may be a compensation handler which is not allowed to have an outgoing sequence flow.</li>\n<li>If the activity is followed by a synchronizing construct (like a parallel gateway) it is useful to place a safe point after the activity in order to make sure a potential failure &amp; retry caused by optimistic locking does not affect the activity. (You could also place an asynchronous continuation BEFORE the parallel gateway, of course).</li>\n</ul>\n</div>\n<div>\n<br /></div>\nI think that currently camunda BPM is the most advanced open source process engine in this area. If you know another open source process engine with has more flexible asynchronous continuation capabilities, let us know, I am always good for a challenge :)<br />\n<br />\n----<br />\nAs a side-note: the concept which makes asynchronous continuations possible is the \"Atomic Operation\". When the process engine executes a process, it will progress though the graph as a sequence of Atomic Operations. It then becomes possible to break execution between two atomic operations being executed. We are implementing <b>CMMN (The new standard for adaptive case management, ACM)</b> with the&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/engine/src/main/java/org/camunda/bpm/engine/impl/cmmn/operation\">same programming model</a>. As a result, it will also be possible to implement Async for CMMN as well :)<br />\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2730088734685662247/comments"
   },
   "labels": [
    "async",
    "BPMN",
    "engine"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5474040284540665849",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-17T15:18:00+02:00",
   "updated": "2014-07-17T17:52:21+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDA1NjEyMzQxNTE1Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/camunda-bpm-720-alpha3-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5474040284540665849",
   "title": "camunda BPM 7.2.0-alpha3 released: CMMN, Scripting, Async, Correlation, Model Api, Forms",
   "content": "Today we release camunda BPM 7.2.0-alpha3. Usually when we do a new alpha release, I write a Blogpost which gives an overview over the new features added in that release. But this time I cannot do that: there are simply too many new features to cover in a single blog post! So this time I will just give a bullet point list with the highlights and you guys will just have to wait for additional blogposts to come out in the next days.<br />\n<br />\nSo what is in the new Release?<br />\n<ul>\n<li><b>CMMN support</b> is greatly enhanced.&nbsp;(CMMN is the emerging OMG standard for Case Management). <a href=\"http://docs.camunda.org/latest/api-references/cmmn10/\">Documentation</a>.</li>\n<ul>\n<li>Support the basic case instance and plan item lifecycle,</li>\n<li>support for stages, human tasks, case tasks and process tasks.</li>\n</ul>\n<li><b>Scripting</b>, everywhere:</li>\n<ul>\n<li>Load script sources from classpath and deployment,</li>\n<li>Auto-deployment of script sources,</li>\n<li>Use scripts as sequence flow conditions, task listeners, execution listeners,</li>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-scripting\">Greatly improved documentation</a>.</li>\n</ul>\n<li><b>Template Engines</b>: you can now <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-templating\">use FreeMarker and Apache Velocity as template engine</a> as an alternative to a script engine. Template engines allow a more declarative approach to composing payload (XML, JSON, Email Templates etc...)</li>\n<li><b>Javascript SDK and Forms</b>: we started work on a reusable Javascript SDK which runs in Node.JS and the Browser. Providing</li>\n<ul>\n<li>Convenient access to the REST Api Operations in Javascript,</li>\n<li>Reusable Embedded Forms. Use Embedded Forms inside and outside of camunda Tasklist.</li>\n</ul>\n<li>Enhanced <b>Asynchronous Continuations</b>:&nbsp;</li>\n<ul>\n<li>Use <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-transactions-in-processes-configuring-asynchronous-continuations\">Asynchronous Continuations AFTER activities</a></li>\n<li>Use Asynchronous Continuations for more BPMN constructs (such as the Parallel Gateway)</li>\n</ul>\n<li>Enhanced <b>Model API</b>:&nbsp;</li>\n<ul>\n<li>Support for all event definitions and gateways</li>\n<li>Support for writing BPMN DI</li>\n</ul>\n<li>Enhanced <b>Message Correlation</b>: You can now <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-message-events-using-the-runtime-service39s-correlation-methods\">correlate a message to all executions</a> which match the correlation criteria. (Contribution by <a href=\"https://github.com/sm29105\">Michael Scholz</a>)&nbsp;</li>\n<li>...</li>\n</ul>\n<div>\nOver the last 4 Weeks, over 70 Issues were closed. See the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13390\">complete release Notes in JIRA</a>.</div>\n<div>\n<br /></div>\n<div style=\"text-align: center;\">\n<b><a href=\"http://camunda.org/download/\">Download camunda BPM 7.2.0-alpha3 now!</a></b></div>\n<div style=\"text-align: center;\">\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5474040284540665849/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3900582880098573087",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-07-11T09:00:00+02:00",
   "updated": "2014-11-07T13:20:45+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE1MzYyODQ1Mjk1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/07/automated-ui-testing-with-camunda-web.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3900582880098573087",
   "title": "Automated UI testing with camunda web applications and IntelliJ IDE",
   "content": "<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\n<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\nAutomated user interface (UI) tests are an effective way to ensure the functionality of your webapp. Furthermore, they serve as E2E tests as they simulate real user interaction and stimulate the whole application down to the database.<br />\nBUT, automated UI tests are presumed to be hard to maintain and difficult to understand. Small changes in the webapp’s GUI have massive impact on the test suite to result in refactoring the test cases. Especially when the tests are built by screen recorder.<br />\nAnother weakness is the response of UI tests. UI tests are perfect to avoid regression running on a CI server all night long. But what if the front-end developer wants to get quick feedback during development?<br />\nIn this post we give a short introduction to UI testing at camunda. We show how to design robust tests that are easy to maintain and how to get a quick response from your test suite during webapp development.<br />\n<div>\n</div>\n<br />\n<a name='more'></a><br />\n<h3 style=\"text-align: left;\">\nThe UI Test Framework</h3>\nThe camunda bpm stack currently includes four webapps built with HTML 5 and Angular JS: cycle, cockpit, tasklist and admin. For that, we introduced <a href=\"https://docs.angularjs.org/guide/e2e-testing\" target=\"_blank\">Protractor</a>, an E2E test utility for Angular applications.<br />\nAn important argument for this framework is the seamless integration into our existing technology stack. Protractor is a Node.js based utility that uses Jasmine for its test syntax and can be run with Grunt. Writing UI tests in this environment is very similar to writing unit tests. For both you use the same syntax. As a result, tester and developer speak the same jargon so that knowledge can easily be shared.<br />\n<br />\n<h3 style=\"text-align: left;\">\nTest Development</h3>\nAs mentioned in the beginning, our goal is to write UI tests that are easy to maintain. Let’s go through the following example:<br />\n<br />\n<script src=\"https://gist.github.com/mschoe/eb473ae23c2b599090d0.js?file=testSpec.js\"></script>\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\nWith this test we check some user administration functionality in the camunda Admin webapp. Although the test will exactly do what we expect, it contains some weaknesses:<br />\n-<span class=\"Apple-tab-span\" style=\"white-space: pre;\"> </span>The tests are difficult to understand as they contain a lot of Protractor-specific expressions.<br />\n-<span class=\"Apple-tab-span\" style=\"white-space: pre;\"> </span>The test logic and the page elements are closely coupled. Changes on the webapp GUI will have a huge impact on the test cases.<br />\n-<span class=\"Apple-tab-span\" style=\"white-space: pre;\"> </span>With each test we duplicate code.<br />\nWhile the mentioned problems seem to be manageable, they will be multiplied with an increasing number of test cases. In the end, the test suite is difficult to maintain.<br />\nFortunately, it is just a matter of code design to avoid the shown problem. To make our tests more robust against changes and to reduce code duplication we encapsulate all logic required to interact with the application under test into separate classes. This design pattern is called Page Object Pattern. As a result we get a clean separation between test logic and the page control logic as shown in the following snippet:<br />\n<br />\n<script src=\"https://gist.github.com/mschoe/eb473ae23c2b599090d0.js?file=testSpecRefactoring.js\"></script>\n\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\nAfter this refactoring the test cases are much better to understand as every step has become more meaningful. Now the test is focused on the behaviour of the application under test and the test specification is more comprehensive. <br />\nThe corresponding page object looks like this:<br />\n<br />\n<script src=\"https://gist.github.com/mschoe/eb473ae23c2b599090d0.js?file=pageObject.js\"></script>\n\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\nBy using page objects we decoupled the test from the page elements of the webapp, thus changes on the webapps GUI have no impact on the test case. Furthermore, you only need to adjust the test suite at single points in case of changes.<br />\nThe outcome of this is a reduction of code duplication, as the page object can be reused wherever needed. <br />\nIn addition to the page object that represents the page under test, we create a prototype page object. This prototype can be enriched with functionality that is available for all pages of the webapp:<br />\n<br />\n<script src=\"https://gist.github.com/mschoe/eb473ae23c2b599090d0.js?file=pageObjectBase.js\"></script>\n\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\nFinally, we get a tidy test suite that is much easier to maintain in medium/long term.<br />\n<br />\n<h3>\nIntegrating Protractor into IntelliJ IDE</h3>\n<div>\n</div>\n<div style=\"-webkit-text-stroke-width: 0px; color: black; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px;\">\n<div style=\"margin: 0px;\">\n<div style=\"text-align: left;\">\n<div style=\"text-align: left;\">\n<span style=\"font-family: inherit;\">Protractor can be integrated into the IntelliJ IDE by installing the node.js plugin. That gives us the benefit to run and to debug tests directly in the IDE:</span></div>\n</div>\n</div>\n<div class=\"separator\" style=\"clear: both; font-size: medium; font-weight: normal; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; font-size: medium; font-weight: normal; text-align: center;\">\n</div>\n<div style=\"font-size: medium; font-weight: normal; margin: 0px;\">\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-vXTSQTbMCuM/U78AfRbp2lI/AAAAAAAADbU/26wiZeyl1Go/s1600/10_intellij_debugging.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-vXTSQTbMCuM/U78AfRbp2lI/AAAAAAAADbU/26wiZeyl1Go/s1600/10_intellij_debugging.png\" /></a></div>\n<br />\n<br /></div>\n</div>\n<div style=\"text-align: left;\">\nFurthermore, IntelliJ features auto completion in combination with the page objects:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-KN6ptAlROqk/U78D4XpCjFI/AAAAAAAADbo/VoSuvc9Mc3Q/s1600/11_intellij_autocomplete.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-KN6ptAlROqk/U78D4XpCjFI/AAAAAAAADbo/VoSuvc9Mc3Q/s1600/11_intellij_autocomplete.png\" /></a></div>\n<div style=\"text-align: left;\">\n<br /></div>\n<h3 style=\"text-align: left;\">\n&nbsp;UI testing during webapp development</h3>\nRunning a huge automated UI test suite can take a while. So it is common to trigger these tests on your CI server over night to not slow down the build pipeline. This is perfect for regression testing but insufficient during the webapp development process. With the integration of Protractor into Grunt we can trigger single tests simply over the command line or directly in our IDE:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-EaDOsBMOebY/U75C893nVJI/AAAAAAAADak/bYbpjXuhKXc/s1600/05_grunt_command_line.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-EaDOsBMOebY/U75C893nVJI/AAAAAAAADak/bYbpjXuhKXc/s1600/05_grunt_command_line.png\" /></a></div>\n<br />\n<br />\nFor that, we create specific profiles in the&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-platform/blob/7f194058973094cdd1d8c10a5ce589d27f09f343/webapps/camunda-webapp/webapp/Gruntfile.js#L398\" target=\"_blank\">Grunt configuration file</a>&nbsp;of our webapps as shown in the following image:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-Kwqt7eTf0bk/U75C9GewxMI/AAAAAAAADa4/6LpS5QsRjIc/s1600/06_grunt_profile.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-Kwqt7eTf0bk/U75C9GewxMI/AAAAAAAADa4/6LpS5QsRjIc/s1600/06_grunt_profile.png\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\nThe test can also be triggered automatically after a change in the codebase. For this purpose we combine the grunt auto-build command with a <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/7f194058973094cdd1d8c10a5ce589d27f09f343/webapps/camunda-webapp/webapp/Gruntfile.js#L265\" target=\"_blank\">protractor profile</a>:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-0Pjx660UfPY/U75C9ecsMbI/AAAAAAAADao/up1AkHOyT8s/s1600/07_grunt_autoBuild.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-0Pjx660UfPY/U75C9ecsMbI/AAAAAAAADao/up1AkHOyT8s/s1600/07_grunt_autoBuild.png\" /></a></div>\n<br />\n<h3 style=\"text-align: left;\">\nConclusion</h3>\nFor an active codebase you need a flexible test suite. Writing tests in the described way allows you to separate test logic from page control logic so that high maintainability and better readability can be reached.<br />\nProtractor as test framework can easily be integrated in many setups, so that even changes in the technology stack only have a small impact on the test suite.<br />\nLast but not least, we decrease development time as we already get feedback from our UI tests during webapp development.<br />\nWith IntelliJ we have a powerful IDE that allows us to build, run and debug UI tests. We thank <a href=\"http://www.jetbrains.com/\" target=\"_blank\">JetBrains </a>for the great support for our <a href=\"http://camunda.org/\" target=\"_blank\">open source project</a>.<br />\n<br /></div>\n",
   "author": {
    "id": "g106268355273833601853",
    "displayName": "Michael Schöttes",
    "url": "https://www.blogger.com/profile/04022636284264094615",
    "image": {
     "url": "//lh3.googleusercontent.com/-J42zEmWWZeA/AAAAAAAAAAI/AAAAAAAADU0/Kve0YC_wOIg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3900582880098573087/comments"
   },
   "labels": [
    "e2e test",
    "grunt",
    "Protractor",
    "testing",
    "UI test"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "789114432812658997",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-06-17T14:28:00+02:00",
   "updated": "2014-06-17T14:28:42+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDAzMDA4MTIyMzAzCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/06/camunda-bpm-platform-osgi-10-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/789114432812658997",
   "title": "camunda-bpm-platform-osgi 1.0 released as a community extension",
   "content": "<a href=\"https://github.com/camunda/camunda-bpm-platform-osgi\">camunda-bpm-platform-osgi</a>&nbsp;is a community extension that provides support for camunda BPM platform inside OSGi containers.<br />\n<br />\nIt is a pleasure for me to announce that <a href=\"https://github.com/rbraeunlich\">Ronny Bräunlich</a>&nbsp;has just released version 1.0 of the libary.<br />\n<br />\n<span style=\"background-color: white; color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.100000381469727px;\">Read the offical&nbsp;</span><a href=\"http://wrongtracks.blogspot.de/2014/06/camunda-bpm-platform-osgi-100-released.html\">release blog post</a><span style=\"background-color: white; color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.100000381469727px;\">&nbsp;and make sure to&nbsp;</span><a href=\"https://github.com/camunda/camunda-bpm-platform-osgi\">fork the project on GitHub</a><span style=\"background-color: white; color: #333333; font-family: 'Droid Serif'; font-size: 15px; line-height: 23.100000381469727px;\">.</span>",
   "author": {
    "id": "g103095829219633860375",
    "displayName": "Roman Smirnov",
    "url": "https://www.blogger.com/profile/16926070807839636634",
    "image": {
     "url": "//lh5.googleusercontent.com/-5x2tX0l0eeI/AAAAAAAAAAI/AAAAAAAAAB8/gOaW1PE04uM/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/789114432812658997/comments"
   },
   "labels": [
    "camunda-bpm-platform-osgi",
    "community-extensions",
    "osgi",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3837769138038565595",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-06-12T18:28:00+02:00",
   "updated": "2014-06-14T11:05:05+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDAyNzM2NzA1MTEyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/06/camunda-bpm-720-alpha2-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3837769138038565595",
   "title": "camunda BPM 7.2.0-alpha2 released",
   "content": "Today we announce the next alpha release of camunda BPM platform.\n\nThe highlights of this release are:\n\n<ul>\n<li>Deploy and instantiate CMMN Case Definitions,</li>\n<li>New Tasklist Skeleton</li>\n<li>I/O Mappings for BPMN 2.0 Activities and Events</li>\n<li>Xml Data processing in Java, Expression Language and Script Languages</li>\n<li>Simple SOAP Http Connector</li>\n</ul>\n<div>\nSee <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13296\">complete release notes in Jira</a>.</div>\n<div>\n\n</div>\n<div style=\"text-align: center;\">\n<a href=\"http://camunda.org/download\">Download camunda BPM 7.2.0-alpha2 now.</a></div>\n\n<a name='more'></a>\n\n<h3>\nDeploy and instantiate CMMN Case Definitions</h3>\nWe are making good progress on CMMN support in the process engine. CMMN is an emerging OMG standard for Case Management. It is now possible to deploy and instantiate a CMMN Case Definition using both Java and REST Api:\n\n<div class=\"embedded-gist\">\n<script src=\"https://gist.github.com/meyerdan/bbf2e20be953bd311101.js\"></script>\n</div>\nMore examples can be found on <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/engine/src/test/java/org/camunda/bpm/engine/test/examples/cmmn/CaseTest.java\">Github</a>.\n\nIn the next release we will provide support for CMMN human tasks, manual activation completing cases and tasks and maybe more.\n\n<h3>\nNew Tasklist Skeleton</h3>\nThe new release contains a very early preview version of the upcoming tasklist application.\n\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-DW1MwOBtG7k/U5mxIor63OI/AAAAAAAAAbE/pibg3VaE2GQ/s1600/tasklist-dev-screenshot.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-DW1MwOBtG7k/U5mxIor63OI/AAAAAAAAAbE/pibg3VaE2GQ/s1600/tasklist-dev-screenshot.png\" height=\"174\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Skeleton of new tasklist</td></tr>\n</tbody></table>\n\n\nThe tasklist-ui is now developed in a separate <a href=\"https://github.com/camunda/camunda-tasklist-ui\">git repository</a>.\n\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n\n\n<h3>\nI/O Mapping in Process Engine</h3>\nThe process engine now provides support for input output mappings for Tasks, Events and Subprocesses. Input Output mappings can be used for creating variables in a local scope or mapping variables out of a local scope:\n\n<div class=\"embedded-gist\">\n<script src=\"https://gist.github.com/meyerdan/c3d85082a0c8e88ff6d5.js\"></script>\n</div>\n<h3>\nXml in Expression Language</h3>\n<div>\ncamunda BPM now provides out of the box support for working with complex data objects in expression language. In alpha-2, support is limited to Xml, other formats like Json are planned. In alpha-2 you can access attributes and child elements of Xml data objects and it is possible to execute XPath queries. This makes is easier to work with Xml data in expression language without having to to map it to Java Objects:</div>\n<div class=\"embedded-gist\">\n<script src=\"https://gist.github.com/meyerdan/7fd0321d9af7f2aa136d.js\"></script></div>\n<div>\nSupport for this is provided through <a href=\"https://github.com/camunda/camunda-spin\">camunda Spin</a>, a small library providing lightweight wrappers around existing low-level Apis and parsers (such as Dom).</div>\n<div>\nSpin can also be used from Java Delegate implementations (obviously) and JVM scripting languages.</div>\n<div>\n\n</div>\n<div>\nOn top of directly using Spin in El expressions or script code, we plan on using it as data transformation provider for the process engine. This will be usecases around requesting different data representations for a variable (Java Object vs. mapped JSON Representation) and many more.</div>\n<h3>\nConnecting Soap Webservices</h3>\n<div>\nAlpha 2 also provides a buit-in, low level webservice connector which allows you to invoke SOAP-based webservices directly from BPMN Xml. There is a <a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/servicetask/soap-service\">preliminary usage example</a>. The connector implementation is provided in the <a href=\"https://github.com/camunda/camunda-connect\">camunda Connect</a> github repository.</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "7",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3837769138038565595/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "1653240764354856474",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-06-03T09:01:00+02:00",
   "updated": "2014-06-03T09:03:23+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDAxNzc5MDAzMTUxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/06/testing-bpmn-processes-with-fluent-api.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1653240764354856474",
   "title": "Testing BPMN processes with fluent assertions: Awesome!",
   "content": "<div>\nSometimes this topic comes up in the <a href=\"https://groups.google.com/forum/#!topic/camunda-bpm-users/8j-ZrGW4LM4\">camunda BPM foums</a> and I cannot stress &amp; highlight this enough! :)<br />\n<br />\nWriting test cases for your BPMN processes is a vital part of good process implementation. However, writing good, maintainable testcases can be cumbersome because you may have to write a lot of boilerplate code and the resulting testcases are often hard to read and understand.\nAs a community extension,&nbsp;<a href=\"https://github.com/plexiti/\">Martin Schimak</a> has developed a fluent and well readable API, <a href=\"https://github.com/camunda/camunda-bpm-assert\">camunda BPM assert</a>:<br />\n<br /></div>\n<div>\n<script src=\"https://gist.github.com/meyerdan/bf50168b1661a0792d9e.js\"></script>\n</div>\n<div>\n<br /></div>\n<div>\nAwesome, right? Using the Api frees your test code of a lot of boilerplate details, makes it easy to read and maintain. Without <a href=\"https://github.com/camunda/camunda-bpm-assert\">assert</a>, that same testcase would look like this:</div>\n<div>\n<br />\n<div>\n<script src=\"https://gist.github.com/meyerdan/d900eb368a026e12dc1a.js\"></script></div>\n<div>\n<br /></div>\n<div>\n<br />\nFrom a project management perspective, the project is very mature (it is the result of almost two years of on and off discussion and prototyping)&nbsp; and <a href=\"https://github.com/camunda/camunda-bpm-assert/blob/master/camunda-bpm-assert/README.md\">well documented</a> and is <b>recommended for heavy usage in any camunda BPM project!</b> :)</div>\n<div>\n<br /></div>\n<div>\nEnjoy.</div>\n</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1653240764354856474/comments"
   },
   "labels": [
    "BPMN",
    "community-extensions",
    "testing"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8924724981412852929",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-05-26T17:36:00+02:00",
   "updated": "2014-11-26T17:11:33+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDE4MjkzMzQxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/05/camunda-modeler-260-released-field.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8924724981412852929",
   "title": "camunda Modeler 2.6.0 released: Field Injection, properties panel and bug fixes",
   "content": "<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\nThe camunda BPM team is happy to announce the release of camunda Modeler 2.6.0. This release contains updates on the properties panel, a new properties tab, bpmn 2.0 alignment and bug fixes.<br />\nFind a complete list of issues solved in this release in <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13192\">JIRA</a>.<br />\n<br />\nThis release covers Eclipse&nbsp;&nbsp;Eclipse&nbsp;<a href=\"http://camunda.org/release/camunda-modeler/update-sites/kepler/latest/site/\">Kepler</a>&nbsp;and&nbsp;<a href=\"http://camunda.org/release/camunda-modeler/update-sites/latest/site/\">Juno/Indigo</a>&nbsp;as well as the&nbsp;<a href=\"http://camunda.org/bpmn/tool/\">camunda Modeler Standalone</a>.<br />\n<a name='more'></a><br />\nThe new features and bug fixes where mainly developed by&nbsp;<a href=\"http://camunda.org/community/team.html#kristin-details\">Kristin</a>!<br />\n<br />\n<b>Asynchronous Continuation on Parallel Gateways</b><br />\nAs the parallel gateway is a synchronizing gateway, it is subject to optimistic locking. The new feature allows you to use the engines JobExecutor Retry mechanism for resolving optimistic locking conflicts without impacting the preceding tasks.<br />\n<br />\n<b>Field Injection</b><br />\nWe introduced a new tab to configure field injections for the following elements: Service Task, Business Rule Task, Send Task, End Message Event and Throwing Message Event.<br />\nFind more information in our <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-delegation-code-field-injection\">docs</a>.<br />\n<br />\n<b>bpmn 2.0 alignment</b><br />\nThe new modeler offers you the possibility to edit expressions without the xsi:type attribute. As the modeler is focused on executable processes, we didn't support this in the past. This caused exceptions at the model import, mainly when used together with business focused design tools.<br />\n<br />\n<br />\nDownload the <a href=\"http://camunda.org/release/camunda-modeler/kepler/camunda-modeler-kepler-latest.zip\">prepackaged modeler</a>, update your <a href=\"http://camunda.org/download/modeler/\">Eclipse plugin</a> or check out the <a href=\"http://camunda.org/bpmn/tool/\">standalone version</a> <b>NOW</b>! Give us feedback in our&nbsp;<a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">our forums</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;or&nbsp;on&nbsp;</span><a href=\"https://twitter.com/camundaBPM\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">twitter</a>.<br />\n<br />\nHappy modeling!!!&nbsp;</div>",
   "author": {
    "id": "g106268355273833601853",
    "displayName": "Michael Schöttes",
    "url": "https://www.blogger.com/profile/04022636284264094615",
    "image": {
     "url": "//lh3.googleusercontent.com/-J42zEmWWZeA/AAAAAAAAAAI/AAAAAAAADU0/Kve0YC_wOIg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8924724981412852929/comments"
   },
   "labels": [
    "BPMN",
    "camunda-modeler",
    "camunda-modeler-standalone",
    "Eclipse",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "1065715343537604637",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-05-26T10:29:00+02:00",
   "updated": "2014-05-26T10:56:42+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDAxMDk0NjAyOTI4Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/05/bpmnio-now-with-full-bpmn-render-support.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1065715343537604637",
   "title": "bpmn.io now with full BPMN render support",
   "content": "bpmn.io, the open source Javascript BPMN toolkit released a new version, now with full BPMN rendering support.<br />\n<br />\nRead more in Joerg's Blogpost:<br />\n<a href=\"http://bpmn.io/blog/posts/2014-003-full-bpmn-render-support.html\">http://bpmn.io/blog/posts/2014-003-full-bpmn-render-support.html</a>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1065715343537604637/comments"
   },
   "labels": [
    "BPMN",
    "bpmn.io",
    "JavaScript"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8930702752907658129",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-05-24T00:36:00+02:00",
   "updated": "2014-05-24T00:36:56+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDAwODg0NjE2MjM5Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/05/camunda-bpm-online-training-available.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8930702752907658129",
   "title": "camunda BPM Online Training available",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-_Z0oXk2Fuys/U3_MpoU-Z7I/AAAAAAAAAWg/TJ9g_aJGa80/s1600/ichhabs.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-_Z0oXk2Fuys/U3_MpoU-Z7I/AAAAAAAAAWg/TJ9g_aJGa80/s1600/ichhabs.jpg\" /></a></div>\n<p>\nI am happy to share that our super-awesome camunda BPM Online Training is finally available. \n</p>\n<p>\nIt consists of a number of video tutorials and exercices, and also includes weekly web sessions with our experienced and remarkably good-looking consultants, where you can discuss any questions or issues you might have. \n</p>\n<p>\nGo get it here: <a href=\"http://camunda.com/bpm/training/online/\">http://camunda.com/bpm/training/online/</a>\n</p>\n<p>\nWould be great to get your feedback on this - if you think the training is a good idea, please let us know. If you think it should include another kind of learning approach or whatever else, let us know that as well. \n</p>\n<p>\nJust <a href=\"https://groups.google.com/forum/#!forum/camunda-bpm-users\">post in the forum</a> or <a href=\"mailto:community@camunda.org\">send us an email</a> - thanks a lot - and happy processing!\n</p>",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8930702752907658129/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "1658261499512752402",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-05-20T19:07:00+02:00",
   "updated": "2014-05-20T19:10:49+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDAwNjA1ODQ5ODMwCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/05/720-alpha1-released-rest-api-bugfixes.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1658261499512752402",
   "title": "7.2.0-alpha1 Released: Rest API, Bugfixes and Refactorings",
   "content": "The first alpha release of camunda BPM 7.2.0 is out. The release brings<br />\n<div>\n<ul>\n<li>Rest API features:&nbsp;</li>\n<ul>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-1375\">Deployments</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2134\">Task Comments</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2136\">Task Attachments</a>, <a href=\"https://app.camunda.com/jira/browse/CAM-2141\">Task Variables</a></li>\n</ul>\n<li>Script Execution Improvements</li>\n<ul>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-2098\">Caching of compiled scripts</a> (=&gt; performance improvements)</li>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-1876\">Variable handling for scripts</a>&nbsp;(=&gt; Jython, JRuby and JavaScript can now be used)</li>\n<li>Groovy is now included in all distributions and works out of the box.</li>\n</ul>\n<li>Maintenance</li>\n<ul>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-1481\">Bumped Version of Mybatis dependency to 3.2.3</a></li>\n<li>Frontend library upgrades</li>\n<ul>\n<li>Bump version of angularjs to 1.2.16</li>\n<li>Remove Bootstrap Javascript and replace with angular-ui</li>\n</ul>\n</ul>\n<li>And many bugfixes.</li>\n</ul>\n<div>\n<span style=\"font-size: large;\"><span style=\"color: red;\"><b>Known Issues</b></span><b style=\"color: red;\">:</b></span></div>\n<div>\n<span style=\"font-size: large;\">In this alpha release,&nbsp;<b>camunda Tasklist has several known issues</b>&nbsp;<span id=\"goog_1272215698\"></span><span id=\"goog_1272215699\"></span><a href=\"https://www.blogger.com/\"></a>related to form handling. See:&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-2233\">CAM-2233</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-2234\">CAM-2234</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-2236\">CAM-2236</a>.</span></div>\n<div>\n<br /></div>\n<div>\n<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13293\">See the complete Release Notes</a>.&nbsp;</div>\n<div>\n<br /></div>\n<div>\n<div style=\"text-align: center;\">\n<b><a href=\"http://camunda.org/download/\">Download camunda BPM 7.2.0-alpha1 now.</a></b></div>\n<a name='more'></a></div>\n</div>\n<h3>\nWhat is going on behind the Scenes?</h3>\n<div>\nBehind the scenes we started work on the big new features for 7.2.0. Currently there are a lot of very interesting ideas floating around and everybody is hacking like crazy.</div>\n<h3>\nCase Management</h3>\n<div>\nIn camunda BPM 7.2.0 we will add support for case management based on CMMN. <a href=\"http://www.omg.org/spec/CMMN/\">CMMN (Case Management Model and Notation)</a> &nbsp;is an emerging standard by the OMG. We are currently bootstrapping support for CMMN in a way that it <b>will play together nicely with BPMN</b>. To achieve this we have done <a href=\"https://app.camunda.com/jira/browse/CAM-2216\">some major refactorings</a>&nbsp;in order to provide a base infrastructure for both BPNN and CMMN. On top of this, Roman has already started work on the <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/e702609b5538dd7df2439b365d8da3a91642500d/engine/src/test/java/org/camunda/bpm/engine/test/cmmn/operation/CaseInstanceTest.java\">CMMN engine core</a>.</div>\n<h3>\nTasklist.makeAwesome()</h3>\n<div>\nYes!! We have also started work on the new tasklist application. The new tasklist will provide<b> a new super awesome UI</b>, greatly improved embedded forms (based on a standalone, embeddable SDK) and many more features such as filters, comments and attachments.</div>\n<h3>\nScripting, Scripting, Scripting!</h3>\n<div>\nWith the thriving Groovy ecosystem and the new high performance and spec compliant JVM Javascript implementation (<a href=\"http://en.wikipedia.org/wiki/Nashorn_(JavaScript_engine)\">Nashorn</a>), scripting starts to become a serious alternative to EJB. :) On top of that, I think that the dynamic typing and runtime compilation/ interpretation model is a very good fit in a BPM environment. So <b>expect camunda BPM to become a lot more polyglot</b> in the next months!</div>\n<div>\nAlready in this release we have improved the support for scripting. We plan adding further improvements such as <b>external scripts</b> (putting the script source in a separate file, not in the BPMN file), &nbsp;<b>use scripts everywhere</b> (allowing scripts to be used where expressions are used now) and a testing environment.</div>\n<h3>\nExtended Dataformats and Query languages</h3>\n<div>\nWe will make it very easy to work with different kinds of dataformats in your processes. We will have out of the box support for XML and JSON and the corresponding query languages (XPath and JSONPath).</div>\n<h3>\nAn interactive BPMN Developer Webapplication</h3>\n<div>\nThis is currently in early early alpha phase: we are prototyping the concept of an interactive developer / debugger application. The debugger lets you put breakpoints in BPMN processes, inspect the suspended executions and step / resume through the process. It also provides an interactive scripting console allowing you to evaluate scripts or expressions in the context of a suspended execution or interact with the API of the process engine. This will give you a <b>guaranteed Java- &amp; Maven-Free developer&nbsp;experience</b> if you are a script developer <b>but also plays well together with Java &amp; Maven</b> if you are into these things (like me :)).&nbsp;</div>\n<div>\n<br /></div>\n<div>\nRight now it's not much but this is what it looks like:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-tF78gNuRaf8/U3WcWRUXWUI/AAAAAAAAAak/Fitdk7Jep08/s1600/developer.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-tF78gNuRaf8/U3WcWRUXWUI/AAAAAAAAAak/Fitdk7Jep08/s1600/developer.png\" height=\"153\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div>\n(I have done the UI myself =&gt; it will look better once one of our UI guys gets to work on it :) )</div>\n<div>\n<br /></div>\n<div>\nExciting times ahead!</div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1658261499512752402/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8696651252574098795",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-05-08T14:49:00+02:00",
   "updated": "2014-05-08T14:56:50+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk5NTUzODEwNDA0Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/05/bpmnio-source-code-and-demo-application.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8696651252574098795",
   "title": "bpmn.io Source Code and Demo Application published",
   "content": "Starting today, the code for <a href=\"http://bpmn.io/\">bpmn.io</a>, our next generation JavaScript Framework for BPMN 2.0, is available on <a href=\"https://github.com/bpmn-io\">GitHub</a>.<br />\n<div>\n<br /></div>\n<div>\nThe <a href=\"http://bpmn.io/about/\">bpmn.io team</a> has also developed a simple&nbsp;<a href=\"http://demo.bpmn.io/\">demo application</a> which provides a BPMN viewer in the browser.<br />\n<div>\n<br /></div>\n<div>\n<div>\n<b><a href=\"http://bpmn.io/blog/posts/2014-bpmn-js-viewer-is-here.html\">Read Nico's official announcement on bpmn.io/blog</a>.</b></div>\n</div>\n</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8696651252574098795/comments"
   },
   "labels": [
    "BPMN",
    "bpmn.io",
    "JavaScript"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "9076985879273039581",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-05-02T15:52:00+02:00",
   "updated": "2014-05-02T16:15:08+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk5MDQwMTA4MzI2Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/05/feedback-request-process-implementation.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/9076985879273039581",
   "title": "Feedback Request: Process Implementation with XML & JSON Data and Scripting Languages",
   "content": "One of our largest customers approached us with the following requirement:<br />\n<br />\n<i>\"We want to implement BPMN processes, such that&nbsp;</i><br />\n<ol>\n<li><i>these processes work with rich XML and JSON data objects,</i></li>\n<li><i>but we are not forced to deploy custom Java Code.\"</i></li>\n</ol>\n<div>\nRequirement (1) is a very common one. Many of our users and customers work with rich XML and JSON data objects. To do this, many of them implement custom Java Classes and use technologies like JAX-B or Jackson for mapping XML and JSON to Java.</div>\n<div>\n<br /></div>\n<div>\nRequirement (2) is also a common one. Note however that in this case, the driving force behind it is&nbsp;<b>not zero-coding</b>. Our customer is a rather large hardware / software vendor &nbsp;and their product is deployed in hundreds of installations. The process engine is part of these installations. What they are looking for is a lightweight deployment model: they want to be able to deploy complex process implementations which are more or less self-contained. This is not the case if they have to write Java Classes. Java classes have to be deployed and re-deployed each time you make a change. Although camunda BPM provides a deployment model for bundling BPMN processes with Java Code (<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications\">see Process Applications</a>) which even allows you to operate multiple versions of your process in parallel, each deployment is a complete Java EE / Java Servlet application deployment with all pros and cons this entails.</div>\n<div>\n<br /></div>\n<div>\nBased on these and similar requirements, we are now working on a new feature which will be called \"Classless Workflows\". We plan adding this feature in camunda BPM 7.2.</div>\n<div>\n<br /></div>\n<div>\nThe core idea behind this feature is simple:</div>\n<div>\n<ol>\n<li>Provide a rich, dynamic programming model for XML and JSON in Java,</li>\n<li>Make this available from JVM scripting languages like Javascript, Groovy, Python, ...</li>\n</ol>\n<div>\nIn order to render this more concrete, we developed an example which attempts to illustrate how a developer could use these features:&nbsp;</div>\n</div>\n<div>\n<br /></div>\n<div>\n<a href=\"https://github.com/camunda/camunda-classless-examples/blob/master/customer-rating/README.md\">https://github.com/camunda/camunda-classless-examples/blob/master/customer-rating/README.md</a></div>\n<div>\n<br /></div>\n<div>\n<b><span style=\"color: red; font-size: large;\">If you are interested in this topic, it would be great if you could give us some feedback on this example!&nbsp;</span></b></div>\n<div>\n<br /></div>\n<div>\n<i>(Note: I am not sure whether the example is easy to understand. If not, let us know then we can improve it.)</i></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/9076985879273039581/comments"
   },
   "labels": [
    "classless",
    "feedback",
    "JSON",
    "spin",
    "XML"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7631600909092993498",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-04-28T01:39:00+02:00",
   "updated": "2014-04-28T01:39:41+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk4NjQxOTgxNzc5Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/04/sneak-preview-for-new-online-training.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7631600909092993498",
   "title": "Sneak Preview for new Online Training",
   "content": "<p>\nOur tireless consulting team will publish a new online-training for camunda BPM very soon. We’ve been asked for that again and again, which is why I am more than happy that it’s finally available.\n</p>\n<p>\nThere is a little sneak preview available already: You can enjoy the first module (basically a video tutorial) for free!\n</p>\n<p>\nGet it here: <a href=\"http://camunda.com/landing/camunda-beginners/\">http://camunda.com/landing/camunda-beginners/</a>\n</p>\nAnd have fun!",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7631600909092993498/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "7863176481148030586",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-04-15T10:42:00+02:00",
   "updated": "2014-04-15T10:42:37+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk3NTUxMzU3NjIzCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/04/use-camunda-bom-for-maven-dependency.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7863176481148030586",
   "title": "Use camunda bom for maven Dependency Management",
   "content": "Sometimes you need to include multiple camunda BPM maven dependencies in your project. The <a href=\"http://maven.apache.org/\">apache maven</a> best practice &nbsp;is to use a bom (\"<a href=\"http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html\">Bill of Materials</a>\") which ensures that you get the matching versions for multiple dependencies. For camunda bpm we prepared the <span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">camunda-bom</span> to make sure you get the right versions for all camunda dependencies and our transitive dependencies.<br />\n<br />\nFirst, import the <span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">camunda-bom</span> in the <span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">dependencyManagement</span> section of your maven pom:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;dependencyManagement&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;dependencies&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;groupId&gt;org.camunda.bpm&lt;/groupId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;artifactId&gt;camunda-bom&lt;/artifactId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;type&gt;pom&lt;/type&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;scope&gt;import&lt;/scope&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;version&gt;7.1.0-Final&lt;/version&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;/dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/dependencies&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;/dependencyManagement&gt;</span><br />\n<br />\nNow you can reference multiple camunda dependencies without adding their <span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&lt;version&gt;</span>&nbsp;information:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;dependencies&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp;&nbsp;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;groupId&gt;org.camunda.bpm&lt;/groupId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;artifactId&gt;camunda-engine&lt;/artifactId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;groupId&gt;org.camunda.bpm&lt;/groupId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;artifactId&gt;camunda-engine-spring&lt;/artifactId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp;&nbsp;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; ...</span><br />\n<br />\nWhat's more: we also give you the versions for the the required dependencies of camunda engine. This way you will always get the version of mybatis, joda-time, java-uuid-generator that the current version of camunda-bpm was built and tested with:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&lt;dependencies&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;groupId&gt;joda-time&lt;/groupId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;artifactId&gt;joda-time&lt;/artifactId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;groupId&gt;com.fasterxml.uuid&lt;/groupId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;artifactId&gt;java-uuid-generator&lt;/artifactId&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/dependency&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp;&nbsp;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; ...</span><br />\n<br />\nNote that most of our maven artifacts are pushed to <a href=\"http://search.maven.org/#browse%7C-713420858\">maven central</a>.<br />\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7863176481148030586/comments"
   },
   "labels": [
    "maven"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7948899164988419913",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-04-05T07:50:00+02:00",
   "updated": "2014-11-26T17:05:35+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDE3OTM1NTk0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/04/get-started-with-camunda-bpm-and-java-ee.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7948899164988419913",
   "title": "Get started with camunda BPM and Java EE",
   "content": "Roman and Sebastian have written a brand new <a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/java-ee/\">getting started guide for camunda and Java EE</a>.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-vYNvL26jB6k/Uz-ZWHUu7pI/AAAAAAAAAZQ/8X_hBBTEBI0/s1600/javaee.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-vYNvL26jB6k/Uz-ZWHUu7pI/AAAAAAAAAZQ/8X_hBBTEBI0/s1600/javaee.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\nThe guide is a detailed step-by-step tutorial about how to setup your Java EE 6 application for camunda BPM and BPMN. It has examples about how to use JSF for implementing Task Forms, CDI and EJB as a programming model for the business logic and JPA for custom persistence.<br />\n<br />\nThe source code of the tutorial can be found on <a href=\"https://github.com/camunda/camunda-get-started-javaee\">github</a>. Since the guide is a step-by-step tutorial, you can checkout the source code for each step as a <a href=\"https://github.com/camunda/camunda-get-started-javaee/releases\">tag</a> in git.<br />\n<br />\nI hope you like the tutorial, please give us feedback in the <a href=\"http://camunda.org/community/forum.html\">forums</a> and via&nbsp;<a href=\"https://twitter.com/camundaBPM\">@camundaBPM</a>.<br />\n<br />\n<a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/java-ee/\"><b>Read the guide on how to get started with camunda BPM and Java EE.</b></a>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7948899164988419913/comments"
   },
   "labels": [
    "java ee",
    "jsf"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7837843483957338619",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-04-04T15:30:00+02:00",
   "updated": "2014-11-26T17:00:23+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDE3NjIzODUxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/04/camunda-modeler-250-released-extension.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7837843483957338619",
   "title": "camunda Modeler 2.5.0 released: Extension elements, properties panel and bug fixes",
   "content": "<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\n<br />\nThe camunda BPM team is pleased to announce the release of camunda Modeler 2.5.0. This release is dedicated to align the latest improvements of camunda BPM 7.1 with the modelers properties panel. Furthermore we implemented a new properties tab for extension elements and of course we fixed bugs.<br />\n<div>\n<br /></div>\n<div>\nFind a complete list of issues solved in this release in <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13191\">JIRA</a>.</div>\n<div>\n<br /></div>\n<div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">This release\ncovers Eclipse <a href=\"http://camunda.org/release/camunda-modeler/update-sites/kepler/latest/site/\">Kepler</a> and <a href=\"http://camunda.org/release/camunda-modeler/update-sites/latest/site/\">Juno/Indigo</a> as well as the <a href=\"http://camunda.org/bpmn/tool/\">camunda ModelerStandalone</a>.<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n</div>\n<a name='more'></a></div>\n<div>\nThe new features where mainly developed by <a href=\"http://camunda.org/community/team.html#kristin-details\">Kristin</a>! Furthermore <a href=\"http://camunda.org/community/team.html#roman-details\">Roman</a> did some great bugfixes.<br />\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<b>Properties Panel</b></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">We aligned the elements of the properties panel with the latest engine features released with camunda BPM 7.1.</span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><b>Follow Up Date</b></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">According to <a href=\"https://app.camunda.com/jira/browse/CAM-1654\">CAM-1654</a>&nbsp;you can define a follow up date for User Tasks. Find more information in our <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-user-task-follow-up-date\">docs</a>.</span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><b>Receive Task message handling</b></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">Similar to the Catching Message Event you can add messages for Receive Task via the properties panel. This is according to the engines correlateMessage() method.</span></div>\n<div class=\"MsoNormal\">\n</div>\n<div>\n<br /></div>\n<br />\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><b>Extension Elements</b></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">Add\nextension elements to all BPMN elements via the new Extensions tab. Find more\ninformation about extension elements in our <a href=\"http://docs.camunda.org/latest/guides/user-guide/#bpmn-model-api-extension-elements\">docs</a>. Furthermore check out the\n<a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/process-engine-plugin/bpmn-parse-listener\">BPMN Parse Listener example</a> build by <a href=\"http://camunda.org/community/team.html#kristin-details\">Kristin</a>.&nbsp;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><b>Exclusive Flag</b></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">In the course of this release we implemented the Exclusive checkbox to determine whether a job will be performed at the same time as another exclusive job from the same process instance. Find detailed information in our <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor-exclusive-jobs\">docs</a>.</span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><a href=\"http://camunda.org/download/modeler/\">T<span style=\"font-family: Times New Roman, Times, FreeSerif, serif;\"><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">ry out the new modeler</span></span></a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;and tell us what you think via&nbsp;</span><a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">our forums</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;or&nbsp;on&nbsp;</span><a href=\"https://twitter.com/camundaBPM\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">twitter</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">.</span></span></div>\n</div>\n</div>",
   "author": {
    "id": "g106268355273833601853",
    "displayName": "Michael Schöttes",
    "url": "https://www.blogger.com/profile/04022636284264094615",
    "image": {
     "url": "//lh3.googleusercontent.com/-J42zEmWWZeA/AAAAAAAAAAI/AAAAAAAADU0/Kve0YC_wOIg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7837843483957338619/comments"
   },
   "labels": [
    "BPMN",
    "camunda-modeler",
    "camunda-modeler-standalone",
    "Eclipse",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7430164636219059730",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-31T18:31:00+02:00",
   "updated": "2014-11-26T16:58:09+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDE3NDg5NDYxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/camunda-BPM-7.1.0-Final-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7430164636219059730",
   "title": "Finally! camunda BPM 7.1.0-Final is released",
   "content": "Today we release 7.1.0-Final, the new minor version of camunda BPM. Compared to the 7.0.0.Final release, the new version includes many new features and improvements:<br />\n<ol>\n<li>Improved process engine with Job Definitions, better BPMN coverage and improved performance,</li>\n<li>All-new BPMN Model API for convenient BPMN model access,</li>\n<li>New features in the cockpit monitoring web application,</li>\n<li>Improved Tasklist and Task Forms, including support for HTML5 and Generated Task Forms.</li>\n<li>Support for&nbsp;<span style=\"background-color: white; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\">Oracle WebLogic Server 12c</span>&nbsp;and JBoss Application Server 7.2 and JBoss EAP 6.1 / 6.2</li>\n</ol>\n<div>\nThis blog post contains a more detailed feature overview below. The release is now available on camunda.org for download:</div>\n<br />\n<div style=\"text-align: center;\">\n<b><a href=\"http://camunda.org/download\">You can download the release on camunda.org for free.</a></b></div>\n<div style=\"text-align: center;\">\n<br /></div>\n<div style=\"text-align: left;\">\nAll in all, 320 issues were closed. See the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12891\">complete release notes in Jira</a>.<br />\n<a name='more'></a></div>\n<h3>\nEnterprise support&nbsp;</h3>\n<span style=\"font-family: inherit;\"><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">The 7.1 release is the basis for the next supported production release for camunda BPM. It is fully supported in&nbsp;</span><a href=\"http://camunda.com/bpm/enterprise/\" style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">the camunda BPM enterprise subscription</a><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">. Support includes&nbsp;</span>Help Requests<span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;based on different SLAs as well as access to camunda BPM maintenance releases. Maintenance releases allow customers to get bugfixes for production systems based on the 7.1 codebase. While the community project will forge ahead for 7.2, we will backport bugfixes to the 7.1 branch and perform maintenance releases reserved for enterprise subscription customers.</span><br style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\" /><br style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\" /><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">There is a&nbsp;</span><a href=\"http://docs.camunda.org/guides/migration-guide/\" style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">Migration Guide</a><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;targeting existing camunda bpm 7.0 installations.</span></span><br />\n<h3>\nDetailed Features Overview</h3>\n<div>\n<br /></div>\nThe following is a more detailed overview of the new features:<br />\n<br />\n<h4>\nJob Definitions</h4>\n<div>\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-i4RlHKHFhiA/UzlP88fzkxI/AAAAAAAAAXg/8rVSSCNASuM/s1600/2014-03-31-131919_154x119_scrot.png\" imageanchor=\"1\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-i4RlHKHFhiA/UzlP88fzkxI/AAAAAAAAAXg/8rVSSCNASuM/s1600/2014-03-31-131919_154x119_scrot.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Activity with suspended<br />\nJob Definition (in Cockpit).</td></tr>\n</tbody></table>\nAllows querying, activating &amp; suspending job execution on a per activity level. This allows you to prevent an activity from being executed. This is particularly useful for fixing technical problems or preparing system migrations or updates: process instances can make progress until they reach a given activity and will then queue up until the activity is activated again.<br />\n(<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-concepts-jobs-and-job-definitions\">Documentation</a>).<br />\n<br />\n<br />\n<br /></div>\n<h4>\nImproved BPMN Coverage</h4>\n<div>\nAdded support for <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#overview-bpmn-20-overview-and-coverage-events\">non-interrupting event subprocess</a>. Supported start events are <i>signal</i>, <i>message</i> and <i>timer</i>.&nbsp;</div>\n<div>\nSupport for receive tasks was improved: <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-receive-task\">receive tasks</a>&nbsp;now support the <span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">messageRef</span> attribute and can be triggered through <span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">correlateMessage()</span>.<br />\n<br /></div>\n<div>\n<h4>\nImproved Message Correlation</h4>\n<div>\nMessage correlation was improved and it is now possible to use a fluent builder API for correlating a message&nbsp;<span style=\"background-color: white; line-height: 21.559999465942383px;\">(</span><a href=\"http://blog.camunda.org/2014/03/fluent-api-for-message-correlation.html\" style=\"background-color: white; line-height: 21.559999465942383px;\">Blogpost</a><span style=\"background-color: white; line-height: 21.559999465942383px;\">)</span>:</div>\n<div>\n<br /></div>\n<div>\n<span style=\"font-size: x-small;\"><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 21.559999465942383px;\">&nbsp; runtimeService.createMessageCorrelation(\"orderCancelled\")</span><br style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21.559999465942383px;\" /><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 21.559999465942383px;\">&nbsp; &nbsp; &nbsp; .processInstanceBusinessKey(\"someOrderId\")</span><br style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21.559999465942383px;\" /><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 21.559999465942383px;\">&nbsp; &nbsp; &nbsp; .setVariable(\"CANCEL_REASON\", \"someReason\")</span><br style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21.559999465942383px;\" /><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 21.559999465942383px;\">&nbsp; &nbsp; &nbsp; .setVariable(\"CANCEL_TIMESTAMP\", new Date())</span><br style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21.559999465942383px;\" /><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 21.559999465942383px;\">&nbsp; &nbsp; &nbsp; .correlate();</span></span><br />\n<span style=\"font-size: x-small;\"><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 21.559999465942383px;\"><br /></span></span></div>\n<h4>\nUser Operation Log</h4>\n<div>\nA new History Entity allowing to query for operations a user performed on a task.</div>\n<div>\n<br /></div>\n<h4>\nPerformance Improvements</h4>\n<div>\nAgain, we improved the process engine performance for some constructs mainly in combination with concurrent executions and scopes. We further reduced the number of database queries (SELECTs) necessary at runtime. We also added a <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/qa/performance-tests-engine\">performance test suite</a> to our repository which allows running benchmarks and SQL statement logs.<br />\n<br /></div>\n<h4>\nBpmn Model API</h4>\n<div>\n<span style=\"font-family: inherit;\">We added a completely new component called the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#bpmn-model-api\">BPMN Model API</a>.&nbsp;<span style=\"background-color: white; line-height: 20px;\">The camunda BPMN model API provides a simple and lightweight library for parsing, creating, editing and writing of BPMN 2.0 XML files. The model API enables an easy extraction of information from an existing process definition or to create a complete new one without manual XML parsing.&nbsp;</span></span></div>\n<div>\n<span style=\"font-family: inherit;\"><span style=\"background-color: white; line-height: 20px;\"><br /></span></span></div>\n<div>\n<span style=\"background-color: white;\"><span style=\"font-family: inherit;\"><span style=\"line-height: 20px;\">The&nbsp;</span></span><span style=\"line-height: 20px;\">following</span><span style=\"font-family: inherit;\"><span style=\"line-height: 20px;\">&nbsp;example shows how to create a new process with the fluent builder API:</span></span></span></div>\n<div>\n<br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; Bpmn.createExecutableProcess(\"helloCamunda\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp;.startEvent()</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp;.userTask()</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp;.endEvent()</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; .done();</span>\n<span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; font-size: x-small; line-height: 21.559999465942383px;\">&nbsp;&nbsp;</span><br />\n<span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; font-size: x-small; line-height: 21.559999465942383px;\"><br /></span></div>\n<h4>\nCockpit Open Source Features</h4>\n</div>\n<div>\nSuspension of Process Instances, Process Definitions and Job Definitions:<br />\n<br />\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-q-17Q334U7Q/Uzlp1yYQexI/AAAAAAAAAXw/-zKwldSQNns/s1600/2014-03-31-151117_590x380_scrot.png\" imageanchor=\"1\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-q-17Q334U7Q/Uzlp1yYQexI/AAAAAAAAAXw/-zKwldSQNns/s1600/2014-03-31-151117_590x380_scrot.png\" height=\"128\" width=\"200\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Suspend process Definition</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-6tuHp6vzUp0/Uzlp2D01cdI/AAAAAAAAAX0/naWgO5ZhxGM/s1600/2014-03-31-151240_1670x907_scrot.png\" imageanchor=\"1\" style=\"clear: left; display: inline !important; margin-bottom: 1em; margin-left: auto; margin-right: auto; text-align: center;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-6tuHp6vzUp0/Uzlp2D01cdI/AAAAAAAAAX0/naWgO5ZhxGM/s1600/2014-03-31-151240_1670x907_scrot.png\" height=\"108\" width=\"200\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Job Definition Overview <br />\nwith \"Suspend Buttons\"</td></tr>\n</tbody></table>\n<br />\n<br />\n<br />\n<br /></div>\n<div>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\nImproved Handling of Binary Datatypes including upload / download for byte streams and editing of serializable Java variables:</div>\n<div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-vpar5HPao6Y/UzlrEedgw_I/AAAAAAAAAYU/fK93YZv2nNU/s1600/2014-03-31-151758_548x438_scrot.png\" imageanchor=\"1\" style=\"display: inline !important; font-size: 13px; margin-left: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-vpar5HPao6Y/UzlrEedgw_I/AAAAAAAAAYU/fK93YZv2nNU/s1600/2014-03-31-151758_548x438_scrot.png\" height=\"158\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\nMany, many improvements were done under the hood, including better build infrastructure (<a href=\"http://gruntjs.com/\">grunt</a> / <a href=\"http://bower.io/\">bower</a>), better UI testing (through <a href=\"https://github.com/angular/protractor\">protractor</a>) and better <a href=\"https://github.com/angular/protractor\">developer documentation</a>.<br />\n<br /></div>\n<h4>\nCockpit Enterprise Subscription-Only Features</h4>\n<div>\nHistory for Process Instances including sophisticated querying and searching for finished process instances and drill down into individual instances, providing:<br />\n<br />\n<b>Audit Log</b>, allowing to follow the path of a process instance through the diagram, visualizing running, completed and cancelled activity instances. <br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-gTRCMTeaKI8/Uzlsxr_OW8I/AAAAAAAAAYw/DZ_jaLhefJw/s1600/2014-03-31-152513_1676x915_scrot.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-gTRCMTeaKI8/Uzlsxr_OW8I/AAAAAAAAAYw/DZ_jaLhefJw/s1600/2014-03-31-152513_1676x915_scrot.png\" height=\"108\" width=\"200\" /></a></div>\n<br />\nAs well as a <b>Variable Log</b> and a <b>User Task</b> log:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-imrC0xHYeO8/Uzlse_65fJI/AAAAAAAAAYs/Is4xOCFw61k/s1600/variables.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-imrC0xHYeO8/Uzlse_65fJI/AAAAAAAAAYs/Is4xOCFw61k/s1600/variables.png\" height=\"151\" width=\"200\" /></a></div>\n&nbsp;<a href=\"http://3.bp.blogspot.com/-DQXPDgVjetI/Uzlse6-JOkI/AAAAAAAAAYo/iF_AsogoeRg/s1600/usertask.png\" imageanchor=\"1\" style=\"clear: left; display: inline !important; margin-bottom: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-DQXPDgVjetI/Uzlse6-JOkI/AAAAAAAAAYo/iF_AsogoeRg/s1600/usertask.png\" height=\"138\" width=\"200\" /></a><br />\n<br />\n<br /></div>\n<h4>\nTasklist</h4>\n<div>\nHTML5&nbsp;<b>Embedded Task Forms</b>&nbsp;allow you to implement task forms in plain HTML and Javascript. They are rendered inside the tasklist. With the 7.1 release we greatly improve support for Embedded<br />\nTaskforms including support for select boxes, radio buttons and custom scripting &amp; validation. (<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/usertask/task-form-embedded\" style=\"color: #2288bb; text-decoration: none;\">Quickstart Example</a>,&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-task-forms-embedded-task-forms\" style=\"color: #2288bb; text-decoration: none;\">Docs</a>).<br />\n<br /></div>\n<div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-xA3pVG_QXu4/Uzk45rYEJpI/AAAAAAAAAXQ/DbSncOBsEmA/s1600/screenshot.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-xA3pVG_QXu4/Uzk45rYEJpI/AAAAAAAAAXQ/DbSncOBsEmA/s1600/screenshot.png\" height=\"157\" width=\"200\" /></a></div>\n</div>\n<div>\n<br />\nIn addition, we added the <b>Generated Task Forms</b> feature which allows you to define a simple form in camunda Modeler and have it rendered in Tasklist&nbsp;<span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">(</span><a href=\"http://blog.camunda.org/2013/12/how-to-use-generated-task-forms-with.html\" style=\"background-color: white; color: #2288bb; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">Blogpost</a><span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">,&nbsp;</span><a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/usertask/task-form-generated\" style=\"background-color: white; color: #2288bb; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">Quickstart Example</a><span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">,&nbsp;</span><a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-task-forms-generated-task-forms\" style=\"background-color: white; color: #2288bb; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">Docs</a><span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">).</span><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-aFbmN8-0kn8/Uzl7kDKWcrI/AAAAAAAAAZA/bit2Ne6mxXo/s1600/screenshot-modeler.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-aFbmN8-0kn8/Uzl7kDKWcrI/AAAAAAAAAZA/bit2Ne6mxXo/s1600/screenshot-modeler.png\" height=\"145\" width=\"200\" /></a></div>\n<br />\n<h4>\n<span style=\"background-color: white; font-family: inherit; line-height: 21.559999465942383px;\">Distributions</span></h4>\n</div>\n<div>\n<span style=\"background-color: white; font-family: inherit; line-height: 21.559999465942383px;\">We now provide a standalone distribution for the web application (Tasklist&nbsp;+ Cockpit) as </span><span style=\"background-color: white; font-family: Courier New, Courier, monospace; font-size: x-small; line-height: 21.559999465942383px;\">.war</span><span style=\"background-color: white; font-family: inherit; line-height: 21.559999465942383px;\"> file download. This distribution includes an embedded process engine (configured using spring xml) and can be deployed on most application servers.</span></div>\n<div>\n<br /></div>\n<ol><ol>\n</ol>\n</ol>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7430164636219059730/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6017227915846929083",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-18T09:56:00+01:00",
   "updated": "2014-11-26T16:53:36+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDE3MjE2MzQyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/new-camunda-bpm-network.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6017227915846929083",
   "title": "New: camunda BPM network",
   "content": "<p>\nOn March 14 we merged the online community BPM-Netzwerk.de with more than 10,000 members into the new <a href=\"http://network.camunda.org\">camunda BPM network</a>.\n</p>\n<p>\nI personally created the first version of this community in 2004, and together with <a href=\"https://twitter.com/remsbach\">Robert Emsbach</a> grew the community in the German speaking area. I learned a lot about community building during that time, especially in the BPM world. \n</p>\n<p>\nNow camunda takes over and will bring our network to the next level: Firstly, we want to grow our community outside the German speaking area as well, and secondly we want to explore new possibilities for discussing BPM online, that should go beyond the typical instruments we already know from general virtual communities. That's why we created the BPMN forum for discussing BPMN diagrams online. \n</p>\n<p>\nThis video provides a short introduction: <a href=\"http://vimeo.com/89381906\">http://vimeo.com/89381906</a>\n</p>\n<p>\nIt would be great if people should like this new way of discussing BPM(N) online (right now the first reactions look pretty promising), and I would like to express my gratitude to Robert for the great time we had with BPM-Netzwerk.de. He is a BPM enthusiast just like me, but way more important, he is a very good friend. \n</p>",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6017227915846929083/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3077000952084334649",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-17T08:25:00+01:00",
   "updated": "2014-03-17T08:32:51+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk1MDQxNTcxMjYyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/fluent-api-for-message-correlation.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3077000952084334649",
   "title": "Fluent API for Message Correlation",
   "content": "camunda BPM 7.1.0-alpha4 features a new fluent API for message correlation.<br />\n<br />\nBPMN 2.0 defines events and tasks catching messages. The following is a fragment of a process waiting for an order to be cancelled:<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-S9HlEghrT28/UyadSyDG3oI/AAAAAAAAAXA/Tc7v-ug7mzo/s1600/message-example.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-S9HlEghrT28/UyadSyDG3oI/AAAAAAAAAXA/Tc7v-ug7mzo/s1600/message-example.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Intermediate&nbsp;Message Catch Event</td></tr>\n</tbody></table>\nIn BPMN 2.0 XML you have to provide a name for the message you want to catch:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&lt;bpmn2:definitions ...&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; ...</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;bpmn2:message id=\"<b>Message_1</b>\" name=\"<b>orderCancelled</b>\"/&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; ...</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;bpmn2:process id=\"Process_1\" isExecutable=\"false\"&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; ...</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;bpmn2:intermediateCatchEvent id=\"IntermediateCatchEvent_2\" name=\"Order &amp;#xA;Cancelled\"&gt; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &lt;bpmn2:messageEventDefinition messageRef=\"<b>Message_1</b>\"/&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/bpmn2:intermediateCatchEvent&gt;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp;&nbsp;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;/bpmn2:process&gt;</span><br />\n<div>\n<br />\n<h3>\nNew Fluent API</h3>\n</div>\ncamunda Engine now featues a fluent DSL for correlating this message to the process engine:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; runtimeService.createMessageCorrelation(\"<b>orderCancelled</b>\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .processInstanceBusinessKey(\"someOrderId\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .setVariable(\"CANCEL_REASON\", \"someReason\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .setVariable(\"CANCEL_TIMESTAMP\", new Date())</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .correlate();</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\n<span style=\"font-family: inherit;\">The fluent DSL makes it easy to define a complex correlation set based on different restrictions. The above example correlates the message on the business key. On top of that, correlation based on process variables and process instance id is supported:</span><br />\n<span style=\"font-family: inherit;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; runtimeService.createMessageCorrelation(\"<b>orderCancelled</b>\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .processInstanceVariableEquals(\"orderId\", \"someOrderId\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .processInstanceVariableEquals(\"customerId\", \"someCustomerId\")</span><br />\n<div>\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; &nbsp; &nbsp; .correlate();</span></div>\n<span style=\"font-family: inherit;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; runtimeService.createMessageCorrelation(\"<b>orderCancelled</b>\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .processInstanceId(\"someProcessInstanceId\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; .correlate();</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\nThe API also makes it easy to provide the message payload as a single or multiple variables through <span style=\"font-family: Courier New, Courier, monospace;\">setVariable(varName, value)</span>.<br />\n<h3>\nMore Efficient than Query&nbsp;+ Trigger</h3>\nWe recommend using the fluent DSL or the <span style=\"font-family: Courier New, Courier, monospace;\">RuntimeService.correlateMessage(...)</span> methods introduced in 7.0 over the Query&nbsp;+ Trigger pattern. Using the Query&nbsp;+ Trigger pattern you first query for an execution having a message event subscription and then trigger that execution:<br />\n<br />\nNot as efficient:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; // Query</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; Execution e = runtimeService.createExecutionQuery()</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; .processInstanceBusinessKey(\"someOrderId\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; .messageEventSubscriptionName(</span><span style=\"font-family: 'Courier New', Courier, monospace;\">\"</span><b style=\"font-family: 'Courier New', Courier, monospace;\">orderCancelled</b><span style=\"font-family: 'Courier New', Courier, monospace;\">\"</span><span style=\"font-family: 'Courier New', Courier, monospace;\">)</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; .singleResult();</span><br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; Map&lt;String, Object&gt; variables = new HashMap&lt;String, Object&gt;();</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; variables.put(\"</span><span style=\"font-family: 'Courier New', Courier, monospace;\">CANCEL_REASON</span><span style=\"font-family: Courier New, Courier, monospace;\">\",&nbsp;</span><span style=\"font-family: 'Courier New', Courier, monospace;\">\"someReason\"</span><span style=\"font-family: Courier New, Courier, monospace;\">);</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; variables.put(\"</span><span style=\"font-family: 'Courier New', Courier, monospace;\">CANCEL_TIMESTAMP</span><span style=\"font-family: Courier New, Courier, monospace;\">\",&nbsp;</span><span style=\"font-family: 'Courier New', Courier, monospace;\">new Date()</span><span style=\"font-family: Courier New, Courier, monospace;\">);</span><br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\"><br /></span>\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; // Trigger</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; runtimeService.messageEventReceived(\"</span><b style=\"font-family: 'Courier New', Courier, monospace;\">orderCancelled\"</b><span style=\"font-family: Courier New, Courier, monospace;\">, e.getId(), variables);</span><br />\n<br />\nThe Query&nbsp;+ Trigger pattern has two disadvantages:<br />\n<ol>\n<li>More lines of code :)</li>\n<li>Two process engine commands instead of a single one. This makes it less efficient in terms of performance.</li>\n</ol>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3077000952084334649/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "6590366674455681373",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-13T16:49:00+01:00",
   "updated": "2014-03-13T16:53:02+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk0NzI1OTgyNzMyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/camunda-grails-plugin-by-martin-schimak.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6590366674455681373",
   "title": "camunda Grails Plugin by Martin Schimak",
   "content": "<a href=\"http://plexiti.com/planet\">Martin Schimak</a> (who is a community member and contributor) has written a <a href=\"http://grails.org/\">Grails</a> plugin which allows users to get started quickly with <a href=\"http://camunda.org/\">camunda</a> on grails.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-XqspuwSbrj0/UyHTVjkGVEI/AAAAAAAAAWw/KaLfgKn4_CQ/s1600/camunda-and-grails.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-XqspuwSbrj0/UyHTVjkGVEI/AAAAAAAAAWw/KaLfgKn4_CQ/s1600/camunda-and-grails.png\" height=\"138\" width=\"400\" /></a></div>\n<br />\n<br />\nThe plugin was accepted by the Grails community and was published in their plugin repository:<br />\n<a href=\"http://grails.org/plugin/camunda\">http://grails.org/plugin/camunda</a><br />\n<div style=\"text-align: center;\">\n<br /></div>\n<blockquote class=\"twitter-tweet\" lang=\"en\">\n<div style=\"text-align: center;\">\ncamunda Grails Plugin 0.1.0 released: <a href=\"http://t.co/cy539EHEUV\">http://t.co/cy539EHEUV</a></div>\n<div style=\"text-align: center;\">\n— Grails Plugins (@grailsplugins) <a href=\"https://twitter.com/grailsplugins/statuses/444111900217860096\">March 13, 2014</a></div>\n</blockquote>\n<script async=\"\" charset=\"utf-8\" src=\"//platform.twitter.com/widgets.js\"></script>\n\nThe code is pushed to github:&nbsp;<a href=\"https://github.com/plexiti/camunda-grails-plugin\">https://github.com/plexiti/camunda-grails-plugin</a><br />\n<br />\nAmazing Stuff!!",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6590366674455681373/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "6694795889257681693",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-12T09:12:00+01:00",
   "updated": "2014-03-12T09:14:52+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk0NjEyMDkyNTMzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/custom-location-for-bpm-platformxml.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6694795889257681693",
   "title": "Custom Location for bpm-platform.xml Configuration File",
   "content": "Starting with camunda BPM 7.1.0-alpha4 it is now possible to put the <span style=\"font-family: Courier New, Courier, monospace;\">bpm-platform.xml</span> file in a different location. This solves the problem that you have to open the camunda bpm platform EAR module and change the configuration file inside the EAR file if you want to customize your settings.<br />\n<br />\n<i>Note: This post does not apply to the JBoss Application Server distribution since there the process engine configuration is put directly into the JBoss Application Server configuration file (standalone.xml / domain.xml).</i><br />\n<br />\nYou can now put the bpm-platform.xml file in any location and provide the location as an URL. Examples:<br />\n<ul>\n<li><span style=\"background-color: white; font-family: 'Courier New', Courier, monospace; line-height: 20px;\">/home/camunda/.camunda/bpm-platform.xml</span></li>\n<li><span style=\"font-family: 'Courier New', Courier, monospace;\">C:\\path\\to\\bpm-platform.xml</span></li>\n<li><span style=\"font-family: Courier New, Courier, monospace;\">http://mydomain.com/path/to/bpm-platform.xml</span></li>\n</ul>\nThe location can be set using<br />\n<ol style=\"background-color: white; box-sizing: border-box; margin-bottom: 10px; margin-top: 0px;\">\n<li>A JNDI entry named&nbsp;<span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px;\">java:/comp/env/bpm-platform-xml</span>. This is particularly useful on websphere application server.</li>\n<li>A System Property named&nbsp;<span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px;\">bpm.platform.xml</span>. Can be set when starting the JVM:<br /><span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px;\">-Dbpm.platform.xml=/home/camunda/.camunda/bpm-platform.xml</span></li>\n<li>An environment variable named&nbsp;<span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px;\">BPM_PLATFORM_XML</span>.</li>\n</ol>\nIf none of the above is set, we will attempt to load the <span style=\"font-family: Courier New, Courier, monospace;\">bpm-platform.xml</span> from the default location which is the classpath in the Glassfish, IBM Websphere, Oracle Weblogic distributions and&nbsp;<span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 18.000001907348633px;\">{CATALINA_BASE} || ${CATALINA_HOME} + /conf/&nbsp;</span>in the apache tomcat distribution.<br />\n<br />\n<a href=\"http://docs.camunda.org/latest/api-references/deployment-descriptors/#descriptors-bpm-platformxml-configure-location-of-the-bpm-platformxml-file\">Read more about it in the docs.</a>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6694795889257681693/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3996112863561285316",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-11T19:09:00+01:00",
   "updated": "2014-11-26T16:16:58+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDE1MDE4MzUyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/camunda-bpm-710-alpha4-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3996112863561285316",
   "title": "camunda BPM 7.1.0-alpha4 released - BPMN coverage, Performance & Cockpit",
   "content": "Today we released camunda BPM 7.1.0-alpha4. This release provides many improvements and bug fixes:<br />\n<ul>\n<li><b>Process Engine:</b></li>\n<ul>\n<li>BPMN coverage:&nbsp;</li>\n<ul>\n<li>Support for Non-Interrupting Event Subprocess - (<a href=\"https://app.camunda.com/jira/browse/CAM-112\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-112</a>) -&nbsp;<b><span style=\"color: red;\">HOT</span></b></li>\n</ul>\n<li>Performance Improvements:</li>\n<ul>\n<li>Execution Tree pre-fetching (<a href=\"https://app.camunda.com/jira/browse/CAM-1967\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1967</a>)</li>\n<li>Reduce number of database queries. (<a href=\"https://app.camunda.com/jira/browse/CAM-1905\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1905</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-1906\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1906</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-1966\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1966</a>)</li>\n</ul>\n<li>Message Correlation Improvements:&nbsp;</li>\n<ul>\n<li>Added Fluent Builder &amp; Correlation using Process Instance Id (<a href=\"https://app.camunda.com/jira/browse/CAM-1775\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1775</a>)</li>\n</ul>\n</ul>\n<li><b>camunda Cockpit </b>(Webapplication for Monitoring &amp; Operations)<b>:</b></li>\n<ul>\n<li>Community Features:</li>\n<ul>\n<li>Resolve Caching problems - Try 1 (<a href=\"https://app.camunda.com/jira/browse/CAM-1899\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1899</a>)</li>\n<li>Improved Plugin API (<a href=\"https://app.camunda.com/jira/browse/CAM-1737\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1737</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-1958\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1958</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-1959\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1959</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-1960\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1960</a>,&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-1961\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1961</a>)</li>\n<li>Search &amp; Filter Activity Instance Tree (<a href=\"https://app.camunda.com/jira/browse/CAM-1874\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1874</a>)</li>\n</ul>\n<li>Enterprise only:</li>\n<ul>\n<li>History of Variables (<a href=\"https://app.camunda.com/jira/browse/CAM-73\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-73</a>)</li>\n<li>History of User Tasks (<a href=\"https://app.camunda.com/jira/browse/CAM-1875\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1875</a>)</li>\n</ul>\n</ul>\n<li><b>Bpmn Model API:</b></li>\n<ul>\n<li>Support for all camunda Extension elements &amp; Attributes (<a href=\"https://app.camunda.com/jira/browse/CAM-1854\" style=\"background-color: white; color: #3b73af; font-family: Arial, sans-serif; font-size: 14px; line-height: 20px; text-decoration: none;\">CAM-1854</a>)</li>\n</ul>\n</ul>\n<br />\nAll in all, 45 Issues were closed.&nbsp;<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13194\">Find the complete release notes in Jira.</a><br />\n<br />\n<a href=\"http://camunda.org/download/\">Download camunda BPM 7.1.0-alpha4 now!</a>&nbsp;Give us Feedback <a href=\"http://camunda.org/community/forum.html\">in the forums</a> and via Twitter:&nbsp;<a href=\"https://twitter.com/camundaBPM\">@camundaBPM</a>.<br />\n<br />\n<a name='more'></a><h3>\nNew camunda Cockpit Features</h3>\n<div>\nFirst, we<b> tried to fix the caching problems</b> many of our users experienced, see:</div>\n<div>\n<a href=\"https://groups.google.com/forum/#!searchin/camunda-bpm-users/cockpit$20cache/camunda-bpm-users/mnd1RXAiR50/veSaemAPVmAJ\">https://groups.google.com/forum/#!searchin/camunda-bpm-users/cockpit$20cache/camunda-bpm-users/mnd1RXAiR50/veSaemAPVmAJ</a></div>\n<div>\n<br /></div>\n<div>\nLet us know if you experience any problems when you upgrade camunda BPM this time.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nSecond, we added some new features:</div>\n<div>\n<br /></div>\n<div>\n<b>The Possibility to Filter / Search the Activity Instance Tree:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-22XSc_0BsDs/Ux9PGXS9obI/AAAAAAAAAV0/XWrCNzhvSqQ/s1600/filter-tree.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-22XSc_0BsDs/Ux9PGXS9obI/AAAAAAAAAV0/XWrCNzhvSqQ/s1600/filter-tree.png\" height=\"200\" width=\"185\" /></a></div>\n<div>\n<b><br /></b></div>\n<div>\n<br /></div>\n<div>\n<b>Enterprise Edition only: The Variable History Log</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-44_rBiWnXSw/Ux9PHB_a3KI/AAAAAAAAAWQ/wly0W2kyoWk/s1600/variables.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-44_rBiWnXSw/Ux9PHB_a3KI/AAAAAAAAAWQ/wly0W2kyoWk/s1600/variables.png\" height=\"242\" width=\"320\" /></a></div>\n<div>\n<b><br /></b></div>\n<div>\n<br /></div>\n<div>\n<b>Enterprise Edition only:&nbsp;The User Task History Log</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-9DjgHPb5y4M/Ux9PGby_RTI/AAAAAAAAAWE/fvDjMbO-8As/s1600/usertask.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-9DjgHPb5y4M/Ux9PGby_RTI/AAAAAAAAAWE/fvDjMbO-8As/s1600/usertask.png\" height=\"221\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div>\n<b><br /></b></div>\n<div>\n<br /></div>\n<div>\n<b>Enterprise Edition only:&nbsp;Visualize number of cancelled Activity Instances on Diagram:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-KqzaFyZWhSU/Ux9PGdM8fDI/AAAAAAAAAWI/MHpIsOmg5o4/s1600/state-cancelled.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-KqzaFyZWhSU/Ux9PGdM8fDI/AAAAAAAAAWI/MHpIsOmg5o4/s1600/state-cancelled.png\" height=\"233\" width=\"320\" /></a></div>\n<div>\n<b><br /></b></div>\n<div>\n<br /></div>\n<div>\nAnd finally, we added the possibility to <b>write plugins for the camunda Admin application</b>. The camunda Admin application now features a \"System\" section which can be enhanced using plugins:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-cRuZTyQosXI/Ux8tCoYBfzI/AAAAAAAAAVU/j99S-_tkvY8/s1600/admin.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-cRuZTyQosXI/Ux8tCoYBfzI/AAAAAAAAAVU/j99S-_tkvY8/s1600/admin.png\" height=\"241\" width=\"320\" /></a></div>\n<h3>\nFinally arrived: the Non Interrupting Event Subprocess:&nbsp;</h3>\n<div>\nWe finally added support for the non interrupting event Subprocess. Actually most of the code was already added with alpha3 but we had to do some additional testing and minor fixes for Multi Instance cases before we could release it officially.</div>\n<div>\n<br /></div>\n<div>\nThe non-interrupting event subprocess allows to react to an event (like a message, a signal or a timer) without interrupting the main flow of the process:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-qKmBDwbcb3A/Ux8kIdcuPNI/AAAAAAAAAU4/Ce-DReJ2n8w/s1600/event_subprocess.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-qKmBDwbcb3A/Ux8kIdcuPNI/AAAAAAAAAU4/Ce-DReJ2n8w/s1600/event_subprocess.png\" height=\"484\" width=\"640\" /></a></div>\n<div>\nIn the example above, if a new guest introduces himself, the main flow will not be interrupted. Executing such processes was not possible before.<br />\n<br /></div>\n<div>\nFor those of you interested in the implementation details: we added <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/AtomicOperation.java\">a new base operation (Atomic Operation)</a> to the process engine which allows to start an activity concurrently. The same code is now also used for non interrupting boundary events which, on an abstract level, behave very similarly with one key difference: for correctly supporting event subprocesses we had to implement execution tree expansion which re-expands a compacted execution tree into a concurrency tree:</div>\n<div>\n<br /></div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp;Compacted Subtree &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Expanded Subtree</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp;================= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;================</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; ... &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;...</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; +------+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+-------+ &nbsp; Scope=tt</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; | &nbsp;e &nbsp; | &nbsp; &nbsp; &nbsp; =&gt; &nbsp; &nbsp; &nbsp; &nbsp; | &nbsp; e &nbsp; | &nbsp; ConCurrent=ff</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; +------+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+-------+</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s=tt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cc=ff &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; / \\</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp; \\</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/ &nbsp; &nbsp; \\ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Both:</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +-------+ &nbsp; +--------+ &nbsp; &nbsp;s=ff</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | CCE-1 | &nbsp; | PPE &nbsp; &nbsp;| &nbsp; cc=tt</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +-------+ &nbsp; +--------+</span><br />\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\nFind more information in the <a href=\"http://camunda.org/bpmn/reference.html#activities-event-subprocess\">BPMN Reference</a>&nbsp;and the <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#subprocesses-event-subprocess\">BPMN Implementation Reference</a>.</div>\n<div>\n<br /></div>\n<h3>\nPerformance Improvements</h3>\n<div>\nWe did some performance improvements in two areas:<br />\n<br />\n<ul>\n<li>Reducing the number of unnecessary selects,</li>\n<li>Execution Tree Pre-fetching</li>\n</ul>\n<br />\nIn the following process we reduced the number of selects necessary for triggering the boundary event from 33 down to 8:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-1GBwk4nNMNk/Ux8nFaLGEpI/AAAAAAAAAVE/HlcoZ-cqD8k/s1600/BoundaryEventPerformanceTest.interruptingOnConcurrentTask.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-1GBwk4nNMNk/Ux8nFaLGEpI/AAAAAAAAAVE/HlcoZ-cqD8k/s1600/BoundaryEventPerformanceTest.interruptingOnConcurrentTask.png\" height=\"236\" width=\"320\" /></a></div>\nThe testcase is part of our <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/qa/performance-tests-engine\">performance testsuite</a>. The results can be verified using the \"Sql Statement Log\".<br />\n<br />\nLog for alpha 3 vs. Log for alpha4<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-tgxw4IJSuZU/Ux9RHJDyKCI/AAAAAAAAAWg/i3gDmn5Dvps/s1600/alpha4.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-tgxw4IJSuZU/Ux9RHJDyKCI/AAAAAAAAAWg/i3gDmn5Dvps/s1600/alpha4.png\" height=\"287\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">alpha4 NEW</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-QH03_z2UbLk/Ux9RFC6ZVEI/AAAAAAAAAWY/3Ef1ih-RemI/s1600/alpha3.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-QH03_z2UbLk/Ux9RFC6ZVEI/AAAAAAAAAWY/3Ef1ih-RemI/s1600/alpha3.png\" height=\"283\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">alpha3 OLD</td></tr>\n</tbody></table>\n<br />\n<br />\nPerformance Benchmarks show an improvement in performance of roughly 30% if the database runs on a different machine then the process engine.<br />\n<br />\nExecution tree pre-fetching w<span style=\"font-family: inherit;\">ill f</span><span style=\"background-color: white;\"><span style=\"font-family: inherit;\"><span style=\"line-height: 20px;\">etch all the executions inside the same process instance upon the first access of an execution from the&nbsp;</span></span><span style=\"line-height: 20px;\">hierarchy which is not equal to the initially fetched execution. The executions will be fetched</span><span style=\"font-family: inherit;\"><span style=\"line-height: 20px;\">&nbsp;as list and we then reconstruct the complete execution tree.</span></span></span><span style=\"background-color: white; font-family: inherit; line-height: 20px;\">&nbsp;</span><br />\n<span style=\"font-family: inherit;\"><br style=\"background-color: white; line-height: 20px;\" /><span style=\"background-color: white; line-height: 20px;\">In many cases this is an optimization over fetching the execution tree lazily. Usually we need all executions anyway and it is preferable to fetch more data in a single query (maybe even too much data) then to run multiple queries, each returning a fraction of the data.&nbsp;</span><br style=\"background-color: white; line-height: 20px;\" /><br style=\"background-color: white; line-height: 20px;\" /><span style=\"background-color: white; line-height: 20px;\">The most important consideration here is network roundtrip: If the process engine and database run on separate hosts, network roundtrip has to be added to each query. Economizing on the number of queries economizes on network roundtrip. The tradeoff here is network roundtrip vs. throughput: multiple roundtrips carrying small chucks of data vs. a single roundtrip carrying more data.</span></span><br />\n<h3>\nWhat else is gioing on?</h3>\n<a href=\"http://blog.camunda.org/2014/03/camunda-bpm-assert-10-released-as.html\">Matrin Schimak has released camunda BPM assert 1.0!!!!!!!!!&nbsp;</a><br />\n<br />\n<a href=\"http://network.camunda.org/meetings/28\">Join us at our community event here in Berlin on March 18th!</a> The Beer (and Bionade) has already arrived and is well guarded by Nastasja, our community manager!<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/--wQhoP3odoY/Ux8yFAMaX6I/AAAAAAAAAVk/gHXjv-uFwj4/s1600/beer.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/--wQhoP3odoY/Ux8yFAMaX6I/AAAAAAAAAVk/gHXjv-uFwj4/s1600/beer.jpg\" height=\"320\" width=\"240\" /></a></div>\n<br />\n<br />\n<br />\n<br /></div>\n<br />\n<br />\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3996112863561285316/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "943265052377750652",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-03-05T11:17:00+01:00",
   "updated": "2014-03-25T11:00:56+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk1NzQxNjU2MDU3Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/03/camunda-bpm-assert-10-released-as.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/943265052377750652",
   "title": "camunda-bpm-assert 1.0 released as a community extension",
   "content": "<a href=\"https://github.com/camunda/camunda-bpm-assert\" target=\"_blank\">camunda-bpm-assert</a>&nbsp;is a community extension to camunda BPM&nbsp;that makes it easier to test-drive processes that are implemented with camunda BPM.<br />\n<br />\nI am happy to say that our contributor&nbsp;<a href=\"https://twitter.com/MartinSchimak\" target=\"_blank\">Martin Schimak</a>&nbsp;from&nbsp;<a href=\"http://plexiti.com/\" target=\"_blank\">plexiti</a>&nbsp;has just published version 1.0 of the library. The release comes with a stable api, maven coordinates and tons of&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-assert/blob/master/camunda-bpm-assert/README.md\" target=\"_blank\">documentation</a>&nbsp;and <a href=\"https://github.com/camunda/camunda-bpm-assert\" target=\"_blank\">examples</a>.<br />\n<br />\nRead the offical <a href=\"http://plexiti.com/planet/2014/03/camunda-bpm-assert-released\" target=\"_blank\">release blog post</a> and make sure to <a href=\"https://github.com/camunda/camunda-bpm-assert\" target=\"_blank\">fork the project on GitHub</a>.",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/943265052377750652/comments"
   },
   "labels": [
    "community-extensions",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5029004246695957407",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-28T14:12:00+01:00",
   "updated": "2014-11-25T14:03:09+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTIwNTg5MDMzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/how-to-use-camunda-bpmnjs-to-visulize.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5029004246695957407",
   "title": "How to use camunda-bpmn.js to visulize custom business data in process models",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAs part of camunda BPM we ship <a href=\"https://github.com/camunda/camunda-bpmn.js\">camunda-bpmn.js</a> - a JavaScript framework to visualize BPMN 2.0 process models directly in your browser. It allows you to easily add own information to it. Daniel Klotz from our long-lasting customer <a href=\"http://camunda.com/bpm/references/single.php?cust=105\">Count+Care</a>&nbsp;now leveraged that to show additional information on a process diagram to users (within their own application). He wrote a great tutorial and open sourced the code as an example on GitHub:&nbsp;<a href=\"https://github.com/zerounix/camunda.process.diagram\">https://github.com/zerounix/camunda.process.diagram</a>.</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-qR6boXwiywU/UxCK9GuNQ_I/AAAAAAAAAOc/fijEv77xYYA/s1600/bpmn.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-qR6boXwiywU/UxCK9GuNQ_I/AAAAAAAAAOc/fijEv77xYYA/s1600/bpmn.PNG\" height=\"150\" width=\"320\" /></a></div>\n<br />\n<br />\nGreat stuff - thanks a lot Daniel! And expect even more power with <a href=\"http://blog.camunda.org/2014/02/bpmnio-announced-webbased-bpmn-modeling.html\">bpmn.io</a> later this year :-) Happy coding...",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5029004246695957407/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5394932134255224180",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-28T11:57:00+01:00",
   "updated": "2014-02-28T11:57:35+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkzNTg1MDU1NjUxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/camunda-bpm-71-live-webinar.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5394932134255224180",
   "title": "camunda BPM 7.1 Live Webinar",
   "content": "<p>\nOn March 21 we will present to you the brand new version 7.1 of camunda BPM – the open source platform for process automation with Java and BPMN 2.0.\n</p>\n<p>\ncamunda BPM is spreading rapidly and already being used by well-known organizations such as Lufthansa Technik, Sony DADC and Zalando.\n</p>\n<p>\nSee for yourself what our heroic team has been working on for more than 6 months and get a live demo of our great new features for process execution, monitoring and prototyping.\n</p>\n<p>\n<a href=\"http://camunda.com/webinar/2014-03/\">Please choose one of our free 1 hour Live Webinars</a>\n</p>\n<p>\nSee you there!\n</p>",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5394932134255224180/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "7808831733861251768",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-25T14:16:00+01:00",
   "updated": "2014-02-25T14:16:15+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkzMzM0MTc1Nzc5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/bpmnio-announced-webbased-bpmn-modeling.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7808831733861251768",
   "title": "bpmn.io announced - a webbased BPMN modeling toolkit as part of camunda BPM",
   "content": "<br />\nLast week camunda and zalando announced <a href=\"http://bpmn.io/\">bpmn.io</a>.<br />\n<br />\nWhat is <a href=\"http://bpmn.io/\">bpmn.io</a> about?<br />\n<br />\nIn short: BPMN everywhere, for everyone<br />\nIn detail: read this <a href=\"http://bpmn.io/blog/posts/2014-announcing-bpmn-io.html\">blogpost</a><br />\n<br />\nI want to explain why this is a really important step for camunda BPM.<br />\n<br />\nSo far we are offering a great BPMN engine, probably the best you can find if you are a java developer. This engine comes with great Web Applications which fully utilize the deployed BPMN diagrams.<br />\n<br />\nWe even offer a <a href=\"http://camunda.org/bpmn/tool/\">BPMN modeling tool</a>, standalone and as eclipse plugin.<br />\n<br />\nSince BPMN is such a great modeling notation, we want more:<br />\n<br />\nModeling BPMN should be easier and more convenient. There is no need to download and install software, when you can just open your browser and start modeling.<br />\n<br />\nIf you are a developer, we want to provide you with an open framework which allows you to embed BPMN in your applications. Users will highly appreciate it.<br />\n<br />\nAnd we want all of this to be open source.<br />\n<br />\nWe believe that this will help BPMN to spread even further.<br />\n<br />\nIn our practical experience we have seen so many people and projects who were better off with BPMN than without it.<br />\n<br />\nSubscribe to the newsletter on <a href=\"http://bpmn.io/\">bpmn.io</a> to stay up to date.<br />\n<br />\nAnd be patient until we present you with the first prototype.<br />\n<br />",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7808831733861251768/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "1638610024912907988",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-20T17:44:00+01:00",
   "updated": "2014-11-26T15:15:11+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDExMzExNzQzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/camunda-bpm-710-alpha3-released-cockpit.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1638610024912907988",
   "title": "camunda BPM 7.1.0-alpha3 released - Cockpit, BPMN Model Api and Task Operation Log",
   "content": "Today we release the next alpha version of camunda BPM. The highlights of this release are:<br />\n<ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#bpmn-model-api\">Bpmn Model API</a></li>\n<li>Task Operation Log</li>\n<li><a href=\"https://app.camunda.com/jira/browse/CAM-1182\">Edit group Identity Links</a> in&nbsp;cockpit monitoring web application</li>\n<li>Cockpit usability improvements (Browser History, Icons)</li>\n<li><a href=\"https://github.com/camunda/camunda-bpm-examples\">Consolidated Examples Repository</a></li>\n</ul>\n<div>\nOn top of this we introduced new features into the cockpit monitoring web application which are reserved for enterprise subscription customers only:</div>\n<ul>\n<li>Diagram View for Historic Process Instances</li>\n<li>Audit Log for Historic Process Instances</li>\n<li>Advanced Querying Features for Historic Process Instances</li>\n</ul>\n<br />\n<div>\n<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13193\">View the complete Relese Notes in Jira.</a></div>\n<div>\n<br /></div>\n<div>\n<b><a href=\"http://camunda.org/download/\">Download camunda BPM alpha 3 now</a></b> and Give us Feedback via&nbsp;<a href=\"https://twitter.com/camundaBPM\">@camundaBPM</a> and in the <a href=\"http://camunda.org/community/forum.html\">Forums</a>.<br />\n<br />\n<a name='more'></a></div>\n<h3>\nBpmn Model Api integration with Process Engine</h3>\n<div>\nThe <a href=\"http://docs.camunda.org/latest/guides/user-guide/#bpmn-model-api\">BPMN Model API</a> allows you to read, update and create BPMN 2.0 compliant process models using a high level Java API. The API itself lives inside a separate <a href=\"https://github.com/camunda/camunda-bpmn-model\">repository on Gihub</a>&nbsp;so that it can be used independently from camunda BPM.</div>\n<div>\n<br /></div>\n<div>\nIn this release we integrate it into camunda BPM distributions giving you convenient access to the process model at runtime.<br />\n<br />\nFirst, you can access the model for all processes deployed to the process engine using the Repository Service:<br />\n<br />\n<script src=\"https://gist.github.com/meyerdan/9112096.js\"></script>\n</div>\n<div>\nYou can also get your hands on the current FlowElement or Usertask from a JavaDeleagte, ExecutionListener or TaskListener implementation:<br />\n<br />\n<script src=\"https://gist.github.com/meyerdan/9112186.js\"></script>\n</div>\n<div>\n<a href=\"https://github.com/menski\">Sebastian Menski</a>&nbsp;who is largely responsible for the BPMN model api implementation also&nbsp;added a fluent builder API which makes it easy to create a new BPMN process (or edit an existing process) using in only a few lines of code:\n<br />\n<script src=\"https://gist.github.com/meyerdan/9112021.js\"></script>\n</div>\n<h3>\nTask Operation Log</h3>\nThanks to <a href=\"https://github.com/dgf\">Danny Gräf</a>, the process engine now logs operations performed on tasks at history level full. This allows you to inspect which user created, delegated, completed ... a Task:<br />\n<br />\n<script src=\"https://gist.github.com/meyerdan/9112468.js\"></script>\n\nThis is a feature request that many of our customers requested. We plan on adding this feature to the cockpit monitoring application as well.\n<br />\n<h3>\nNew enterprise Features in cockpit</h3>\n<div>\n<a href=\"https://github.com/romansmirnov\">Roman Smirnov</a> and <a href=\"https://github.com/zeropaper\">Valentin Vago</a>&nbsp;added a couple of enterprise only features to camunda cockpit:</div>\n<div>\n<br /></div>\n<div>\nAdvanced querying for Historic Process Instances:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-mQbYbcMbGV8/UwYMJfYEESI/AAAAAAAAAUY/RmEEbcQAyuQ/s1600/filters-1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-mQbYbcMbGV8/UwYMJfYEESI/AAAAAAAAAUY/RmEEbcQAyuQ/s1600/filters-1.png\" height=\"200\" width=\"113\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAn activity audit log:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-pHgy7CNfAgM/UwYMObgKR4I/AAAAAAAAAUg/4Fxp-OFPFEs/s1600/history-1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-pHgy7CNfAgM/UwYMObgKR4I/AAAAAAAAAUg/4Fxp-OFPFEs/s1600/history-1.png\" height=\"256\" width=\"320\" /></a></div>\n<br />\nWhich can be filtered using the hierarchical activity instance tree:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-38D08Wledho/UwYMafWPwuI/AAAAAAAAAUo/5daA-1rxAvw/s1600/history-2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-38D08Wledho/UwYMafWPwuI/AAAAAAAAAUo/5daA-1rxAvw/s1600/history-2.png\" height=\"256\" width=\"320\" /></a></div>\n<br /></div>\n<div>\n<br /></div>\n<h3>\nWhat else is going on?</h3>\n<div>\n<a href=\"http://network.camunda.org/meetings/28\">Join us at the camunda BPM birthday party in Berlin on March 18th!</a><br />\n<br />\nWe announced the launch of our new open source project <a href=\"http://bpmn.io/\">bpmn.io</a>.<br />\n<br />\nThere has been some awesome progress in some of our <a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-community-extensions\">community maintained extensions</a>:<br />\n<br />\n<a href=\"https://github.com/camunda/camunda-bpm-platform-osgi\" style=\"box-sizing: border-box; color: #428bca; text-decoration: none;\">OSGi Integration</a><br />\n<a href=\"https://github.com/rbraeunlich\">Ronny Bräunlich</a> did some great work on the testsuite and got a contribution of <a href=\"https://github.com/camunda/camunda-bpm-platform-osgi/tree/master/camunda-bpm-karaf-commands\">apache karaf commands</a><br />\n<br />\n<a href=\"https://github.com/camunda/camunda-bpm-assert\" style=\"box-sizing: border-box; color: #428bca; text-decoration: none;\">AssertJ Testing Library</a><br />\nGreat progress in fluent assertion library maintained by <a href=\"https://github.com/martinschimak\">Martin Schimak</a>. You definitely have to check out this project!!!<br />\n<br />\n<a href=\"https://github.com/camunda/camunda-bpm-needle\" style=\"box-sizing: border-box; color: #428bca; text-decoration: none;\">Needle Testing Library</a><br />\n<a href=\"https://github.com/jangalinski\">Jan Galinski</a> added features and documentation.</div>\n<div>\n<br />\n<br />\n<br />\n<br />\n<br /></div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1638610024912907988/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8719109152289841714",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-13T10:27:00+01:00",
   "updated": "2014-11-26T15:11:10+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDExMDcwNTc2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/announcing-release-date-of-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8719109152289841714",
   "title": "Announcing the Release Date of camunda BPM 7.1.0 GA",
   "content": "The next release date of <a href=\"http://www.camunda.org/\">camunda BPM</a>&nbsp;has been fixed:<br />\n<h3>\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif;\">7.1. GA* will ship on March 31</span><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif;\">st,</span><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif;\">&nbsp;2014</span></h3>\n<div>\n<span style=\"font-family: inherit;\"><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">Most features will be open source, except for the IBM Websphere and Oracle WebLogic&nbsp;</span><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">AS</span><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;</span><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">distribution along with the cockpit history plug-in.</span></span></div>\n<div>\n<span style=\"font-family: inherit;\"><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">7.1 GA will be the baseline for the next </span><a href=\"http://www.camunda.org/support.html\" style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">supported enterprise edition</a><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;of camunda BPM 7.1.</span></span><br />\n<i style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><span style=\"font-size: xx-small;\">(*General Availability)</span></i><br />\n<i style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><span style=\"font-size: xx-small;\"></span></i><br />\n<a name='more'></a></div>\n<div>\n<h3 style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; margin: 20px 0px 0px; position: relative;\">\n<span style=\"font-size: medium;\">Highlights of 7.1.</span></h3>\n</div>\n<div>\n<ul>\n<li><span style=\"font-size: medium;\">Monitoring of Historic Data in Cockpit (EE only)</span></li>\n<li><span style=\"font-size: medium;\">New&nbsp;Job Definitions Concept and&nbsp;Job Suspension Feature in Cockpit</span></li>\n<li><span style=\"font-size: medium;\">Rapid Prototyping with Task Forms generated from BPMN 2.0 XML</span></li>\n<li><span style=\"font-size: medium;\">BPMN 2.0 Model API</span></li>\n<li><span style=\"font-size: medium;\">More BPMN 2.0 Support: Non Interrupting Message Event Subprocess</span></li>\n<li><span style=\"font-size: medium;\">Webserver Support: Weblogic 12c, JBoss EAP 6.1 and 6.2</span></li>\n<li><span style=\"font-size: medium;\">Improved Message Correlation</span></li>\n</ul>\n<div>\n<span style=\"font-size: medium;\"><br /></span></div>\n</div>\n<div>\n<span style=\"font-size: medium;\">Of course there will be lots of other improvements and bugfixes included in this release.</span></div>\n<div>\n<span style=\"font-size: medium;\"><br /></span></div>\n<div>\n<span style=\"font-size: medium;\">And it will also include a lot of great community contributions, among many others from <a href=\"http://camunda.com/bpm/references/single.php?cust=122\">Zalando </a>and <a href=\"http://camunda.com/bpm/references/single.php?cust=147\">1und1</a>.</span><br />\n<span style=\"font-size: medium;\"><br /></span>\n<span style=\"font-size: medium;\">I am not able to build any of this great stuff myself. So the biggest credit goes to our great team of currently <a href=\"http://camunda.org/community/team.html\">10 passionate camundos</a>.</span><br />\n<h3>\n<span style=\"font-size: medium;\">Webinar</span></h3>\n</div>\n<div>\n<span style=\"font-size: medium;\">Join Daniel Mayer and Jakob Freund in our <a href=\"http://www.camunda.com/webinar/2014-03/\">release webinar</a> on March&nbsp;</span><span style=\"font-size: medium;\">21st</span><span style=\"font-size: medium;\">, 2014.</span></div>",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8719109152289841714/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2720803307012231542",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-10T13:37:00+01:00",
   "updated": "2014-11-26T15:09:06+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDEwOTQ2MDAzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/camunda-modeler-240-released-design.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2720803307012231542",
   "title": "camunda Modeler 2.4.0 released: Design / Source View and enhanced file handling",
   "content": "<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">Today we are happy to announce the new release of our camunda Modeler. Beside a couple of bug fixes this version adds a Source / Design view switch and an enhanced file handling.</span><br />\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><br /></span>\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">Checkout the complete list of issues&nbsp;</span><a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13004\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">solved in this release</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">. And of course,&nbsp;</span><a href=\"http://camunda.org/download/modeler/\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">try out the new modeler</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;and tell us what you think via&nbsp;</span><a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">our forums</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;or&nbsp;on&nbsp;</span><a href=\"https://twitter.com/camundaBPM\" style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">twitter</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">.</span><br />\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><br /></span>\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"></span><br />\n<a name='more'></a><span style=\"font-family: Times New Roman, Times, FreeSerif, serif;\"><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">The new features were initially developed for&nbsp;</span></span><a href=\"http://camunda.org/bpmn/tool/\" style=\"font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">camunda Modeler Standalone</a><span style=\"font-family: Times New Roman, Times, FreeSerif, serif;\"><span style=\"background-color: white; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;and are now incorporated into the main modeler codebase.&nbsp;</span></span><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">Thanks to </span><a href=\"https://github.com/Nikku\" style=\"font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">Nico's</a><span style=\"background-color: white;\"><span style=\"font-family: Times New Roman, Times, FreeSerif, serif;\"><span style=\"font-size: 15px; line-height: 21.559999465942383px;\">&nbsp; work we could align the development of both projects.</span></span></span><br />\n<br />\n<b>Source/Design View</b><br />\n<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">A feature that allows you to switch from the design perspective to the underlying BPMN 2.0 xml</span><span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">. </span><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">Use the source view to see what is behind the graphical representation or to edit custom attributes.</span><span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\">&nbsp;</span><br />\n<span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><br /></span>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"//www.youtube.com/embed/UdFB9DJango\" width=\"560\"></iframe>\n</div>\n<span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><br /></span><span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><br /></span>\n<span style=\"background-color: white; color: #666666; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px;\"><br /></span>\n<b>Enhanced file handling</b><br />\nOpen and edit files outside of your eclipse workspace by drag and drop them directly into the editor tab.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"//www.youtube.com/embed/iW83ADadQO8\" width=\"560\"></iframe>\n</div>\n<br />\nFurthermore you can work on a diagram in your favorite text editor while the same file is opened in eclipse. Changes will be recognized by Eclipse so that you will not run into a version conflict.<br />\n<br />\nThe new release is available for Eclipse Kepler and Juno/Indigo.<br />\n<br />\n<a href=\"http://camunda.com/about/jobs/\" style=\"background-color: white; color: #2288bb; font-family: 'Times New Roman', Times, FreeSerif, serif; font-size: 15px; line-height: 21.559999465942383px; text-decoration: none;\">We are hiring!</a></div>",
   "author": {
    "id": "g106268355273833601853",
    "displayName": "Michael Schöttes",
    "url": "https://www.blogger.com/profile/04022636284264094615",
    "image": {
     "url": "//lh3.googleusercontent.com/-J42zEmWWZeA/AAAAAAAAAAI/AAAAAAAADU0/Kve0YC_wOIg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2720803307012231542/comments"
   },
   "labels": [
    "BPMN",
    "camunda-modeler",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8187409559333960986",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-07T17:16:00+01:00",
   "updated": "2014-02-20T14:30:44+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkyOTAzMDQ0MjExCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/the-new-camunda-bpmn-model-api.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8187409559333960986",
   "title": "The new camunda BPMN model API",
   "content": "As already mentioned in our <a href=\"http://blog.camunda.org/2014/01/camunda-bpm-710-alpha2-released.html\" target=\"_blank\">last alpha release blog post</a>&nbsp;we are currently working on a BPMN model API to parse, create, edit and write BPMN 2.0 XML files. Last Friday we opened our <a href=\"https://github.com/camunda/camunda-bpmn-model\" target=\"_blank\">GitHub repository</a>&nbsp;and have since then created a <a href=\"http://docs.camunda.org/guides/user-guide/#bpmn-model-api\" target=\"_blank\">userguide</a> and some <a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/bpmn-model-api\" target=\"_blank\">quickstarts</a>.<br />\n<br />\nThe BPMN model API offers you a simple and straightforward way to interact with an BPMN 2.0 model. It enables you to gather information from an existing model, edit and extend them. Of course you can also create completely new ones.<br />\n<br />\nTechnically the model API is based on a DOM layer which is accessed and manipulated by a general XML API developed by us. On top of this, the BPMN model API encapsulates the interaction with the XML API. The BPMN model API as well as the XML API does not hold any state, which means only the DOM layer has the current model state. This enables us to read information which we currently are not aware of without the risk of losing such information. It also allows non-intrusive editing of BPMN Models, conserving custom formatting and source code comments.<br />\n<br />\nIn addition, if your BPMN 2.0 model contains custom elements or attributes they are always accessible even if they are not exposed through the high-level BPMN model Api. Although our BPMN model API cannot be aware of these custom extensions you can obtain and modify them easily with the generic XML API. Another benefit of this concept is that we can already show you the current state despite the fact that the current BPMN model API not yet implements all BPMN 2.0 elements. But the already supported elements are enough to create rather complex processes.<br />\n<br />\n<a href=\"https://github.com/camunda/camunda-bpmn-model\" target=\"_blank\">Just check it out!</a><br />\n<span style=\"font-family: inherit; font-size: large;\"></span><br />\n<a name='more'></a>\n<br />\n<h3>\n<span style=\"font-family: inherit;\"><span style=\"font-size: x-large;\">Show me some code please</span></span></h3>\nOkey after all this promises I want to show you some code examples so you can get a first impression what already is possible with the BPMN model API.<br />\n<div>\n<br /></div>\n<div>\nLets start with a simple example.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-UCNxhK9U_pA/UvOIZA_3UNI/AAAAAAAAAA4/BWZQK8VDSqQ/s1600/simple-process.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-UCNxhK9U_pA/UvOIZA_3UNI/AAAAAAAAAA4/BWZQK8VDSqQ/s1600/simple-process.png\" height=\"109\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">A process with a start event, user task and end event</td></tr>\n</tbody></table>\n<div>\nThe following code creates this process with the plain BPMN model API and saves it to a new file.</div>\n<div>\n<pre class=\"line-pre\" style=\"background-color: white; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 16.799999237060547px; padding: 0px; width: 744px;\"><div class=\"line\" id=\"file-gistfile1-java-LC1\">\n<pre style=\"background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 13px; line-height: 19px; margin-bottom: 15px; margin-top: 15px; overflow: auto; padding: 6px 10px; word-wrap: normal;\"><span class=\"kd\" style=\"font-weight: bold;\">public</span> <span class=\"kt\" style=\"color: #445588; font-weight: bold;\">void</span> <span class=\"nf\" style=\"color: #990000; font-weight: bold;\">testCreateProcess</span><span class=\"o\" style=\"font-weight: bold;\">()</span> <span class=\"o\" style=\"font-weight: bold;\">{</span>\n  <span class=\"n\" style=\"color: #333333;\">BpmnModelInstance</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">Bpmn</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">createEmptyModel</span><span class=\"o\" style=\"font-weight: bold;\">();</span>\n  <span class=\"n\" style=\"color: #333333;\">Definitions</span> <span class=\"n\" style=\"color: #333333;\">definitions</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">Definitions</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">definitions</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setTargetNamespace</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"http://camunda.org/examples\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setDefinitions</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">definitions</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">Process</span> <span class=\"n\" style=\"color: #333333;\">process</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">Process</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">definitions</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">addChildElement</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">process</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">StartEvent</span> <span class=\"n\" style=\"color: #333333;\">startEvent</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">StartEvent</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">startEvent</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setId</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"start\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">process</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">addChildElement</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">startEvent</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">UserTask</span> <span class=\"n\" style=\"color: #333333;\">userTask</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">UserTask</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setId</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"task\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setName</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"User Task\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">process</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">addChildElement</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">SequenceFlow</span> <span class=\"n\" style=\"color: #333333;\">sequenceFlow</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">SequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">sequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setId</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"flow1\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">process</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">addChildElement</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">sequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">connect</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">sequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"n\" style=\"color: #333333;\">startEvent</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"n\" style=\"color: #333333;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">EndEvent</span> <span class=\"n\" style=\"color: #333333;\">endEvent</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">EndEvent</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">endEvent</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setId</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"end\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">process</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">addChildElement</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">endEvent</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">sequenceFlow</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">newInstance</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">SequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">class</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">sequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setId</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"flow2\"</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">process</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">addChildElement</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">sequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">connect</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">sequenceFlow</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"n\" style=\"color: #333333;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"n\" style=\"color: #333333;\">endEvent</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n\n  <span class=\"n\" style=\"color: #333333;\">Bpmn</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">writeModelToFile</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"k\" style=\"font-weight: bold;\">new</span> <span class=\"n\" style=\"color: #333333;\">File</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"target/new-process.bpmn\"</span><span class=\"o\" style=\"font-weight: bold;\">),</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n<span class=\"o\" style=\"font-weight: bold;\">}</span>\n\n<span class=\"kd\" style=\"font-weight: bold;\">public</span> <span class=\"kt\" style=\"color: #445588; font-weight: bold;\">void</span> <span class=\"nf\" style=\"color: #990000; font-weight: bold;\">connect</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">SequenceFlow</span> <span class=\"n\" style=\"color: #333333;\">flow</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"n\" style=\"color: #333333;\">FlowNode</span> <span class=\"n\" style=\"color: #333333;\">from</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"n\" style=\"color: #333333;\">FlowNode</span> <span class=\"n\" style=\"color: #333333;\">to</span><span class=\"o\" style=\"font-weight: bold;\">)</span> <span class=\"o\" style=\"font-weight: bold;\">{</span>\n  <span class=\"n\" style=\"color: #333333;\">flow</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setSource</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">from</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">from</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">getOutgoing</span><span class=\"o\" style=\"font-weight: bold;\">().</span><span class=\"na\" style=\"color: teal;\">add</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">flow</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">flow</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">setTarget</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">to</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n  <span class=\"n\" style=\"color: #333333;\">to</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">getIncoming</span><span class=\"o\" style=\"font-weight: bold;\">().</span><span class=\"na\" style=\"color: teal;\">add</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">flow</span><span class=\"o\" style=\"font-weight: bold;\">);</span>\n<span class=\"o\" style=\"font-weight: bold;\">}</span></pre>\n</div>\n</pre>\n</div>\n<div>\nThis code generates the following BPMN 2.0 XML file.</div>\n<div>\n<pre style=\"background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 13px; line-height: 19px; margin-bottom: 15px; margin-top: 15px; overflow: auto; padding: 6px 10px; word-wrap: normal;\"><span class=\"cp\" style=\"color: #999999; font-weight: bold;\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;</span>\n<span class=\"nt\" style=\"color: navy;\">&lt;definitions</span> <span class=\"na\" style=\"color: teal;\">targetNamespace=</span><span class=\"s\" style=\"color: #dd1144;\">\"http://camunda.org/examples\"</span> <span class=\"na\" style=\"color: teal;\">xmlns=</span><span class=\"s\" style=\"color: #dd1144;\">\"http://www.omg.org/spec/BPMN/20100524/MODEL\"</span><span class=\"nt\" style=\"color: navy;\">&gt;</span>\n  <span class=\"nt\" style=\"color: navy;\">&lt;process&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;startEvent</span> <span class=\"na\" style=\"color: teal;\">id=</span><span class=\"s\" style=\"color: #dd1144;\">\"start\"</span><span class=\"nt\" style=\"color: navy;\">&gt;</span>\n      <span class=\"nt\" style=\"color: navy;\">&lt;outgoing&gt;</span>flow1<span class=\"nt\" style=\"color: navy;\">&lt;/outgoing&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;/startEvent&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;userTask</span> <span class=\"na\" style=\"color: teal;\">id=</span><span class=\"s\" style=\"color: #dd1144;\">\"task\"</span> <span class=\"na\" style=\"color: teal;\">name=</span><span class=\"s\" style=\"color: #dd1144;\">\"User Task\"</span><span class=\"nt\" style=\"color: navy;\">&gt;</span>\n      <span class=\"nt\" style=\"color: navy;\">&lt;incoming&gt;</span>flow1<span class=\"nt\" style=\"color: navy;\">&lt;/incoming&gt;</span>\n      <span class=\"nt\" style=\"color: navy;\">&lt;outgoing&gt;</span>flow2<span class=\"nt\" style=\"color: navy;\">&lt;/outgoing&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;/userTask&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;sequenceFlow</span> <span class=\"na\" style=\"color: teal;\">id=</span><span class=\"s\" style=\"color: #dd1144;\">\"flow1\"</span> <span class=\"na\" style=\"color: teal;\">sourceRef=</span><span class=\"s\" style=\"color: #dd1144;\">\"start\"</span> <span class=\"na\" style=\"color: teal;\">targetRef=</span><span class=\"s\" style=\"color: #dd1144;\">\"task\"</span><span class=\"nt\" style=\"color: navy;\">/&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;endEvent</span> <span class=\"na\" style=\"color: teal;\">id=</span><span class=\"s\" style=\"color: #dd1144;\">\"end\"</span><span class=\"nt\" style=\"color: navy;\">&gt;</span>\n      <span class=\"nt\" style=\"color: navy;\">&lt;incoming&gt;</span>flow2<span class=\"nt\" style=\"color: navy;\">&lt;/incoming&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;/endEvent&gt;</span>\n    <span class=\"nt\" style=\"color: navy;\">&lt;sequenceFlow</span> <span class=\"na\" style=\"color: teal;\">id=</span><span class=\"s\" style=\"color: #dd1144;\">\"flow2\"</span> <span class=\"na\" style=\"color: teal;\">sourceRef=</span><span class=\"s\" style=\"color: #dd1144;\">\"task\"</span> <span class=\"na\" style=\"color: teal;\">targetRef=</span><span class=\"s\" style=\"color: #dd1144;\">\"end\"</span><span class=\"nt\" style=\"color: navy;\">/&gt;</span>\n  <span class=\"nt\" style=\"color: navy;\">&lt;/process&gt;</span>\n<span class=\"nt\" style=\"color: navy;\">&lt;/definitions&gt;</span></pre>\n</div>\n<br />\n<h4>\n<span style=\"font-size: x-large;\">Fluent model builder API</span></h4>\n<div>\nOkey I know you say this looks very verbose and becomes easily hundred lines of code to create a complex task like this one.</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-FWsib1VFTEY/UvOLQfqI6lI/AAAAAAAAABE/YfR7O54bgzs/s1600/invoice.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-FWsib1VFTEY/UvOLQfqI6lI/AAAAAAAAABE/YfR7O54bgzs/s1600/invoice.png\" height=\"336\" width=\"640\" /></a></div>\n<div>\n<br /></div>\n<div>\nAlthough the BPMN model API gives you the possibility to modify the process definition in every aspect there should be an easier way to create process models like the above. And as you might expect here comes another great feature of the BPMN model API: our <b>fluent model builder API</b>. A simple way to create basic BPMN processes with the following BPMN elements:</div>\n<div>\n<ul>\n<li>process</li>\n<li>start event</li>\n<li>exclusive gateway</li>\n<li>parallel gateway</li>\n<li>script task</li>\n<li>service task</li>\n<li>user task</li>\n<li>end event</li>\n</ul>\nSo lets create this process fully deployable on our camunda BPM platform in less then 50 lines of code. Please have a look at the complete code in our <a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/bpmn-model-api/generate-process-fluent-api\" target=\"_blank\">quickstart</a>.<br />\n<pre style=\"background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 13px; line-height: 19px; margin-bottom: 15px; margin-top: 15px; overflow: auto; padding: 6px 10px; word-wrap: normal;\"><span class=\"n\" style=\"color: #333333;\">BpmnModelInstance</span> <span class=\"n\" style=\"color: #333333;\">modelInstance</span> <span class=\"o\" style=\"font-weight: bold;\">=</span> <span class=\"n\" style=\"color: #333333;\">Bpmn</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">createProcess</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"BPMN API Invoice Process\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">executable</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n  <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">startEvent</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Invoice received\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">formKey</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"embedded:app:forms/start-form.html\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n  <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Assign Approver\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">formKey</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"embedded:app:forms/assign-approver.html\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">assignee</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"demo\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n  <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">id</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"approveInvoice\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Approve Invoice\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">formKey</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"embedded:app:forms/approve-invoice.html\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">assignee</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"${approver}\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n  <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">exclusiveGateway</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Invoice approved?\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">gatewayDirection</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">GatewayDirection</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">Diverging</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">condition</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"yes\"</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"s\" style=\"color: #dd1144;\">\"${approved}\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Prepare Bank Transfer\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">formKey</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"embedded:app:forms/prepare-bank-transfer.html\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">candidateGroups</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"accounting\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">serviceTask</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Archive Invoice\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">className</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"org.camunda.bpm.example.invoice.service.ArchiveInvoiceService\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">endEvent</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Invoice processed\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n  <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">moveToLastGateway</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">condition</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"no\"</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"s\" style=\"color: #dd1144;\">\"${!approved}\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">userTask</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Review Invoice\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">formKey</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"embedded:app:forms/review-invoice.html\"</span> <span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">assignee</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"demo\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">exclusiveGateway</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n        <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Review successful?\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n        <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">gatewayDirection</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"n\" style=\"color: #333333;\">GatewayDirection</span><span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">Diverging</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">condition</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"no\"</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"s\" style=\"color: #dd1144;\">\"${!clarified}\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">endEvent</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n        <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">name</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"Invoice not processed\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n    <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">moveToLastGateway</span><span class=\"o\" style=\"font-weight: bold;\">()</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">condition</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"yes\"</span><span class=\"o\" style=\"font-weight: bold;\">,</span> <span class=\"s\" style=\"color: #dd1144;\">\"${clarified}\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n      <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">connectTo</span><span class=\"o\" style=\"font-weight: bold;\">(</span><span class=\"s\" style=\"color: #dd1144;\">\"approveInvoice\"</span><span class=\"o\" style=\"font-weight: bold;\">)</span>\n  <span class=\"o\" style=\"font-weight: bold;\">.</span><span class=\"na\" style=\"color: teal;\">done</span><span class=\"o\" style=\"font-weight: bold;\">();</span></pre>\n</div>\n<div>\nTo learn how to use the fluent builder API &nbsp;have a look at our&nbsp;<a href=\"http://docs.camunda.org/guides/user-guide/#bpmn-model-api-fluent-builder-api\" target=\"_blank\">userguide</a>. There you can find examples how to extend an existing process. For example to add a new execution path to a gateway or add new elements between two existing elements.</div>\n<div>\n<br /></div>\n<div>\nWell, what more can I say then to&nbsp;<a href=\"https://github.com/camunda/camunda-bpmn-model\" target=\"_blank\">check it out</a> and and give us feedback!</div>\n",
   "author": {
    "id": "g103291278183400801830",
    "displayName": "Sebastian Menski",
    "url": "https://www.blogger.com/profile/06805666054844709860",
    "image": {
     "url": "//lh5.googleusercontent.com/-ke4nOUH5ACw/AAAAAAAAAAI/AAAAAAAAACw/4uZajsjQ5sg/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "7",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8187409559333960986/comments"
   },
   "labels": [
    "bpmn-model-api"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7290227375149555175",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-02-06T16:16:00+01:00",
   "updated": "2014-11-26T15:00:22+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDEwNDIyMzk4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/02/camunda-modeler-standalone-100-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7290227375149555175",
   "title": "camunda Modeler Standalone 1.0.0 released as an official part of camunda BPM",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe camunda Modeler Standalone&nbsp;is a tool that allows you to create, view and edit&nbsp;<a href=\"https://en.wikipedia.org/wiki/Business_Process_Modeling_Notation\"><span id=\"goog_1978039880\"></span>BPMN<span id=\"goog_1978039881\"></span></a>&nbsp;process and collaboration diagrams in a seamless way. I am happy to say that the project,&nbsp;<a href=\"http://blog.camunda.org/2013/12/camunda-modeler-standalone-introduction.html\" target=\"_blank\">previously a side project of mine</a>,&nbsp;is now an official part of camunda BPM. Today we released version 1.0.0 as the first stable version of the modeler. <a href=\"http://camunda.org/download/modeler/\" target=\"_blank\">Get it now</a>.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n</div>\n<a name='more'></a><br /><br />\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAs part of camunda BPM the camunda Modeler Standalone got its&nbsp;<a href=\"http://camunda.org/bpmn/tool/\" target=\"_blank\">own place</a>&nbsp;on&nbsp;<a href=\"http://camunda.org/\" style=\"text-align: center;\">camunda.org</a>&nbsp;and a&nbsp;one-click-to-distribution build. From now on, it will be subject to our extensive QA and receive support through our <a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\" target=\"_blank\">forums</a>.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://camunda.org/bpmn/tool/\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-YooGjl2XQX8/UvJFpvd0dJI/AAAAAAAAAKc/NbRz-jjzBI8/s1600/modeler-screenshot.png\" width=\"500\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">The home of the modeler on <a href=\"http://camunda.org/\">camunda.org</a></td></tr>\n</tbody></table>\n<div>\n<br /></div>\n<div>\n<h2>\nUnder the Hood</h2>\n</div>\n<div>\nThe camunda Modeler Standalone is <a href=\"https://github.com/camunda/camunda-modeler-standalone\" target=\"_blank\">open-source on GitHub</a>. It has our <a href=\"https://github.com/camunda/camunda-modeler\" target=\"_blank\">camunda Modeler BPMN 2.0 plug-in for Eclipse</a>&nbsp;under the hood. In fact, both share more than 95% of the plug-in code base. As a result, most new BPMN modeling features need to be implemented only once.</div>\n<div>\n<br /></div>\n<div>\nThe standalone modeler adds better operating system integration on top of the Eclipse plug-in. This includes the ability to create, open and save BPMN 2.0 diagrams directly on the file system. Furthermore it adds a source view that allows you to switch from the design perspective to the underlying BPMN 2.0 xml. Use the source view to see what is behind the graphical representation or to edit custom attributes.</div>\n<div>\n<br /></div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://camunda.org/bpmn/tool/images/feature-source-view.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://camunda.org/bpmn/tool/images/feature-source-view.png\" height=\"292\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Source view gets you access to all the details</td></tr>\n</tbody></table>\n<div>\n<br /></div>\n<h2>\nInstaller (for Windows Users)</h2>\n<div>\n<div>\nWindows users can <a href=\"http://camunda.org/bpmn/tool/\" target=\"_blank\">get an installer</a> for the modeler that takes care of the operating system integration. It creates an uninstaller, too, that makes sure that the&nbsp;&nbsp;BPMN 2.0 modeling tool&nbsp;leaves no traces whenever you decide to get rid of it.</div>\n</div>\n<h2>\nMoving Forward</h2>\n<div>\nFor all the <a href=\"http://eclipse.org/\" target=\"_blank\">Eclipse</a>&nbsp;users that are using our camunda Modeler BPMN 2.0 plug-in there is no need to worry. We will keep the plug-in on par with the standalone version and vice versa. <i>Read: </i>Expect a new version of the Eclipse modeling plug-in with the latest changes, soon.</div>\n<div>\n<br /></div>\n<div>\nIn the mean time, <a href=\"http://camunda.org/download/modeler/\" target=\"_blank\">try out our standalone Modeler</a>, an offline BPMN tool that is both <a href=\"http://www.gnu.org/philosophy/free-sw.html\" target=\"_blank\">free as in free beer and as in open source</a>.</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\nYou like what we are doing or have ideas for improvements? Tell us <a href=\"https://twitter.com/camundaBPM\" target=\"_blank\">via twitter</a> or <a href=\"https://groups.google.com/forum/#!forum/camunda-bpm-users\" target=\"_blank\">on our forums</a>.</div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7290227375149555175/comments"
   },
   "labels": [
    "BPMN",
    "camunda-modeler-standalone",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "1669423163613424030",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-01-31T16:01:00+01:00",
   "updated": "2014-11-26T14:55:58+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDEwMTU4NTc1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/01/camunda-bpm-710-alpha2-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1669423163613424030",
   "title": "camunda BPM 7.1.0-alpha2 released",
   "content": "<span style=\"background-color: transparent;\">It was a hard time of two months without a new camunda BPM release, but the waiting came to an end today. We are happy to announce the first release of 2014: <a href=\"http://camunda.org/download/\">camunda BPM 7.1.0-alpha2</a>.</span>&nbsp;The highlights of this release are:<br />\n<br />\n<ul>\n<li>engine:</li>\n<ul>\n<li>enhance PVM Atomic Operation and Graph Model to provide facility for an activity to cancel a scope or be executed concurrently to activities in the same scope. This refactoring has the following positive effects:</li>\n<ul>\n<li>write History for Boundary Events, Intermediate Catch Events following an Event Based Gateway</li>\n<li>Execution Listeners on cancel scope / concurrent activities now work proper</li>\n<li>and fixed a lot of further bugs</li>\n</ul>\n<li>a Receive Task with a message reference can be triggered like an ordinary event (<a href=\"http://docs.camunda.org/api-references/bpmn20/#tasks-receive-task\">docs</a>)</li>\n<li>query after Historic Activity Statistics</li>\n</ul>\n<li>cockpit:</li>\n<ul>\n<li>use grunt to build client sides assets, manage client sides dependencies and fetch them (<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/webapps/h2-webapp\">github-docs</a>)</li>\n<li>show suspended Job Definitions on the process diagram</li>\n<li>add a view switcher to be able to write an own process definition or instance view as a plugin</li>\n<li>implement a new process definition view as a enterprise plugin to show historic process instances data</li>\n</ul>\n<li>performance test suite (<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/qa/performance-tests-engine#the-process-engine-performance-test-suite\">github</a>)</li>\n<li>enterprise support for Oracle WebLogic 12c, jBoss EAP 6.1 and 6.2</li>\n<li>some contributions from <a href=\"https://github.com/clintmanning\">Clint</a>&nbsp;and <a href=\"https://github.com/sm32550\">Markus</a></li>\n</ul>\n<div>\nIn total, about 90 Issues have been closed during the last two months. For further details have look into the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13190\">Release Notes</a>&nbsp;and finally</div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://camunda.org/download/\">Download camunda BPM 7.1.0-alpha2!</a></div>\n<div>\n<br />\n<a name='more'></a></div>\n<h3>\ncamunda BPMN model API</h3>\n<div>\nAnother big thing is the <a href=\"https://github.com/camunda/camunda-bpmn-model\">camunda BPMN model API</a> to parse, create and edit BPMN 2.0 XML files. The BPMN model API has been implemented by <a href=\"https://github.com/menski\">Sebastian</a>&nbsp;and the <a href=\"https://github.com/camunda/camunda-bpmn-model\">repository</a> is accessible since today! A seperate blog post is followed in short.</div>\n<h3>\nASCII-driven-programming</h3>\n<div>\nWe had a lot of discussions about how to provide the possibility for an activity to cancel a scope or be executed concurrently to activities in the same scope as native PVM Atomic Operations. In the course of the discussion we drew a lot of graphs for different cases (ie. interrupting and non-interrupting boundary events and interrupting and non-interrupting event sub processes) and discussed how the graphs should be tranformed to support the behavior native. As a result we drew some \"nice\" ASCII pictures in the source code to describe how the source graph should be transformed to achieve the desired behavior.</div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://2.bp.blogspot.com/-5Z8SSVbdt4c/Uuup4HOy6iI/AAAAAAAAADc/236DQ0mEUZs/s1600/ascii.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-5Z8SSVbdt4c/Uuup4HOy6iI/AAAAAAAAADc/236DQ0mEUZs/s1600/ascii.png\" height=\"200\" width=\"189\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">ASCII execution graphs</td></tr>\n</tbody></table>\n<div>\nYou are welcome to have a closer look at it and give us some feedback ;)</div>\n<div>\n<br /></div>\n<h3>\nDefine your own view in cockpit</h3>\n<div>\nIt is now possible to define your own views on process definitions and process instances in cockpit.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-l45rb2u-v9k/UuuvFhPyZLI/AAAAAAAAADo/eipNYdddj00/s1600/view-switcher.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-l45rb2u-v9k/UuuvFhPyZLI/AAAAAAAAADo/eipNYdddj00/s1600/view-switcher.png\" height=\"173\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n<div>\nWe used this new mechanism to implement an enterprise plugin containing a view which is based on historic process data, that includes finished process instances too.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-pYbqn6SP58c/Uuuwf4MZE2I/AAAAAAAAADw/PWkus2tYGQA/s1600/cockpit-history.png\" imageanchor=\"1\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-pYbqn6SP58c/Uuuwf4MZE2I/AAAAAAAAADw/PWkus2tYGQA/s1600/cockpit-history.png\" height=\"173\" width=\"320\" /></a></div>\n<div>\nLearn <a href=\"http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin\">here</a> how to develop a cockpit plugin and implement your own view.</div>\n<div>\n<br /></div>\n<h3>\nWhat's next?</h3>\n<div>\nThe following weeks we will continue the work on the following topics: standalone eclipse modeler, monitoring of processes based on historic data in cockpit, non-interrupting message event subprocesses, audit trail of task etc. In three or four weeks we will release the next alpha version of camunda BPM 7.1.</div>\n<div>\n<br /></div>\n<div>\nUntil then try and test the current release of <a href=\"http://www.camunda.org/download/\">camunda BPM</a>&nbsp;and give us feedback!</div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://camunda.com/about/jobs/\">We are hiring!</a></div>",
   "author": {
    "id": "g103095829219633860375",
    "displayName": "Roman Smirnov",
    "url": "https://www.blogger.com/profile/16926070807839636634",
    "image": {
     "url": "//lh5.googleusercontent.com/-5x2tX0l0eeI/AAAAAAAAAAI/AAAAAAAAAB8/gOaW1PE04uM/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1669423163613424030/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3744940645178603239",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-01-22T17:31:00+01:00",
   "updated": "2014-02-06T16:58:50+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkxNzAyMzMwNTM0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/01/benchmarking-camunda-process-engine.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3744940645178603239",
   "title": "Benchmarking Performance of camunda Process Engine - Broken SSDs and some Numbers",
   "content": "<a href=\"http://blog.camunda.org/2014/01/gaining-insight-into-performance-of.html\">Yesterday morning I posted some details</a> about our current performance testing efforts. At that point I was still developing the <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/qa/performance-tests-engine\">performance testing framework</a> and using the H2 in-memory database when running tests, just to check whether everything runs clean. Yesterday evening, finally, I wanted to run some tests on a \"real\" database. &nbsp;I hadn't done any serious performance testing since a couple of month back when we released camunda BPM 7.0 Final and in the meantime I have switched my operating system from Windows 7 to Ubuntu Linux. Turns out that Linux is much more serious when it comes to I/O errors and broken SSDs. But more on that later. Let's start with some numbers.<br />\n<br />\n<br />\n<a name='more'></a><br />\n<h3>\nSome Numbers</h3>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/--9ynIODsi2w/Ut_vU7x3flI/AAAAAAAAAT4/5PRgtrIJASw/s1600/screenshot.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/--9ynIODsi2w/Ut_vU7x3flI/AAAAAAAAAT4/5PRgtrIJASw/s1600/screenshot.png\" height=\"154\" width=\"200\" /></a></div>\nWe ran the benchmarks with History Logging turned on and off. Obviously turning History off will improve performance dramatically :)<br />\n<br />\n<b><a href=\"https://app.camunda.com/jira/secure/attachment/17665/performance-test-results-22-01-2014.zip\">Download the test results here.</a>&nbsp;(Contains many more processes than shown here).</b><br />\n<b><br /></b>\n<b>You can also <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/qa/performance-tests-engine\">have a look at the testsuite itself</a>.</b><br />\n<br />\n<i>Numbers are PostgreSQL with stock memory configuration on the hardware described at the end of the post.</i><br />\n<br />\n<h3>\nHistory vs. No History</h3>\nIf you look at a simple process which consists of a sequence with a single (no-op) step:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-FpvEcxmH9y0/Ut_QASA3YVI/AAAAAAAAASk/W0nK_9T4IoA/s1600/SequencePerformanceTest.syncSequence1Step.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-FpvEcxmH9y0/Ut_QASA3YVI/AAAAAAAAASk/W0nK_9T4IoA/s1600/SequencePerformanceTest.syncSequence1Step.png\" height=\"126\" width=\"320\" /></a></div>\nWithout History, we get the following results:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-Yt9qxCCrgFU/Ut_Ul177QxI/AAAAAAAAASw/Af69yr8GJ14/s1600/SequencePerformanceTest.asyncSequence1Step.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-Yt9qxCCrgFU/Ut_Ul177QxI/AAAAAAAAASw/Af69yr8GJ14/s1600/SequencePerformanceTest.asyncSequence1Step.png\" height=\"223\" width=\"400\" /></a></div>\nWithout history, we can execute up to 3937.01 Instances of this process per second using 4 Threads. This means that executing a single instance of this takes 0,2 Milliseconds. So not even a whole millisecond! As amazing as this sounds, there must be a trick involved :) And there is: The \"trick\" behind this number becomes clear if we look at the the Sql Statement log:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-bgV92OvYt5I/Ut_W2qGpGmI/AAAAAAAAAS8/w6XPMPM1dho/s1600/SequencePerformanceTest.asyncSequence1Step.sqllog.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-bgV92OvYt5I/Ut_W2qGpGmI/AAAAAAAAAS8/w6XPMPM1dho/s1600/SequencePerformanceTest.asyncSequence1Step.sqllog.png\" height=\"82\" width=\"400\" /></a></div>\n<br />\n<br />\nAt History Level None, this process does not perform any inserts to the database, it will just perform a single SELECT. Since this process does not have any waitstate, it will just complete in a single transaction and we do not have to write off any execution state. If we dive into the details, we see that we just select the last version of the process definition:<br />\n<br />\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"><span style=\"font-size: x-small;\">{\n  \"testName\" : \"SequencePerformanceTest.syncSequence1Step\",\n  \"configuration\" : {\n    \"testWatchers\" : \"org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogPerfTestWatcher\",\n    \"historyLevel\" : \"none\"\n  },\n  \"passResults\" : [ {\n    \"duration\" : 7,\n    \"numberOfThreads\" : 1,\n    \"stepResults\" : [ {\n      \"stepName\" : \"StartProcessInstanceStep\",\n      \"resultData\" : [ {\n        \"statementType\" : \"SELECT_MAP\",\n        \"statement\" : \"selectLatestProcessDefinitionByKey\",\n        \"durationMs\" : 5\n      } ]\n    } ]\n  } ]\n}</span></pre>\n<br />\nGiven that we run this select over and over in the benchmark, I assume that the database will put this result into some sort of in-memory cache and will not actually hit the Disk a lot. Hence the results. Turning on history obviously has a dramatic performance impact. At history level \"FULL\" we can still run up to&nbsp;698.32 instances of this process per second, boiling down to a single instance taking about 1,43... Milliseconds. Which is still good. Looking at the Sql Statement Log explains the difference:<br />\n<br />\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"></pre>\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"><span style=\"font-size: x-small;\">{\n  \"testName\" : \"SequencePerformanceTest.syncSequence1Step\",\n  \"configuration\" : {\n    \"testWatchers\" : \"org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogPerfTestWatcher\",\n    \"historyLevel\" : \"full\"\n  },\n  \"passResults\" : [ {\n    \"duration\" : 7,\n    \"numberOfThreads\" : 1,\n    \"stepResults\" : [ {\n      \"stepName\" : \"StartProcessInstanceStep\",\n      \"resultData\" : [ {\n        \"statementType\" : \"SELECT_MAP\",\n        \"statement\" : \"selectLatestProcessDefinitionByKey\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricProcessInstanceEvent\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricActivityInstanceEvent\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricActivityInstanceEvent\",\n        \"durationMs\" : 0\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricActivityInstanceEvent\",\n        \"durationMs\" : 0\n      } ]\n    } ]\n  } ]\n}</span></pre>\n<h3>\n<span style=\"font-family: inherit; font-size: small; font-weight: normal;\">On top of the select, we now need to perform 4 INSERTs, logging the Historic Activity Instances to the Database.&nbsp;</span></h3>\n<div>\nIf you run the performance testsuite, you will find results for longer sequences with 5 and 15 Steps. There you can observe the same behavior.</div>\n<h3>\nWait States</h3>\n<div>\nA second major performance factor are waitstates. Whenever the process engine hits a wait state, it must flush all its runtime memory state to the database so that it can pick up execution here later. Let's compare the results:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-7Zae04TCyO0/Ut_bzCHAfPI/AAAAAAAAATM/KQAQFzNF0Og/s1600/SequencePerformanceTest.asyncSequence1Step.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-7Zae04TCyO0/Ut_bzCHAfPI/AAAAAAAAATM/KQAQFzNF0Og/s1600/SequencePerformanceTest.asyncSequence1Step.png\" height=\"223\" width=\"400\" /></a></div>\n<div>\nThis time the difference between the history levels is not that big because in both cases we need to do more database communication:</div>\n<div>\n<br /></div>\n<div>\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"><span style=\"font-size: x-small;\">{\n  \"testName\" : \"SequencePerformanceTest.asyncSequence1Step\",\n  \"configuration\" : {    \n    \"testWatchers\" : \"org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogPerfTestWatcher\",\n    \"historyLevel\" : \"none\"\n  },\n  \"passResults\" : [ {\n    \"duration\" : 5,\n    \"numberOfThreads\" : 1,\n    \"stepResults\" : [ {\n      \"stepName\" : \"StartProcessInstanceStep\",\n      \"resultData\" : [ {\n        \"statementType\" : \"SELECT_MAP\",\n        \"statement\" : \"selectLatestProcessDefinitionByKey\",\n        \"durationMs\" : 0\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertExecution\",\n        \"durationMs\" : 1\n      } ]\n    }, {\n      \"stepName\" : \"SignalExecutionStep\",\n      \"resultData\" : [ {\n        \"statementType\" : \"SELECT_MAP\",\n        \"statement\" : \"selectExecution\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"SELECT_MAP\",\n        \"statement\" : \"selectProcessDefinitionById\",\n        \"durationMs\" : 0\n      }, {\n        \"statementType\" : \"SELECT_LIST\",\n        \"statement\" : \"selectVariablesByExecutionId\",\n        \"durationMs\" : 0\n      }, {\n        \"statementType\" : \"SELECT_LIST\",\n        \"statement\" : \"selectExecutionsByParentExecutionId\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"DELETE\",\n        \"statement\" : \"deleteExecution\",\n        \"durationMs\" : 0\n      } ]\n    } ]\n  } ]\n}</span></pre>\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"><span style=\"font-size: x-small;\">\n</span></pre>\n</div>\n<span style=\"font-weight: normal;\">In History, the historic&nbsp;Activity&nbsp;Instance needs to be INSERTED when the execution firsts enters the&nbsp;activity&nbsp;and then UPDATED (with an END timestamp + maked&nbsp;completed) when it is ended. In order for this update to be efficient, it is&nbsp;important&nbsp;that&nbsp;the existing Historic Activity Instance row can be located efficiently.</span><br />\n<h3>\nWhat we did last Summer: Optimizing&nbsp;History for Waitstates</h3>\n<span style=\"font-weight: normal;\">This brings me to something we made a lot of progress on when working on camunda BPM 7.0 Final: Having proper activity instance Ids in Runtime allows us to update history efficiently. <a href=\"http://blog.camunda.org/2013/06/introducing-activity-instance-model-to.html\">A side effect of the changes described in this blogpost</a> was that we could highly optimize the update of open Historic Activity Instances in History: If you know the unique Id of an Activity Instance in Runtime and use that as primary key for the historic activity instance table in History, then you can do updates using the primary key. Which is way more efficient than the complex search query we did in the past. Back in summer we benchmarked this with a process containing 15 wait states:</span><br />\n<span style=\"font-weight: normal;\"><br /></span>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-c1w_QInlZy8/Ut_lj62jcPI/AAAAAAAAATY/xJIqzvQ69X4/s1600/SequencePerformanceTest.asyncSequence15Steps.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-c1w_QInlZy8/Ut_lj62jcPI/AAAAAAAAATY/xJIqzvQ69X4/s1600/SequencePerformanceTest.asyncSequence15Steps.png\" height=\"298\" width=\"400\" /></a></div>\n<span style=\"font-weight: normal;\">We ran the benchmark in a way that we continuously had 200,000 running process instances and looked at how many we could complete while starting new ones:</span><br />\n<span style=\"font-weight: normal;\"><br /></span>\n<span style=\"font-weight: normal;\"><br /></span>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-kHO8pe-m-34/Ut_mLe8dxrI/AAAAAAAAATg/JcXcmr8v6YA/s1600/wait-states-throughput.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-kHO8pe-m-34/Ut_mLe8dxrI/AAAAAAAAATg/JcXcmr8v6YA/s1600/wait-states-throughput.png\" height=\"175\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">X axis is Time, Y axis is completed Instances per Second.</td></tr>\n</tbody></table>\nThe blue line is the new implementation doing an update by primary key, the red line is the old implementation which needs to do a complex search on the table for the correct Historic Activity Instance. As you can see the optimization brings up to 40 more completed instances per second. What's more we could get rid of a large composite table index which took up more space than the actual data inside the table (after 5 million activity instances, the table size was ~1820MB, the Index size was ~3975MB, PostgreSQL) .<br />\n<br />\nAnother thing which is now possible is asynchronous history logging using a messaging system. I am REALLY looking forward to benchmarking that configuration.<br />\n<h3>\n<b>Process Variables</b></h3>\nA third major performance impact is process variables. Up until now we have only looked at process engine only state. But when implementing interesting processes, you usually want to move some data :)<br />\nWe included some simple process variable tests in the testsuite. The following charts shows how adding more process variables impacts throughput:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-k4bgBmRHXV8/Ut_q2pNvYJI/AAAAAAAAATs/2KqpKnzWJUQ/s1600/variables-throughput.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-k4bgBmRHXV8/Ut_q2pNvYJI/AAAAAAAAATs/2KqpKnzWJUQ/s1600/variables-throughput.png\" height=\"223\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nGoing form a single String Variable to 10 String variables more than cuts throughput in half. This is explained by the fact that the process engine has to do an insert for each variable:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<pre style=\"white-space: pre-wrap; word-wrap: break-word;\"><span style=\"font-size: x-small;\">{\n  \"testName\" : \"VariablesPerformanceTest.noneStartEvent10StringVars\",\n  \"configuration\" : {\n    \"numberOfThreads\" : 1,\n    \"numberOfRuns\" : 1,\n    \"databaseName\" : \"org.h2.Driver\",\n    \"testWatchers\" : \"org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogPerfTestWatcher\",\n    \"historyLevel\" : \"full\"\n  },\n  \"passResults\" : [ {\n    \"duration\" : 26,\n    \"numberOfThreads\" : 1,\n    \"stepResults\" : [ {\n      \"stepName\" : \"StartProcessInstanceStep\",\n      \"resultData\" : [ {\n        \"statementType\" : \"SELECT_MAP\",\n        \"statement\" : \"selectLatestProcessDefinitionByKey\",\n        \"durationMs\" : 2\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricProcessInstanceEvent\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricActivityInstanceEvent\",\n        \"durationMs\" : 2\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricVariableUpdateEvent\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricVariableInstance\",\n        \"durationMs\" : 1\n      }, {\n        \"statementType\" : \"INSERT\",\n        \"statement\" : \"insertHistoricVariableUpdateEvent\",\n        \"durationMs\" : 1\n      }, ... ]\n    } ]\n  } ]\n}</span></pre>\n<br />\nByte variables are worse: In that case both a variable instance and a Byte array entity must be inserted.<br />\n<br />\n<h3>\n<b>How I&nbsp;discovered&nbsp;that my SSD&nbsp;is broken</b></h3>\n<div>\nYesterday evening I finally kicked the starter on the testsuite running on MySQL. Even though I said above that I am not really interested in getting any absolute numbers out of it, I was still kind of looking forward to the numbers. I own a Core i7 Quad Core processor with Intel SSD and plenty of main memory which is not a bad system in itself and I wanted to see how the numbers have evolved since this summer. But already after a few minutes, the benchmark died with some obscure I/O error messages I hadn't seen before. When I tried to check what happened I noticed that my file system was now mounted in read-only mode. Strange... There was nothing I could do but rebooting the system and trying again. On the second try, the same thing happened (different error message but same behavior). So I thought maybe there was something wrong with my MySQL installation and I tried PostgreSQL: same problem. So I gave up and went to bed in a grumpy mood. This morning the Linux experts here at camunda had a look and the diagnosis was that there is a Firmware Bug involved which is \"Un Fixable\" (heard that one before :) ) and leads to errors under heavy I/O. Windows 7 seems to ignore this but my Ubuntu Box was configured in a way that it puts the Filesystem into read-only mode when an error occurs. So there you have the ultimate proof: the process engine does stress your hardware to the max! :)</div>\n<h3>\nThe Hardware we ended up running the Benchmark on</h3>\nBut luckily, Sebastian stepped in and offered to run the benchmarks on his box. He uses a Lenovo Thinkpad and runs Archlinux.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-eG-wSACwtzE/Ut_EmI8x9UI/AAAAAAAAASU/IKI9ep1vSdo/s1600/hardware.jpg\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-eG-wSACwtzE/Ut_EmI8x9UI/AAAAAAAAASU/IKI9ep1vSdo/s1600/hardware.jpg\" height=\"200\" width=\"150\" /></a></div>\nSebastian running the Benchmarks on his developer Box:<br />\n<br />\n<i>Intel Core i5 (4 Cores, 2.5 Ghz)</i><br />\n<i>SSD Hard Disk,</i><br />\n<i>8Gig Main Memory</i><br />\n<i>Archlinux Kernel 3.12.8</i><br />\n<br />\nNow you are probably thinking: <i>What!?!?... some guy running a benchmark on his developer box while hacking away, writing email and wearing a dubious underground style hoodie... Are you kidding me? Am I supposed to take this seriously?</i><br />\n<br />\nI say: Yes you should! Here is why:<br />\n<br />\na) We are not interested in absolute numbers anyway: As I explained yesterday, our goal with this performance testsuite is not to produce absolute numbers. We know from extensive customer interaction and own benchmarks that the process engine is fast. Just how fast exactly depends on a number of factors we cannot easily reproduce here anyway.&nbsp;So we may as well go ahead and run it on &nbsp;developer box. (The perspective is to integrate the performance testsuite into CI - yes we do have actual high performance pizza-box servers for that - and systematically track performance over time: see last paragraph of this post.)<br />\n<br />\nb) The <i>playing-around-while-wearing-the-underground-</i><i>hoodie</i><i>-numbers </i>are impressive enough, I think. Anything else can only be better ;)<br />\n<h3>\nThe Perspective</h3>\n<div>\nAs discussed in this previous post we want to further extend the test suite and integrate it into CI. This will allow us to systematically track the performance of the process engine as we add more features in the future.</div>\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3744940645178603239/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3463579453774522368",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-01-21T09:46:00+01:00",
   "updated": "2014-01-21T09:56:41+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkwMjk0NjAxMjQ3Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/01/gaining-insight-into-performance-of.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3463579453774522368",
   "title": "Gaining insight into the Performance of camunda Process Engine",
   "content": "The camunda process engine has a very active codebase and is constantly evolving. Only <a href=\"https://github.com/camunda/camunda-bpm-platform/commit/202913749dcd3ec88761699340a8bd0529b84e03\">last week we did a major refactoring</a>, re-implementing the way the BPMN Boundary Event, Event Subprocess, Terminate End Event and similar constructs work. In summer we introduced an <a href=\"http://blog.camunda.org/2013/06/introducing-activity-instance-model-to.html\">activity instance model</a> and rewrote the history implementation, turning it into a <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-history-and-audit-event-log\">fire-and-forget event stream</a>.&nbsp;We also constantly add new features such as <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-incidents\">incidents</a>&nbsp;and many others.<br />\nWhen doing such refactorings, the extensive process engine testsuite gives us the confidence that we do not break existing functionality from a functional perspective (process engine currently has 1669&nbsp;Testases, over 500 were added last year). On top of that, we put quite some effort into database migration testing, <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/5984ad3ba7552c4e07b5126802059b931753c08a/qa/test-db-instance-migration/test-fixture-70/src/test/java/org/camunda/bpm/qa/upgrade/TestActivityInstanceUpgrade.java\">making sure that you can migrate running process instances</a> from one version of camunda BPM to another. However, one important thing that we did not systematically track until now is process engine performance. We did do intermittent benchmarks whenever we did major changes but until now we did not track performance systematically.<br />\nIn this post I want to give a short insight into the process engine performance testsuite we are currently setting up and the design goals behind it.<br />\n<a name='more'></a><br />\n<br />\nWe are currently setting up a <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/qa/performance-tests-engine\">performance testsuite in the camunda BPM platform repository</a>. The testsuite is located in the qa/ folder and can be run as part of the maven build. (See project <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/qa/performance-tests-engine/README.md\">README</a> for details.) <b>We are still at the beginning of this effort but I wanted to share some insights early on.</b><br />\n<h3>\nGoals of the Performance Testsuite</h3>\nThe performance test suite will serve three main goals:<br />\n<ul>\n<li>Systematically tracking the evolution of the process engine performance over time,</li>\n<li>Serving as a tool for process engine optimization,</li>\n<li>Producing results for different process engine features and configurations.</li>\n</ul>\n<div>\nTracking performance over time is important due to the refactorings we do in the process engine codebase and the new features we constantly add. When adding a feature or when changing an existing feature, we want to see how this change impacts performance. Does the change make the process engine slower?</div>\n<div>\n<br /></div>\n<div>\nThe testsuite shall also serve as a tool for optimization. The main source for optimizations in the process engine is looking at the database communication profile. Database communication constitutes the main bottleneck when it comes to process engine performance. If you can optimize database communication, the process engine will be faster. This is why the performance testsuite also provides the possibility to perform Database Sql Statement logging, counting the INSERTs, DELETEs, SELECTs and UPDATEs, performed by a test run.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nFinally, we want to produce results for different features and configurations of the process engine. We want to provide answers to questions like \"How does turning on history logging impact performance?\", \"What's the cost of a process variable?\", \"How do different BPMN constructs behave?\". We can also run the testsuite against different databases and gain insight into the differences of these databases when used as persistence provider for the process engine.</div>\n<h3>\nBenchmarks</h3>\n<div>\nThe benchmark runs the performance testsuite in multiple passes. Each pass will perform a configurable number of iterations on a certain number of threads. The first pass will use one thread, the second one two threads, the third one three threads and so forth. The benchmark gives some relative numbers as to how long it takes to run a certain process in a number of iterations with a given amount of threads. It will also show to which extent adding more threads will influence the performance numbers (scale up).<br />\n<h3>\nThe Sql Statement Log</h3>\n</div>\n<div>\nThe Sql Statement Log allows gaining insight into the process engine's communication profile with the database, counting the INSERTs, UPDATEs, DELETEs and SELECTs performed by a testrun. This is interesting since the database communication is the main source of performance bottlenecks. It also provides the most potential for optimizations.</div>\n<h3>\nOutput of a Performance Test</h3>\n<div>\nA performance test will produce a list of JSON files in the target/results/ folder of a project. The JSON files contain detailed data about the performance test. The following is the output of an individual SQL statement log for a process consisting solely of a message start event:</div>\n<div>\n<br /></div>\n<br />\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">{</span></div>\n<div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; \"testName\" : \"StartEventPerformanceTest.messageStartEvent\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; \"configuration\" : {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; \"numberOfThreads\" : 1,</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; \"numberOfRuns\" : 1,</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; \"testWatchers\" : \"org.camunda.bpm.qa.performance.engine.sqlstatementlog.StatementLogPerfTestWatcher\"</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; },</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; \"passResults\" : [ {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; \"duration\" : 8,</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; \"numberOfThreads\" : 1,</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; \"stepResults\" : [ {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; \"stepName\" : \"StartProcessInstanceByMessageStep\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; \"resultData\" : [ {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statementType\" : \"SELECT_MAP\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statement\" : \"selectMessageStartEventSubscriptionByName\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"durationMs\" : 1</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; }, {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statementType\" : \"SELECT_MAP\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statement\" : \"selectProcessDefinitionById\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"durationMs\" : 1</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; }, {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statementType\" : \"INSERT\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statement\" : \"insertHistoricProcessInstanceEvent\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"durationMs\" : 1</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; }, {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statementType\" : \"INSERT\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"statement\" : \"insertHistoricActivityInstanceEvent\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"durationMs\" : 1</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; } ]</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; } ]</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; } ]</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">}</span></div>\n</div>\n<h3>\nAggregating the Results</h3>\n<div>\nThe performance test suite then allows to aggregate the reults of all individual test runs into an aggregated report which is rendered in both HTML and JSON format:&nbsp;</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-OHkgUeJSTtg/Ut4uxbWC7wI/AAAAAAAAASA/yxfU02JDbDM/s1600/sql-statement-log-report.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-OHkgUeJSTtg/Ut4uxbWC7wI/AAAAAAAAASA/yxfU02JDbDM/s1600/sql-statement-log-report.png\" height=\"238\" width=\"320\" /></a></div>\n<br />\n<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe Html report can be read by us developers and the JSON report allows us to process the aggregated results further. For instance, we can compare two executions of the testsuite and get insight into whether performance turned to the better or the worse.</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3463579453774522368/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "4182596669245995443",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-01-14T09:35:00+01:00",
   "updated": "2014-02-04T08:33:21+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkxNDk5MjAxNjQ4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/01/get-your-tasklist-as-rss-feed.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4182596669245995443",
   "title": "Get your Tasklist as RSS Feed",
   "content": "I don't like watching my Tasklist all day. <a href=\"http://blog.camunda.org/2013/10/how-to-send-email-when-usertask-is.html\">Getting email notifications for tasks that I should complete</a> is nice, but sometimes I don't want to complete the task right after being notified but still need to keep in mind there is something pending.<br />\n<br />\nThis is how I came to create a simple PHP script that exposes my tasks as an RSS Feed.  I can use that in my personal master dashboard (Microsoft Outlook) to keep track of my camunda Tasklist. Here is the result:<br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"331\" mozallowfullscreen=\"\" src=\"//player.vimeo.com/video/84108834?title=0&amp;portrait=0\" webkitallowfullscreen=\"\" width=\"500\"></iframe>\n\n<h2>Huh wow, how did I do that?</h2>\nI used the <a href=\"http://camunda.github.io/camunda-bpm-php-sdk/\">camunda BPM PHP SDK</a> plus 40 lines of code. You can find them here:<br />\n<br />\n<a href=\"https://github.com/camunda/camunda-bpm-php-sdk/blob/examples/example/oop/tasklistrss/index.php\">Tasklist RSS Sources</a><br />\n<br />\n<br />",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4182596669245995443/comments"
   },
   "labels": [
    "how-to",
    "tasklist"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4211222354255725399",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2014-01-07T12:57:00+01:00",
   "updated": "2014-11-26T14:48:53+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDA5NzMzOTM3Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2014/01/three-core-developers-join-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4211222354255725399",
   "title": "Three new core Developers join camunda BPM Team",
   "content": "A warm welcome to the new guys!<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-ijyu0KV9IDQ/Usvqqn6WALI/AAAAAAAAARg/1CLAeCPBH2c/s1600/P1200093.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-ijyu0KV9IDQ/Usvqqn6WALI/AAAAAAAAARg/1CLAeCPBH2c/s1600/P1200093.JPG\" height=\"225\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">camunda BPM development Team</td></tr>\n</tbody></table>\n<br />\n<br />\nI am very happy to announce that last week, three new core developers joined <a href=\"http://camunda.org/community/team.html\">our team</a> here at camunda.<br />\n<br />\n<a name='more'></a><br />\nHere they are:<br />\n<h3>\n<a href=\"http://4.bp.blogspot.com/-lsbZZz84F10/UsvOY1YPcYI/AAAAAAAAAQw/SFyOG9_RX_A/s1600/danny_graef.png\" imageanchor=\"1\" style=\"clear: left; display: inline !important; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-lsbZZz84F10/UsvOY1YPcYI/AAAAAAAAAQw/SFyOG9_RX_A/s1600/danny_graef.png\" height=\"200\" width=\"200\" /></a></h3>\n<div>\n<h3>\nDanny Gräf</h3>\n<h3>\n</h3>\nDanny is an experienced developer and will focus on the backend side of things: process engine, databases, programming models (Spring / CDI) and application server integration.</div>\n<div>\n<br /></div>\n<div>\nHis Github Profile:&nbsp;<a href=\"https://github.com/dgf\">https://github.com/dgf</a><br />\n<br />\n<br />\n<br />\n<br /></div>\n<div>\n<h3>\n</h3>\n<h3>\n</h3>\n<h3>\n</h3>\n<h3>\n<a href=\"http://1.bp.blogspot.com/-1wToBph6mfY/UsvOYxtNpuI/AAAAAAAAAQ8/sU44N0deOOs/s1600/sebastian_menski.jpg\" imageanchor=\"1\" style=\"clear: left; display: inline !important; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-1wToBph6mfY/UsvOYxtNpuI/AAAAAAAAAQ8/sU44N0deOOs/s1600/sebastian_menski.jpg\" height=\"200\" width=\"200\" /></a>Sebastian Menski</h3>\n<div style=\"text-align: center;\">\n</div>\n<div style=\"text-align: center;\">\n</div>\n<div style=\"text-align: left;\">\nSebastian is an expert in distributed systems and networking and joins us as core process engine hacker.&nbsp;</div>\n<br />\n<div>\n<br /></div>\n<div>\nHis Github Profile:&nbsp;<a href=\"https://github.com/menski\">https://github.com/menski</a><br />\n<br />\n<br />\n<br />\n<br /></div>\n<h3>\n</h3>\n<h3>\n</h3>\n<h3>\n</h3>\n<h3>\n<a href=\"http://3.bp.blogspot.com/-zdrjccvyxow/UsvOYyY_NQI/AAAAAAAAAQ0/HOGxyxQY6M4/s1600/valentin_vago.jpg\" imageanchor=\"1\" style=\"clear: left; display: inline !important; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-zdrjccvyxow/UsvOYyY_NQI/AAAAAAAAAQ0/HOGxyxQY6M4/s1600/valentin_vago.jpg\" height=\"200\" width=\"200\" /></a>Valentin Vago</h3>\nValentin is a seasoned Frontend Developer and Javascript hacker. We are excited to have our first \"pure\" fronted developer on the team and we are looking forward to the great features he is going to add to our web applications.</div>\n<br />\nHis Github Profile:&nbsp;<a href=\"https://github.com/zeropaper\">https://github.com/zeropaper</a><br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\nIf you are interested in joining our team, have a look at our jobs page:&nbsp;<a href=\"http://camunda.com/about/jobs/\">http://camunda.com/about/jobs/</a><br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://2.bp.blogspot.com/-H0TY3qS87ms/UsvrKox5beI/AAAAAAAAARs/MZz8rjtT_r8/s1600/P1200095.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-H0TY3qS87ms/UsvrKox5beI/AAAAAAAAARs/MZz8rjtT_r8/s1600/P1200095.JPG\" height=\"180\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">All the nerds in one picture!</td></tr>\n</tbody></table>\nThanks to <a href=\"https://twitter.com/falko_menge\">Falko Menge</a> for taking the pictures!<br />\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4211222354255725399/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2936902112660861939",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-12-19T15:08:00+01:00",
   "updated": "2014-02-07T00:03:17+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzkxNzI3Nzk3Mjk2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/12/camunda-modeler-standalone-introduction.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2936902112660861939",
   "title": "camunda Modeler as a standalone tool",
   "content": "As a small little side project I was working on a <a href=\"https://github.com/Nikku/camunda-modeler-standalone\" target=\"_blank\">standalone version</a> of the camunda BPMN 2.0 modeling plugin for Eclipse. The camunda Modeler standalone offers nice little features to better integrate with the operating system and focuses 100% on process modeling. It is available for Mac, Linux and Windows.<br />\n<a name='more'></a><h2>\nUpdate (2014-02-05)</h2>\n<div>\nThe project is now an official part of camunda BPM. <a href=\"http://blog.camunda.org/2014/02/camunda-modeler-standalone-100-released.html\" target=\"_blank\">Read the offical announcement</a>&nbsp;or check out its&nbsp;<a href=\"http://camunda.org/bpmn/tool/\" target=\"_blank\">home on camunda.org</a>.</div>\n<h2>\nFeatures</h2>\nNotable features are the nice little desktop icon for the modeler<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-VUYU4CIWYfs/UrLzIaJWBpI/AAAAAAAAAKI/MgciNWaf7NE/s1600/modeler01.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-VUYU4CIWYfs/UrLzIaJWBpI/AAAAAAAAAKI/MgciNWaf7NE/s1600/modeler01.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">camunda Modeler @Desktop. Works on Mac and Linux, too.</td></tr>\n</tbody></table>\n<br />\nas well as the ability to directly open BPMN diagrams via double click.<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-ppnPzvK_080/UrLzIi7EkbI/AAAAAAAAAKE/MKt6nnVO7bo/s1600/modeler02.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-ppnPzvK_080/UrLzIi7EkbI/AAAAAAAAAKE/MKt6nnVO7bo/s1600/modeler02.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Double click to open in camunda Modeler.</td></tr>\n</tbody></table>\n<h2>\nShowcase</h2>\nHave a look on the short video that showcases the application:<br />\n<br />\n<center>\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"281\" mozallowfullscreen=\"\" src=\"//player.vimeo.com/video/82286614?title=0&amp;byline=0&amp;portrait=0\" webkitallowfullscreen=\"\" width=\"500\"></iframe>\n</center>\n<br />\n<br />\n<h2>\nTry it!</h2>\n<div>\nThe camunda Modeler Standalone is <a href=\"https://github.com/Nikku/camunda-modeler-standalone/releases\" target=\"_blank\">available for download</a> for Windows, Linux and Mac.&nbsp;</div>\n<div>\n<br />\nDo you find the camunda Modeler without the Eclipse IDE part useful? Try it out and tell us what you think on <a href=\"https://twitter.com/camundaBPM\" target=\"_blank\">twitter</a>.<br />\n<br />\n<br />\n<b>PS: </b><span style=\"font-weight: normal;\">This is not an official part of our product offering. Contact <a href=\"https://twitter.com/nrehwaldt\" target=\"_blank\">me</a>&nbsp;for support or file an issue in the <a href=\"https://github.com/Nikku/camunda-modeler-standalone/issues\" target=\"_blank\">projects issue tracker</a>.&nbsp;</span></div>\n",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "4",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2936902112660861939/comments"
   },
   "labels": [
    "BPMN",
    "camunda-modeler"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3720308638728097235",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-12-11T19:44:00+01:00",
   "updated": "2013-12-11T19:47:17+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzg2Nzg3NjM3NTYwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/12/get-your-own-camunda-bpm-t-shirt.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3720308638728097235",
   "title": "Get your own camunda BPM T-Shirt!",
   "content": "<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-Q2fyVzBlghI/UqiuVZ1JCcI/AAAAAAAAAOI/iNxfOJXN8NQ/s1600/Tetris_Wei%C3%9F.JPG\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"200\" src=\"http://1.bp.blogspot.com/-Q2fyVzBlghI/UqiuVZ1JCcI/AAAAAAAAAOI/iNxfOJXN8NQ/s200/Tetris_Wei%C3%9F.JPG\" width=\"177\" /></a></div>\nStill need a Christmas present? How about a cool camunda BPM T-Shirt? Various team members designed the Shirts themselves and we got quite some response throughout the year. So we will make them available to you!<br />\n<br />\nOK - to be honest we will not make it before Christmas - but you can look forward to your new Shirt early in 2014! T-Shirts cost 20 € each (including shipping within Germany - ask us for international shipment options if applicable). We collect orders from now on till 31st of December, order the bunch of T-Shirts and ship them in January to you. How does that sound?<br />\n<br />\n<a name='more'></a><br />\n<br />\nIf you are interested please send an email to <a href=\"mailto:t-shirt@camunda.com\">t-shirt@camunda.com</a>&nbsp;with<br />\n<br />\n<ul>\n<li>exact amount,</li>\n<li>style,&nbsp;</li>\n<li>color,</li>\n<li>size (S, M, L, XL) and</li>\n<li>complete delivery address.</li>\n</ul>\nIn Germany we send via invoice. For international orders we will answer you with exact prices and&nbsp;modalities. &nbsp;Of course all shirts will be <b>organic </b>and <b>fair-trade</b>!<br />\n<div style=\"text-align: center;\">\n<br /></div>\n<div style=\"text-align: left;\">\nAnd here come the styles:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div style=\"text-align: center;\">\n<b>Event:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n&nbsp;<a href=\"http://3.bp.blogspot.com/-9HKqETdtcNs/UqiuRqLYCvI/AAAAAAAAANE/rRHFV_iQca8/s1600/TShirt_Fehler.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://3.bp.blogspot.com/-9HKqETdtcNs/UqiuRqLYCvI/AAAAAAAAANE/rRHFV_iQca8/s320/TShirt_Fehler.jpg\" width=\"240\" /></a></div>\n<div style=\"text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n&nbsp;<b>Roundtrip:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-UMgVCwCN2_s/UqiuU8-N3PI/AAAAAAAAAN8/KMBo39hhgc4/s1600/TShirt_Roundtrip.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://1.bp.blogspot.com/-UMgVCwCN2_s/UqiuU8-N3PI/AAAAAAAAAN8/KMBo39hhgc4/s320/TShirt_Roundtrip.jpg\" width=\"240\" /></a></div>\n<div style=\"text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>&nbsp;Tetris:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-LOOPwyUndNA/UqiuSEtCrII/AAAAAAAAANg/3fkqaqi3Q_Y/s1600/TShirt_Tetris.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://2.bp.blogspot.com/-LOOPwyUndNA/UqiuSEtCrII/AAAAAAAAANg/3fkqaqi3Q_Y/s320/TShirt_Tetris.jpg\" width=\"240\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>BPM-Suite:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-D5WFo_VIb_0/UqiuRpbkMgI/AAAAAAAAANM/MALxD120U-g/s1600/TShirt_BPMSuiteSucks.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://2.bp.blogspot.com/-D5WFo_VIb_0/UqiuRpbkMgI/AAAAAAAAANM/MALxD120U-g/s320/TShirt_BPMSuiteSucks.jpg\" width=\"240\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>&nbsp;Rainbow:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-yQDv4W70KDw/UqiuRkr1HLI/AAAAAAAAANI/Q0bnv_OOm6w/s1600/TShirt_Rainbow.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://2.bp.blogspot.com/-yQDv4W70KDw/UqiuRkr1HLI/AAAAAAAAANI/Q0bnv_OOm6w/s320/TShirt_Rainbow.jpg\" width=\"240\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\nAnd colors:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>white:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-Q2fyVzBlghI/UqiuVZ1JCcI/AAAAAAAAAOM/pL-XpspVcWU/s1600/Tetris_Wei%25C3%259F.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://3.bp.blogspot.com/-Q2fyVzBlghI/UqiuVZ1JCcI/AAAAAAAAAOM/pL-XpspVcWU/s320/Tetris_Wei%25C3%259F.JPG\" width=\"284\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>black:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-IiR2IuoYrug/UqiuUvN6FNI/AAAAAAAAAOA/TbjaeLT8APE/s1600/Tetris_Schwarz.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://2.bp.blogspot.com/-IiR2IuoYrug/UqiuUvN6FNI/AAAAAAAAAOA/TbjaeLT8APE/s320/Tetris_Schwarz.JPG\" width=\"283\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>red:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-tkZnXZhRn6s/UqiuUCfC0JI/AAAAAAAAAOE/o1vMlb0ZHr8/s1600/Tetris_Rot.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://4.bp.blogspot.com/-tkZnXZhRn6s/UqiuUCfC0JI/AAAAAAAAAOE/o1vMlb0ZHr8/s320/Tetris_Rot.JPG\" width=\"288\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>brown:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-sl5fkhkvHfc/UqiuTXJ14vI/AAAAAAAAANs/DF5wD_nx92g/s1600/Tetris_Braun.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://1.bp.blogspot.com/-sl5fkhkvHfc/UqiuTXJ14vI/AAAAAAAAANs/DF5wD_nx92g/s320/Tetris_Braun.JPG\" width=\"272\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>blue:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-kGWYFnk68E4/UqiuSlIt12I/AAAAAAAAANY/6ytYfU1hO9o/s1600/Tetris_Blau.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://1.bp.blogspot.com/-kGWYFnk68E4/UqiuSlIt12I/AAAAAAAAANY/6ytYfU1hO9o/s320/Tetris_Blau.JPG\" width=\"283\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<b>green:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-a4x-3fyLtb4/UqiuT5XJ1iI/AAAAAAAAANo/vmvJj085zT4/s1600/Tetris_Gr%25C3%25BCn.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://1.bp.blogspot.com/-a4x-3fyLtb4/UqiuT5XJ1iI/AAAAAAAAANo/vmvJj085zT4/s320/Tetris_Gr%25C3%25BCn.JPG\" width=\"289\" /></a></div>\n<br />",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3720308638728097235/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3219040114499718464",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-12-09T15:31:00+01:00",
   "updated": "2014-11-26T13:55:26+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDA2NTI2NjAzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/12/camunda-modeler-231-released-fixes.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3219040114499718464",
   "title": "camunda Modeler 2.3.1 released: Fixes installation issues",
   "content": "Some users experienced difficulties installing version 2.3.0 of the <a href=\"http://camunda.org/download/modeler/\" target=\"_blank\">camunda Modeler</a> from our update site.<br />\n<br />\nThis patch release fixes the installation issues. <a href=\"http://camunda.org/download/modeler/\" target=\"_blank\">Grab it</a> if you had trouble installing.",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3219040114499718464/comments"
   },
   "labels": [
    "camunda-modeler",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2970915136121057927",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-12-05T17:34:00+01:00",
   "updated": "2014-11-26T13:54:31+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDA2NDcxMjIyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/12/camunda-Modeler-2-3-0-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2970915136121057927",
   "title": "camunda Modeler 2.3.0 released: Custom Tasks, Form Fields and better Subprocess Modeling",
   "content": "We are happy to announce the new release of the camunda Modeler. This version adds the ability to extend the modeler with custom tasks. Furthermore it adds editing support for form fields that were recently <a href=\"http://blog.camunda.org/2013/11/camunda-BPM-7.1.0-alpha1-released.html\">re-introduced</a> into the camunda BPM platform. Last but not least, it improves the handling of subprocesses.\n<br />\n<a name='more'></a><br />\n<h3>\nCustom Task Plugins</h3>\n<div>\nCustom task plugins give you the ability to contribute self-made tasks to the camunda modeler.<br />\n<br /></div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://stage.docs.camunda.org/assets/img/real-life/examples/modeler-custom-task.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://stage.docs.camunda.org/assets/img/real-life/examples/modeler-custom-task.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">A quite custom service task.</td></tr>\n</tbody></table>\nA custom task is a task that may be reused across all of your diagrams. It can ship with a predefined configuration, can have a customized look and feel and integrates into the palette as well as the properties panel.<br />\n<div>\n<br /></div>\n<div>\nCheck out our&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-examples/tree/master/modeler/custom-task-advanced\">custom task example</a>&nbsp;that show cases what is possible with custom tasks. <a href=\"http://docs.camunda.org/latest/real-life/how-to/#modeler\">Head over</a> to the how to section if you want to build your own custom tasks right away.</div>\n<div>\n<br /></div>\n<h3>\nForm Field Editing</h3>\n<div>\nYou are now able to edit form fields for via the property panel. Check out Daniels&nbsp;<a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=VgJQ8nPzEMQ#t=358\">introduction on generated forms</a>&nbsp;to get more context on the topic.</div>\n<div>\n<br /></div>\n<h3>\nSubprocess Improvements</h3>\n<div>\nFor everyone modeling subprocesses out there, there is good news. You may now safely expand and collapse subprocesses. Internal layout of children will be retained. Import and export, work, too.</div>\n<div>\n<br /></div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-fSqx_qXZefc/Up9awk0m1aI/AAAAAAAAAJ0/icipOV2dV1g/s1600/collapse-subprocess.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-fSqx_qXZefc/Up9awk0m1aI/AAAAAAAAAJ0/icipOV2dV1g/s400/collapse-subprocess.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Do it</td></tr>\n</tbody></table>\n<br />\n<div>\nWe fixed a number of bugs, too, including the sudden popup of error markers on BPMN 2.0 diagrams.</div>\n<div>\n<br /></div>\n<div>\nCheckout the complete list of issues <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13003\">solved in this release</a>. And of course, <a href=\"http://camunda.org/download/modeler/\">try out the new modeler</a>&nbsp;and tell us what you thing via&nbsp;<a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\">our forums</a>&nbsp;or&nbsp;on&nbsp;<a href=\"https://twitter.com/camundaBPM\">twitter</a>.<br />\n<br />\nThanks go to&nbsp;<a href=\"https://twitter.com/hawky4s\">Christian</a>, <a href=\"https://twitter.com/meyerdan\">Daniel </a>and <a href=\"https://twitter.com/_mschoe\">Michael </a>for <a href=\"https://twitter.com/meyerdan/status/408633474992459776\">getting this Release through QA</a>.</div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "7",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2970915136121057927/comments"
   },
   "labels": [
    "camunda-modeler",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5348563096595806923",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-12-03T15:07:00+01:00",
   "updated": "2014-11-26T13:44:59+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDA1ODk5NDk4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/12/how-to-use-generated-task-forms-with.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5348563096595806923",
   "title": "How to use Generated Task Forms with camunda BPM - Screencast",
   "content": "I prepared a screencast in which I show how to use the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-task-forms-generated-task-forms\">Generated Task Forms</a> Feature we introduced with camunda BPM 7.1.0-alpha1.<br />\n<br />\nGenerated task forms allow you to create simple task forms without the need to write any HTML code.<br />\n<br />\nPlease also have a look at the&nbsp;<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/usertask/task-form-generated\">Generated Task Forms Quickstart</a>.<br />\n<br />\nI dedicate the first 3 minutes to show you guys how to do the project setup.<b> If you are familiar with setting up a camunda ServletProcessApplication, you can skip ahead to about 3:00 and start there.</b><br />\n<br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"//www.youtube.com/embed/VgJQ8nPzEMQ\" width=\"560\"></iframe>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5348563096595806923/comments"
   },
   "labels": [
    "camunda-modeler",
    "task forms",
    "tasklist"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8368117002165779207",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-11-29T17:22:00+01:00",
   "updated": "2014-11-26T13:41:58+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE3MDA1NzE4OTUwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/11/camunda-BPM-7.1.0-alpha1-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8368117002165779207",
   "title": "camunda BPM 7.1.0-alpha1 released: Task Forms, Job Suspension and Bugfixes",
   "content": "I am proud to announce the release of camunda BPM 7.1.0-alpha1. This is the first community alpha release in the 7.1 branch. The highlights of this release are:<br />\n<br />\n<ul>\n<li>Enhanced support for HTML5 Embedded Task Forms (<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/usertask/task-form-embedded\">Quickstart Example</a>, <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-task-forms-embedded-task-forms\">Docs</a>),</li>\n<li>Add support for Generated Task Forms (<a href=\"http://blog.camunda.org/2013/12/how-to-use-generated-task-forms-with.html\">Blogpost</a>,&nbsp;<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/usertask/task-form-generated\">Quickstart Example</a>, <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-task-forms-generated-task-forms\">Docs</a>),</li>\n<li>Add support for \"Job Definitions\" allowing to query, suspend &amp; activate Job Execution by individual Activity at Process Definition Level (<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-engine-concepts-jobs-and-job-definitions\">Docs</a>),</li>\n<li>Add support for suspending Process Definition, Process Instances and Job Definitions in cockpit,</li>\n<li>Upgrade JBoss Application Server Support from 7.1.3 to 7.2 / EAP 6.1 (<a href=\"http://docs.camunda.org/latest/guides/user-guide/#runtime-container-integration\">Docs</a>),</li>\n<li>Fixed OSGi Manifest Headers (community contribution by <a href=\"https://github.com/rbraeunlich\">Ronny Bräunlich</a>)</li>\n<li>32 Bug Fixes</li>\n</ul>\n<div>\nSee the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13006\">complete release notes in Jira</a>.</div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://www.camunda.org/download/\" style=\"text-align: center;\">Download&nbsp;camunda BPM 7.1.0 alpha1</a></div>\n<div>\n<a name='more'></a></div>\n<h3>\nWhat's next?</h3>\n<div>\nWe will now intensify our development efforts in the 7.1 branch and work towards the 7.1.0 Final release. You can expect alpha releases every 2-3 weeks over the next months. The next big item will be adding history support in camunda cockpit. See <a href=\"http://www.camunda.org/community/roadmap.html\">camunda BPM roadmap</a> for more information.</div>\n<div>\n<h3>\nWhat else is going on?</h3>\n<div>\nIn the incubation space, the&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-testing\">camunda BPM testing project</a>&nbsp;was very active. The latest work was focused on Fest Assertions and an example application. Hats off to <a href=\"https://github.com/martinschimak\">Martin Schimak</a>, <a href=\"https://github.com/jangalinski\">Jan Galinski</a>, <a href=\"https://github.com/hawky-4s-\">Christian Lipphardt</a>, <a href=\"https://github.com/zambrovski\">Simon Zambrovski</a>, <a href=\"https://github.com/berndruecker\">Bernd Rücker</a>.&nbsp;(Ordered by last commit date.)</div>\n<div>\n<br /></div>\n<div>\nA&nbsp;<a href=\"https://groups.google.com/forum/?fromgroups#!topic/camunda-bpm-dev/vr9LgCg3-pI\">new incubation project on OSGi support was proposed</a>.</div>\n<div>\n<br /></div>\n<div>\ncamunda BPM Maven artifacts will be available through maven central shortly.</div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://www.camunda.org/community/team.html\">1&amp;1 and Zalando now officially joined camunda BPM team as contributors.</a></div>\n</div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://www.camunda.org/community/jobs.html\">We are hiring!</a></div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8368117002165779207/comments"
   },
   "labels": [
    "cockpit",
    "release notes",
    "task forms"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6997615244313745376",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-11-29T14:30:00+01:00",
   "updated": "2014-12-11T14:16:30+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4MzAzNzkwMTI5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/11/monitor-collaborating-executable-bpmn.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6997615244313745376",
   "title": "Monitor collaborating executable BPMN 2.0 processes in cockpit",
   "content": "In a current customer project we faced the issue that there were two executable processes - independent of each other. So far - so normal. But these two processes had to sync status here and there - so they were clearly related, but not by using a&nbsp;<a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#subprocesses-call-activity\" target=\"_blank\">Call Activity</a>. BPMN 2.0 allows this by <b>communication via messages</b>&nbsp;as shown in the following example. But how to keep track of this in monitoring? We developed a small c<b>ockpit plugin</b> to show the related process instances - see below.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-0IneiSViOHI/UpiTR9OmReI/AAAAAAAAALs/tjfPu89PKnQ/s1600/collaboration.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-0IneiSViOHI/UpiTR9OmReI/AAAAAAAAALs/tjfPu89PKnQ/s400/collaboration.png\" height=\"192\" width=\"400\" /></a></div>\n<a name='more'></a>The process is in the area of IT infrastructure management, where changes are handled by multiple different change processes handled by different departments which are pretty autonomous. But actually for todays post it is not really important what the process does. I can just add that I am pretty happy that camunda is small enough to have much easier processes in place for IT infrastructure management (\"Hey Stefan - get the wireless working please\" ;-)).<br />\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nI added a new example process application showing the above process in action - including the Java code I wrote in order so send all the messages:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<span style=\"color: #0000ee; font-size: large;\"><u><a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/cockpit-plugin-bpmn-collaboration\">https://github.com/camunda/camunda-consulting/tree/master/snippets/cockpit-plugin-bpmn-collaboration</a></u></span></div>\n<br />\nI used process variables (\"callingProcess\" and \"calledProcess\") to remember which processes communicate with each other. I used this variables in a pretty straight forward <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit-plugins\" target=\"_blank\">cockpit plugin</a> showing the related processes &nbsp;for a selected process instance (comparable to what we do out-of-the-box for call activities):<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-i7dvJ2Q2-sY/UpiVNDaxlOI/AAAAAAAAAL4/d2s2_8iOrVg/s1600/screenshot1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-i7dvJ2Q2-sY/UpiVNDaxlOI/AAAAAAAAAL4/d2s2_8iOrVg/s320/screenshot1.png\" height=\"221\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\nThis makes it pretty easy to keep everything under control in operations. And the best: It took only a couple of minutes to write the plugin :-)<br />\n<br />\nCheck it out yourself:<br />\n<span style=\"font-size: large;\"><a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/cockpit-plugin-bpmn-collaboration\">https://github.com/camunda/camunda-consulting/tree/master/snippets/cockpit-plugin-bpmn-collaboration</a></span><br />\n<br />\nFeedback always welcome - use our <a href=\"http://camunda.org/community/forum.html\" target=\"_blank\">forum</a>.",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6997615244313745376/comments"
   },
   "labels": [
    "BPMN",
    "cockpit"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3551341721661006779",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-11-18T15:33:00+01:00",
   "updated": "2013-11-18T15:39:33+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzg0Nzg1NTczMDk4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/11/create-camunda-bpm-process-applications.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3551341721661006779",
   "title": "Create a camunda BPM Process Application using Maven Archetype in 1 minute",
   "content": "For quite some time we already use <a href=\"http://maven.apache.org/guides/introduction/introduction-to-archetypes.html\" target=\"_blank\">Maven Archetypes</a>&nbsp;in our <a href=\"http://www.camunda.com/fox/training/camunda-bpm-basics/\" target=\"_blank\">camunda BPM&nbsp;training</a>&nbsp;and at customer projects to create camunda BPM&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications\" target=\"_blank\">Process Applications</a> - which are normally simple Maven projects. Today I made a quick screencast to show how easy it is to use them:<br />\n<br />\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"//www.youtube.com/embed/u7864slrC1c\" width=\"420\"></iframe>\n\n<br />\nAnd I created a 30 seconds survey to get feedback on archetypes - please fill it out:&nbsp;<a href=\"http://kwiksurveys.com/app/rendersurvey.asp?sid=d9juq1qriakt2ls257813\">http://kwiksurveys.com/app/rendersurvey.asp?sid=d9juq1qriakt2ls257813</a><br />\n<br />\n<a name='more'></a><br />\nWe currently have two archetypes available:<br />\n<ul>\n<li>war: Use on Servlet containers like Tomcat.</li>\n<li>ejb: Use on EJB containers like JBoss AS, WebSphere, Glassfish or WebLogic.</li>\n</ul>\nYou can find the full documentation online:&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications-maven-project-templates-archetypes\" target=\"_blank\">Maven Archetypes (Project Templates)</a>.So you can start using it today.<br />\n<br />\n<b><span style=\"font-size: large;\">Give us feedback!</span></b><br />\n<br />\nWe currently discuss how important archetypes are for our community and what types of archetypes we should provide (if any). <b><span style=\"font-size: large;\">Please take 30 seconds</span></b> to fill in our <span style=\"font-size: large;\"><b><a href=\"http://kwiksurveys.com/app/rendersurvey.asp?sid=d9juq1qriakt2ls257813\" target=\"_blank\">survey</a></b></span>. Thank you!",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3551341721661006779/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "4589386225849927421",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-11-15T13:16:00+01:00",
   "updated": "2013-11-15T13:19:46+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzg0NTE3OTg2NzI4Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/11/camunda-bpm-php-sdk-v110-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4589386225849927421",
   "title": "camunda BPM PHP SDK v1.1.0 released",
   "content": "Today we released version 1.1.0 of the PHP SDK. The highlights of this release are:<br />\n<br />\n<ul>\n<li>Add compatibility with camunda BPM 7.0.0 Final</li>\n<li>Fully object oriented API</li>\n<li>Improved test coverage through PHPUnit</li>\n<li>Add support for composer</li>\n</ul>\n<div>\nThe packages are pushed to&nbsp;<a href=\"https://packagist.org/packages/camunda/camunda-bpm-php-sdk\">Packagist</a>.</div>\n<div>\n<br /></div>\n<div>\ncamunda PHP SDK allows PHP users to interact with the process engine and build BPMN 2.0 and Workflow enabled applications.</div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://camunda.github.io/camunda-bpm-php-sdk/\">Start reading the documentation.</a></div>\n<div>\n<br /></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4589386225849927421/comments"
   },
   "labels": [
    "php",
    "polyglot"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3442989166469872897",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-11-10T20:33:00+01:00",
   "updated": "2013-11-10T20:33:12+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzg0MTExOTkyMDE0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/11/bpmn-service-synchronous-asynchronous.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3442989166469872897",
   "title": "Synchronous vs. Asynchronous Service Invocations - BPMN Service Task (1)",
   "content": "<div class=\"MsoNormal\">\n<span lang=\"EN-US\">The BPMN\n2.0 Specification provides the Service Task activity allowing users to invoke\nsome application service.&nbsp;</span>In this\nBlogpost I want to explain the difference between a synchronous and an\nasynchronous service invocation in camunda BPM.<br />\n<br /></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><b>NOTE</b>: <i>this bogposts covers the topic at an abstract level. If you are looking for concrete, ready-to-use examples, have a look at our quickstart repository:&nbsp;</i></span>\n<br />\n<ul>\n<li>&nbsp;<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/servicetask/service-invocation-synchronous\">quickstart on synchronous service invocations</a></li>\n<li>&nbsp;<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/servicetask/service-invocation-asynchronous\">quickstart on asynchronous service invocations</a></li>\n</ul>\n</div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"></span></div>\n<a name='more'></a><h3>\nSynchronous Service\nInvocations</h3>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">Let’s start\nwith synchronous service invocations. A synchronous service invocation follows\nthe well-known <a href=\"http://www.servicedesignpatterns.com/ClientServiceInteractions/RequestResponse\">Request\n/ Response Pattern</a>: <o:p></o:p></span></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-7DvI7gR80DU/Un_WwdE24gI/AAAAAAAAAPY/l3dKY8oXYHY/s1600/sync-service-invocation.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"199\" src=\"http://3.bp.blogspot.com/-7DvI7gR80DU/Un_WwdE24gI/AAAAAAAAAPY/l3dKY8oXYHY/s320/sync-service-invocation.png\" width=\"320\" /></a></div>\n<br />\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">The process\nengine performs a synchronous request to a service and waits for a response.\nThe characteristic property of this invocation pattern consists in the fact\nthat the process engine thread sending the request is blocked until the\nresponse is obtained:</span></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-ruzHMpfRDeA/Un_Wxt7y3nI/AAAAAAAAAPk/jqrJvMfutW4/s1600/sync-service-invocation-illustrated.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"196\" src=\"http://3.bp.blogspot.com/-ruzHMpfRDeA/Un_Wxt7y3nI/AAAAAAAAAPk/jqrJvMfutW4/s400/sync-service-invocation-illustrated.png\" width=\"400\" /></a></div>\n<div align=\"center\" class=\"MsoNormal\" style=\"text-align: center;\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">Transactional\nprocess engines such as the camunda process engine will typically associate a\ndatabase transaction (Process Engine Tx in the illustration above) with this thread.\n<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">Implementing\na synchronous service invocation in camunda BPM is very straight forward:<o:p></o:p></span></div>\n<div class=\"MsoListParagraphCxSpFirst\" style=\"mso-list: l0 level1 lfo1; text-indent: -18.0pt;\">\n</div>\n<ol>\n<li><span lang=\"EN-US\" style=\"text-indent: -18pt;\"><span style=\"font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span><span lang=\"EN-US\" style=\"text-indent: -18pt;\">Model\na Process containing a Service Task</span></li>\n<li><span lang=\"EN-US\" style=\"text-indent: -18pt;\"><span style=\"font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span><span lang=\"EN-US\" style=\"text-indent: -18pt;\">Attach\na “JavaDelegate”-Implementation to the service task.</span></li>\n</ol>\nCheck out this <a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/servicetask/service-invocation-synchronous\">quickstart on synchronous service invocation</a>s to learn how to to implement this.<br />\n<h3>\n<span lang=\"EN-US\">Asynchronous Service Invocations</span></h3>\n<div>\n<span lang=\"EN-US\">An asynchronous service invocation usually follows the <a href=\"http://www.servicedesignpatterns.com/ClientServiceInteractions/RequestAcknowledge\">Request / Acknowledge / Callback Pattern</a>:</span></div>\n<div>\n<span lang=\"EN-US\"><br /></span></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-QY6TZDqztWE/Un_Yf13y3QI/AAAAAAAAAP4/NhcVK0lnY_4/s1600/async-service-invocation.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"215\" src=\"http://3.bp.blogspot.com/-QY6TZDqztWE/Un_Yf13y3QI/AAAAAAAAAP4/NhcVK0lnY_4/s400/async-service-invocation.png\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe process engine sends the request to the service. But instead of processing the request right away, the the service first puts the request into a Queue. It then acknowledges the receipt of the request to the process engine. The request is then delivered asynchronously to the actual request processor. The request processor executes the business logic. Finally it sends a callback to the process engine which may now continue execution in the process instance.&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nIn practice, we encounter multiple variations of this pattern. For example, the callback itself may be delivered synchronously or asynchronously. Furthermore, the queuing of the requests may be performed before or behind the service boundary. Here is an illustration of two of such variations:&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-5Ou09ISyMuU/Un_Yf6cBtOI/AAAAAAAAAP8/iru4LFGRyRI/s1600/async-service-invocation-queuing.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"171\" src=\"http://4.bp.blogspot.com/-5Ou09ISyMuU/Un_Yf6cBtOI/AAAAAAAAAP8/iru4LFGRyRI/s400/async-service-invocation-queuing.png\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nContrary to the synchronous service invocation, the transaction context of the process engine is &nbsp;not propagated to the service implementation. In fact, an asynchronous service invocation always comes down to at least two transactions (labelled Tx1 and Tx2 in the illustration below):</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-CpaUxjWL8dE/Un_Yf7VqcrI/AAAAAAAAAP0/f45bD3bvsuI/s1600/async-service-invocation-illustrated.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"237\" src=\"http://2.bp.blogspot.com/-CpaUxjWL8dE/Un_Yf7VqcrI/AAAAAAAAAP0/f45bD3bvsuI/s400/async-service-invocation-illustrated.png\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<ol>\n<li>in the first transaction (Tx1), the request message is sent. If the request is acknowledged, the process engine interrupts execution and commits the transaction.</li>\n<li>in the second transaction (Tx2), the callback is sent and processed. This constitutes a new transaction in which the process engine resumes the state of the execution and ends the service task activity.</li>\n</ol>\n<div class=\"MsoNormal\">\n<span lang=\"EN-US\">Implementing an asynchronous service invocation in camunda BPM is a lot more complicated than implementing a synchronous service invocation. You have to:<o:p></o:p></span></div>\n<div class=\"MsoListParagraphCxSpFirst\" style=\"text-indent: -18pt;\">\n</div>\n<ol>\n<li><span lang=\"EN-US\" style=\"text-indent: -18pt;\"><span style=\"font-size: 7pt;\">&nbsp;</span></span><span lang=\"EN-US\" style=\"text-indent: -18pt;\">Model a Process containing a Service Task</span></li>\n<li><span lang=\"EN-US\" style=\"text-indent: -18pt;\"><span style=\"font-size: 7pt;\">&nbsp;</span></span><span lang=\"EN-US\" style=\"text-indent: -18pt;\">Attach a “SignallableActivityBehavior”-Implementation to the service task.</span></li>\n<li><span lang=\"EN-US\" style=\"text-indent: -18pt;\">In the execute() method, send a message to the actual Business Logic</span></li>\n<li><span lang=\"EN-US\" style=\"text-indent: -18pt;\">Implement a callback message which is correlated to the same process instance from which the request message was sent.</span></li>\n</ol>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nCheck out this&nbsp;<a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/servicetask/service-invocation-asynchronous\">quickstart on asynchronous service invocations</a>&nbsp;to learn how to to implement this.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div>\n<div style=\"text-align: center;\">\n<a href=\"http://creativecommons.org/licenses/by-sa/3.0/deed.en_US\" rel=\"license\"><img alt=\"Creative Commons License\" src=\"http://i.creativecommons.org/l/by-sa/3.0/88x31.png\" style=\"border-width: 0;\" /></a><br />\nThis blogpost including images &amp; illustrations is licensed under a <a href=\"http://creativecommons.org/licenses/by-sa/3.0/deed.en_US\" rel=\"license\">Creative Commons Attribution-ShareAlike 3.0 Unported License</a>.\n</div>\n</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "9",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3442989166469872897/comments"
   },
   "labels": [
    "BPMN",
    "service task"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2797108674214719006",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-11-08T17:09:00+01:00",
   "updated": "2014-11-26T11:09:58+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTk2NTk4NTc5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/11/camunda-modeler-220-released-kepler.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2797108674214719006",
   "title": "camunda Modeler 2.2.0 released: Kepler support and modeling improvements",
   "content": "Today we are happy to announce the new release of the camunda Modeler. This version adds official support for Eclipse Kepler. On top of that it ships with the ability to change the type of tasks, events and gateways as well as a simplified connection of elements. <br />\n<a name='more'></a><h3>\nEclipse Kepler Support</h3>\n<div>\nKepler support is finally there. Head over to the downloads site and <a href=\"http://camunda.org/download/modeler/\">get a fresh version of the modeler</a>, ready for Kepler.</div>\n<h3>\nMorphing áka Changing Flow Node Types</h3>\n<div>\nMorphing flow nodes to different types is something we are pretty exited about because it makes it a lot easier to change existing process models. Thanks to Roman, this feature is now available via the actions menu as two small gears for tasks, events and gateways.</div>\n<div>\n<br /></div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-g7blQ23YZ5k/Unz9fgP2aTI/AAAAAAAAAJk/ycU_Jk-WAwE/s1600/morph.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-g7blQ23YZ5k/Unz9fgP2aTI/AAAAAAAAAJk/ycU_Jk-WAwE/s1600/morph.png\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Morphing an exclusive gateway via the actions menu</td></tr>\n</tbody></table>\n<div>\nChanging the flow node type performs a semantic check on the model and makes sure that invalid outgoing flows (according to the BPMN 2.0 specification) are removed. You may undo the operation via&nbsp;<span style=\"font-family: Courier New, Courier, monospace;\">CTRL-Z</span><span style=\"font-family: inherit;\">&nbsp;if it has unexpected implications on your model.</span><br />\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div>\n<span style=\"font-family: inherit;\">Have a look on the screen cast shown below to see how the new morphing feature feels like.</span></div>\n<center>\n<div class=\"tr-caption-container\" style=\"display: inline-block; margin: 1em auto; width: auto;\">\n<embed align=\"middle\" allowscriptaccess=\"always\" height=\"381\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" quality=\"high\" src=\"http://camunda.github.com/camunda-modeler/assets/video/morph/morph.swf\" type=\"application/x-shockwave-flash\" width=\"593\"></embed>\n\n<div class=\"tr-caption\">\nMorphing all around over the world.\n</div>\n</div>\n</center>\n<div>\n<br />\n<h3>\nEasier Connection of Elements</h3>\n</div>\n<div>\nWe simplified the connection of objects via the actions menu. In the new version of the Modeler the tool will automatically choose the correct connection type based on the rules defined in BPMN 2.0. That also means that some invalid connections may no longer be drawn. Bear with us, it is all for the sake of better BPMN 2.0 models.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nSee the screen cast below to for a quick overview on the changed look and feel.</div>\n<center>\n<div class=\"tr-caption-container\" style=\"display: inline-block; margin: 1em auto; width: auto;\">\n<embed align=\"middle\" allowscriptaccess=\"always\" height=\"404\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" quality=\"high\" src=\"http://camunda.github.com/camunda-modeler/assets/video/morph/connection.swf\" type=\"application/x-shockwave-flash\" width=\"610\"></embed>\n\n<div class=\"tr-caption\">\nSimple connection drawing. Really.\n</div>\n</div>\n</center>\n<div>\n<h3>\nProperty Panel Improvements</h3>\n</div>\n<div>\nSome other notable changes to the properties panel include (thanks to Kristin and Roman):</div>\n<div>\n<ul>\n<li>targetNamespace editable</li>\n<li>compensation task editable</li>\n<li>message names editable</li>\n<li>async throwing message event editable</li>\n<li>datastores and data objects may be maintained</li>\n<li>loop for activities can be set</li>\n<li>call activity property validation added</li>\n</ul>\n<div>\n<h3>\nBPMN 2.0 Compatibility</h3>\n</div>\n<div>\nTo help mitigating common modeling errors we added further checks to the Modeler for flow and flow node addition, as well as reconnection of flows. These reduce the likelyhood that invalid BPMN 2.0 is the result of a modeling session.&nbsp;</div>\n</div>\n<div>\n<br /></div>\n<div>\n<span style=\"line-height: 15.453125px;\">Check out the&nbsp;</span><a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=13001\">all closed issues</a>&nbsp;for a complete list of changes.</div>\n<div>\n</div>\n<h3>\nBehind the Scenes</h3>\n<div>\nMichael has done a great job on improving our Jubula QA. The others in the team are already working on features for the next modeler version. Expect something exciting!</div>\n<div>\n<br /></div>\n<div>\nFor now, feel free to <a href=\"http://camunda.org/download/modeler/\">try out the new modeler</a>. Is there anything you particularily liked or a feature that is still missing? Tell us on via&nbsp;<a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\">our forums</a>&nbsp;or&nbsp;on&nbsp;<a href=\"https://twitter.com/camundaBPM\">twitter</a>.</div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2797108674214719006/comments"
   },
   "labels": [
    "camunda-modeler",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8449218343592784129",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-10-31T10:28:00+01:00",
   "updated": "2014-11-25T14:07:08+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTIwODI4MDEwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/10/how-to-send-email-when-usertask-is.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8449218343592784129",
   "title": "How to send an email when a usertask is assigned",
   "content": "<blockquote class=\"tr_bq\">\n\"I don't want to watch my camunda Tasklist all day. When there is something to do, I want to get an email containing a link that takes me directly to the respective task!\"</blockquote>\n<br />\nThis is a typical statement by process participants (aka business users). There are numerous possible ways to implement such a requirement in your process application, e.g. using a service task:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/--iV9hw06uTY/UnIBVw1EK5I/AAAAAAAAAFQ/xkJ5FN-l2oY/s1600/verbose.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"107\" src=\"http://1.bp.blogspot.com/--iV9hw06uTY/UnIBVw1EK5I/AAAAAAAAAFQ/xkJ5FN-l2oY/s400/verbose.png\" width=\"400\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<br />\nBut this is not really appropriate, since it makes the process model rather verbose and therefore less valuable for business-IT-alignment.<br />\n<br />\nThe more elegant way is to use a task listener: This very powerful concept is&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-delegation-code-task-listener\">described in detail in the userguide</a>, and the behavior we want is a perfect use case, so let's see how it works!<br />\n<br />\n<a name='more'></a><br />\n<br />\nLet's say we created a simple process application (like in the <a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/developing-process-applications/\">Get Started Tutorial</a>), but this process contains only one usertask. The next step is to created a Task Listener Class like the one below. The important parts are:<br />\n<br />\n<ul>\n<li><span style=\"background-color: orange;\">It implements the Task Listener Interface.</span></li>\n<li><span style=\"background-color: yellow;\">It retrieves the assignee from the Task Object and loads the according User Profile including the assignee's email address</span>.</li>\n<li><span style=\"background-color: lime;\">It creates a simple mail containing a deep link to the task instance.</span></li>\n</ul>\n<br />\npackage org.camunda.bpm.quickstart;<br />\n<br />\nimport java.util.logging.Level;<br />\nimport java.util.logging.Logger;<br />\n<br />\n<span style=\"background-color: lime;\">import org.apache.commons.mail.Email;</span><br />\n<span style=\"background-color: lime;\">import org.apache.commons.mail.SimpleEmail;</span><br />\n<span style=\"background-color: yellow;\">import org.camunda.bpm.engine.IdentityService</span>;<br />\n<span style=\"background-color: orange;\">import org.camunda.bpm.engine.delegate.DelegateTask;</span><br />\n<span style=\"background-color: orange;\">import org.camunda.bpm.engine.delegate.TaskListener;</span><br />\n<span style=\"background-color: yellow;\">import org.camunda.bpm.engine.identity.User;</span><br />\nimport org.camunda.bpm.engine.impl.context.Context;<br />\n<br />\n<span style=\"background-color: orange;\">public class TaskAssignmentListener implements TaskListener</span> {<br />\n<br />\n&nbsp;<span style=\"background-color: lime;\"> // TODO: Set Mail Server Properties</span><br />\n<span style=\"background-color: lime;\">&nbsp; private static final String HOST = \"mail.example.org\";</span><br />\n<span style=\"background-color: lime;\">&nbsp; private static final String USER = \"admin@example.org\";</span><br />\n<span style=\"background-color: lime;\">&nbsp; private static final String PWD = \"toomanysecrets\";</span><br />\n<br />\n&nbsp; private final static Logger LOGGER = Logger.getLogger(TaskAssignmentListener.class.getName());<br />\n<br />\n<span style=\"background-color: orange;\">&nbsp; public void notify(DelegateTask delegateTask) {</span><br />\n<br />\n&nbsp; &nbsp; <span style=\"background-color: yellow;\">String assignee = delegateTask.getAssignee();</span><br />\n&nbsp; &nbsp; <span style=\"background-color: lime;\">String taskId = delegateTask.getId();</span><br />\n<br />\n&nbsp; &nbsp; if (assignee != null) {<br />\n&nbsp; &nbsp; <br />\n&nbsp; &nbsp; &nbsp; <span style=\"background-color: yellow;\">// Get User Profile from User Management</span><br />\n<span style=\"background-color: yellow;\">&nbsp; &nbsp; &nbsp; IdentityService identityService = Context.getProcessEngineConfiguration().getIdentityService();</span><br />\n<span style=\"background-color: yellow;\">&nbsp; &nbsp; &nbsp; User user = identityService.createUserQuery().userId(assignee).singleResult();</span><br />\n<br />\n&nbsp; &nbsp; &nbsp; if (user != null) {<br />\n&nbsp; &nbsp; &nbsp; <br />\n&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"background-color: yellow;\"> // Get Email Address from User Profile</span><br />\n<span style=\"background-color: yellow;\">&nbsp; &nbsp; &nbsp; &nbsp; String recipient = user.getEmail();</span><br />\n&nbsp; &nbsp; &nbsp; <br />\n&nbsp; &nbsp; &nbsp; &nbsp; if (recipient != null &amp;&amp; !recipient.isEmpty()) {<br />\n<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"background-color: lime;\"> Email email = new SimpleEmail();</span><br />\n<span style=\"background-color: lime;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; email.setHostName(HOST);</span><br />\n<span style=\"background-color: lime;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; email.setAuthentication(USER, PWD)</span>;<br />\n<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"background-color: lime;\">&nbsp; email.setFrom(\"noreply@camunda.org\");</span><br />\n<span style=\"background-color: lime;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; email.setSubject(\"Task assigned: \" + delegateTask.getName());</span><br />\n<span style=\"background-color: lime;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; email.setMsg(\"Please complete: http://localhost:8080/camunda/app/tasklist/default/#/task/\" + taskId);</span><br />\n<span style=\"background-color: lime;\"><br /></span>\n<span style=\"background-color: lime;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; email.addTo(recipient);</span><br />\n<span style=\"background-color: lime;\"><br /></span>\n<span style=\"background-color: lime;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; email.send();</span><br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LOGGER.info(\"Task Assignment Email successfully sent to user '\" + assignee + \"' with address '\" + recipient + \"'.\"); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />\n<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LOGGER.log(Level.WARNING, \"Could not send email to assignee\", e);<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n<br />\n&nbsp; &nbsp; &nbsp; &nbsp; } else {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LOGGER.warning(\"Not sending email to user \" + assignee + \"', user has no email address.\");<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n<br />\n&nbsp; &nbsp; &nbsp; } else {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; LOGGER.warning(\"Not sending email to user \" + assignee + \"', user is not enrolled with identity service.\");<br />\n&nbsp; &nbsp; &nbsp; }<br />\n<br />\n&nbsp; &nbsp; }<br />\n<br />\n&nbsp; }<br />\n<br />\n}<br />\n<br />\nThe last step is to assign the class as a task listener to the usertask in the process model. As you can see below, the task listener will be executed when the usertask has been assigned:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-GqrPGJm8PfY/UnIBcp-3X3I/AAAAAAAAAFc/x6HULzEyitg/s1600/listener.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"298\" src=\"http://1.bp.blogspot.com/-GqrPGJm8PfY/UnIBcp-3X3I/AAAAAAAAAFc/x6HULzEyitg/s640/listener.png\" width=\"640\" /></a></div>\n<br />\n<br />\nAnd that's about it! If you want to see an example ready to run, just check out the <a href=\"https://github.com/camunda/camunda-quickstarts/tree/master/usertask/task-assignment-email\">Task Assignment Email Quickstart</a>.<br />\n<br />\nFrom a user perspective, it will look like this:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<br />\n<object class=\"BLOGGER-youtube-video\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" data-thumbnail-src=\"http://i1.ytimg.com/vi/XLEb3R2Nm5k/0.jpg\" height=\"266\" width=\"320\"><param name=\"movie\" value=\"http://www.youtube.com/v/XLEb3R2Nm5k?version=3&f=user_uploads&c=google-webdrive-0&app=youtube_gdata\" /><param name=\"bgcolor\" value=\"#FFFFFF\" /><param name=\"allowFullScreen\" value=\"true\" /><embed width=\"320\" height=\"266\"  src=\"http://www.youtube.com/v/XLEb3R2Nm5k?version=3&f=user_uploads&c=google-webdrive-0&app=youtube_gdata\" type=\"application/x-shockwave-flash\" allowfullscreen=\"true\"></embed></object><br />\n<br />\nHave fun with camunda :)<br />\n<br />",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "8",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8449218343592784129/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3442948350035317879",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-10-23T12:05:00+02:00",
   "updated": "2014-12-15T17:25:07+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4NjYwNzA3OTkyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/10/what-wonderful-community-day-in-prague.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3442948350035317879",
   "title": "What a wonderful community day in Prague",
   "content": "<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-eaHq26kz2j8/UmZzUedPaRI/AAAAAAAAAJI/AUH3kL6Rt-4/s1600/CIMG0680.JPG\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-eaHq26kz2j8/UmZzUedPaRI/AAAAAAAAAJI/AUH3kL6Rt-4/s320/CIMG0680.JPG\" height=\"240\" width=\"320\" /></a></div>\nLast Friday we had our first <b><span style=\"font-size: large;\"><a href=\"http://www.bpm-guide.de/2013/07/22/prague-history-beer-and-%E2%80%A6camunda-bpm/\" target=\"_blank\">camunda BPM community day</a></span></b>! It was really awesome! Thanks everybody who joined. I am really impressed that we could organize that so close after the 7.0 release and so many people already traveled to Prague just for us. I can just repeat myself: AWESOME!<br />\n<br />\nToday I want to share some <b>impressions </b>and <b>slides </b>with you - we recorded the sessions and hope we will get <b>videos </b>online soon as well.<br />\n<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<a name='more'></a><br />\n<b>Introduction &amp; Vision</b><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-aODm8_mAwzs/UmZzSTQb33I/AAAAAAAAAI8/1EdPo-GW4ak/s1600/CIMG0742.JPG\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-aODm8_mAwzs/UmZzSTQb33I/AAAAAAAAAI8/1EdPo-GW4ak/s320/CIMG0742.JPG\" height=\"240\" width=\"320\" /></a></div>\nAfter welcoming everybody Daniel talked about camunda BPM and the technical vision, which is about to empower developers to build awesome BPM applications. He briefly discussed the improved performance in 7.0 and I saw a lot of people nodding when Daniel talked about HUGE history data when running big scenarios and got good feedback about the solution strategies he sketched. He also explained why it is essential to be an Open Source framework for our vision.<br />\n<br />\n<a href=\"http://de.slideshare.net/camunda/community-day-2013-daniel-daniel-technical-vision\" target=\"_blank\">SLIDES</a><br />\n<br />\n<b>Latest and greatest from the dev team</b><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-WkXJeb1viIU/UmZzVc2VB4I/AAAAAAAAAJg/wFA2FdL8LoQ/s1600/CIMG0760.JPG\" imageanchor=\"1\" style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-WkXJeb1viIU/UmZzVc2VB4I/AAAAAAAAAJg/wFA2FdL8LoQ/s320/CIMG0760.JPG\" height=\"240\" width=\"320\" /></a></div>\nAfterwards Nico talked about the latest news from the development team. He focused on the user interface with camunda <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\" target=\"_blank\">tasklist</a>, <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\" target=\"_blank\">cockpit</a>, <a href=\"https://github.com/camunda/camunda-bpmn.js/\">camunda-bpmn.js</a> and last but not least the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit-plugins\">plugin-infrastructure</a>. Yeah - you see right - he developed a <a href=\"https://github.com/Nikku/camunda-bpm-community-day-2013\">Macgyver Plugin</a>&nbsp;for cockpit. That is really awesome :-)<br />\n<br />\n<a href=\"https://speakerdeck.com/nikku/camunda-community-day-2013-latest-and-greatest-on-the-webtool-front\" target=\"_blank\">SLIDES</a><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<b>customer experience report: 1&amp;1 Internet AG</b><br />\n<b><br /></b>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-X7I4s6X3h6o/UmZzVyxZ5SI/AAAAAAAAAJk/C-TYfHcBNjE/s1600/CIMG0783.JPG\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-X7I4s6X3h6o/UmZzVyxZ5SI/AAAAAAAAAJk/C-TYfHcBNjE/s320/CIMG0783.JPG\" height=\"240\" width=\"320\" /></a></div>\nA highlight of the day was the talk from Mehmet Sürü from 1&amp;1, a leading telecommunication provider at least in Germany. And hey - they already have modeled <b>over 5.500 processes in BPMN</b> - wow! He explained their learning curve, leading from SOA to BPM (because in processes not services lie the real value) and technologically speaking from a platform composed of JBoss AS 4 +&nbsp;jBPM 3 to JBoss AS 7 +&nbsp;camunda BPM 7. He also talked about why Open Source, Community and Contributions are vital for their core \"Service +&nbsp;Process Platform\". And camunda BPM is already in production for a couple of processes at 1&amp;1 - great to hear!<br />\n<br />\n<a href=\"http://de.slideshare.net/camunda/2013-community-day-1and1-experience-report\">SLIDES</a><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<b>Tales from Consulting</b><br />\n<br />\n<a href=\"http://2.bp.blogspot.com/-cc51_W362-4/UmZzYUhRe-I/AAAAAAAAAKA/lJ-NkbWuMws/s1600/CIMG0787.JPG\" imageanchor=\"1\" style=\"clear: right; display: inline !important; float: right; margin-bottom: 1em; margin-left: 1em; text-align: center;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-cc51_W362-4/UmZzYUhRe-I/AAAAAAAAAKA/lJ-NkbWuMws/s320/CIMG0787.JPG\" height=\"240\" width=\"320\" /></a>Falko and me talked about some experiences from our consulting work at various customers using BPMN 2.0 and camunda BPM. We talked about the online working group best practices (see our <a href=\"http://www.camunda.org/community/meetings/register.html?id=22\" target=\"_blank\">next meeting</a>), some <a href=\"http://docs.camunda.org/latest/real-life/how-to/\">results we already got</a>, versioning of processes and process applications, <a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/liferay/\">Liferay Portal Integration</a>, asynchronous continuation, heterogeneous cluster support and the power of it, JMS usage, Business-IT-Alignment, Handling of Incidents and own cockpit Plugins and some small but really helpful stuff in real life - like the <a href=\"https://github.com/camunda/camunda-consulting/tree/master/snippets/task-name-beautifier\">task name beautifier</a>. Hope not too much content in too short time.<br />\n<br />\n<a href=\"http://de.slideshare.net/camunda/community-day-2013-consulting-talks-about-camunda-bpm-best-practices\" target=\"_blank\">SLIDES</a><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<b>Contributors</b><br />\n<br />\nWe already have a quite active ecosystem of contributors. Two contributions were highlighted in Prague:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-nGYw51sfGrE/UmZzbR2J-3I/AAAAAAAAAKc/M45ZQ92boac/s1600/CIMG0803.JPG\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-nGYw51sfGrE/UmZzbR2J-3I/AAAAAAAAAKc/M45ZQ92boac/s320/CIMG0803.JPG\" height=\"320\" width=\"240\" /></a></div>\nMartin Schimak (<a href=\"http://plexiti.com/\">Plexiti</a>): Martin kicked-off and worked on <a href=\"https://github.com/camunda/camunda-bpm-testing\">camunda-bpm-testing</a> (together with a couple of people in the meanwhile). We showed us the variety of topics already covered: fluent API, behavior driven development, mocking, ...<br />\n<br />\n<a href=\"https://speakerdeck.com/martinschimak/camunda-bpm-testing\" target=\"_blank\">SLIDES</a>&nbsp;(and he blogged about the community day as well:&nbsp;<a href=\"http://plexiti.com/news/2013/10/camunda-community-day\">camunda.org Community Day 2013 in Prag!</a>)<br />\n<br />\nAs second contribution <a href=\"http://rafael.cordones.me/\">Rafael Cordones</a> wanted to present <a href=\"https://github.com/camunda/camunda-bpm-camel\">camunda-bpm-camel</a>, the integration with <a href=\"http://camel.apache.org/\">Apache Camel</a>. As he had to cancel the visit in short notice I quickly introduced that. Cool to have a couple of people in the audience already using Camel!<br />\n<br />\n<a href=\"http://de.slideshare.net/camunda/community-day-2013-camundabpmcamel\" target=\"_blank\">SLIDES</a><br />\n<br />\n<br />\n<b><br /></b>\n<b>How do we work, Roadmap and Feedback</b><br />\n<br />\nThe rest of the afternoon was packed with some demonstrations about how we work (<a href=\"https://app.camunda.com/jira/\">JIRA</a>, Kanban-Board, <a href=\"https://github.com/camunda\">GitHub</a>, Pull-Requests, <a href=\"https://github.com/camunda/camunda.org/blob/master/CONTRIBUTION_GUIDELINES.md\">Contributions-Guidelines</a>, <a href=\"http://camunda.org/community/forum.html\">Forum</a> and so on). We discussed the current roadmap and plans - and we got pretty good feedback from the community - that further confirmed that we are on the right track. And the most amazing thing: <b>There were no issues raised which is urgent or problematic</b> - so camunda BPM 7.0 was definitely a step in the right direction. That was the right time to start partying (see below) :-)<br />\n<br />\n<b>Which city to go next time?</b><br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-HQtrQY2Y6CY/UmZzXAxB7oI/AAAAAAAAAJw/h11hpVtbSv8/s1600/CIMG0790.JPG\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-HQtrQY2Y6CY/UmZzXAxB7oI/AAAAAAAAAJw/h11hpVtbSv8/s320/CIMG0790.JPG\" height=\"320\" width=\"240\" /></a></div>\nThe venue this year was fantastic. Prague is a wonderful city really worth visiting. The Hotel was really nice, food was plenty available (no lie that they had \"unlimited supply\") and even the weather was perfect!<br />\n<br />\nHard to beat next year - but we can try. If you have a recommendation for a city, which is: easy to reach from different European cities, not too expensive and nice: <a href=\"mailto:community@camunda.com\">Let us know!</a><br />\n<br />\n<b><br /></b>\n<b><br /></b>\n<b><br /></b>\n<b><br /></b>\n<b><br /></b>\n<b><br /></b>\n<b><br /></b>\n<b><br /></b>\n<b>Some more impressions</b><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-LK9_pN4Baac/UmZzTwNOYxI/AAAAAAAAAJU/by2VzgNBhVo/s1600/CIMG0753.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-LK9_pN4Baac/UmZzTwNOYxI/AAAAAAAAAJU/by2VzgNBhVo/s320/CIMG0753.JPG\" height=\"320\" width=\"240\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Last minute slides ;-)</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-l-x7_hux0tg/UmZzXqoYzNI/AAAAAAAAAJ4/K-DZdSCzSK4/s1600/CIMG0794.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-l-x7_hux0tg/UmZzXqoYzNI/AAAAAAAAAJ4/K-DZdSCzSK4/s320/CIMG0794.JPG\" height=\"240\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">One feature was developed live (<a href=\"https://app.camunda.com/jira/browse/CAM-1380\" target=\"_blank\">CAM-1380</a>)!</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-abj7j9R7yQI/UmZzYiG7n8I/AAAAAAAAAKI/iYfx2n9f7kE/s1600/CIMG0795.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-abj7j9R7yQI/UmZzYiG7n8I/AAAAAAAAAKI/iYfx2n9f7kE/s320/CIMG0795.JPG\" height=\"240\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">It looks like even Daniel learned something.</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-AQNjJsgD9Xc/UmZzZSJBv-I/AAAAAAAAAKM/g4mVgcA05fE/s1600/CIMG0797.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-AQNjJsgD9Xc/UmZzZSJBv-I/AAAAAAAAAKM/g4mVgcA05fE/s320/CIMG0797.JPG\" height=\"240\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Merging pull requests was kind of fun :-)</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-VJ41Ec5Ugi8/UmZza0nuJQI/AAAAAAAAAKg/DiRNnIJ7iHc/s1600/CIMG0817.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-VJ41Ec5Ugi8/UmZza0nuJQI/AAAAAAAAAKg/DiRNnIJ7iHc/s320/CIMG0817.JPG\" height=\"240\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Hard to imagine a community day without beer - good to be in Czech Republic.&nbsp;</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-zyrjq4UyiJ8/UmZzdYnBuuI/AAAAAAAAAK4/2Y4BYN2ZTNI/s1600/CIMG0821.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-zyrjq4UyiJ8/UmZzdYnBuuI/AAAAAAAAAK4/2Y4BYN2ZTNI/s320/CIMG0821.JPG\" height=\"240\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">The real questions about 1&amp;1 platform came later on.</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-OkCHmb-X2zs/UmZzdMRm18I/AAAAAAAAAK0/Eeyhr7zKZpc/s1600/CIMG0828.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-OkCHmb-X2zs/UmZzdMRm18I/AAAAAAAAAK0/Eeyhr7zKZpc/s320/CIMG0828.JPG\" height=\"240\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Finally we found a pub where we got space, we simply were too much people...</td></tr>\n</tbody></table>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://2.bp.blogspot.com/-w24J2VuOXBg/UmZzd5oyEjI/AAAAAAAAAK8/HTOpSEI9se4/s1600/CIMG0839.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-w24J2VuOXBg/UmZzd5oyEjI/AAAAAAAAAK8/HTOpSEI9se4/s320/CIMG0839.JPG\" height=\"320\" width=\"240\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">...and it seems that we even managed to drink one barrel of beer. Wow!</td></tr>\n</tbody></table>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<b>Pork me on GitHub?</b><br />\n<br />\nLast but not least we had a really - really good idea (imagine that we liked it somewhere around midnight ;-)). As most of the people ate some fresh grilled pork in the evening we came up the new badge idea: pork me on GitHub. Actually no idea what it means - but maybe better not to think about it:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-ro_QFlREH4E/UmaHHPZ5o6I/AAAAAAAAALI/Fi98WbAGf1o/s1600/pork-me-on-github.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-ro_QFlREH4E/UmaHHPZ5o6I/AAAAAAAAALI/Fi98WbAGf1o/s320/pork-me-on-github.png\" height=\"320\" width=\"218\" /></a></div>\n<br />\n<br />\nBut as vegetarian I have to add that Prague offered a good choice of vegetarian and vegan restaurants - so I could try a vegetarian <b>and </b>a vegan goulash. And both were really perfect! This is how the future must look like :-)<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-JnIn6nNQV3A/UmZzR0jw5VI/AAAAAAAAAI4/_umn3OVOj-0/s1600/CIMG0690.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-JnIn6nNQV3A/UmZzR0jw5VI/AAAAAAAAAI4/_umn3OVOj-0/s320/CIMG0690.JPG\" height=\"320\" width=\"240\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">You can even enjoy vegan pancake - gorgeous.</td></tr>\n</tbody></table>\n<br />\n<br />",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3442948350035317879/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "4839956377601871317",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-10-15T12:07:00+02:00",
   "updated": "2014-11-26T10:42:28+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTk0OTQ4NzM0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/10/camunda-modeler-210-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4839956377601871317",
   "title": "camunda Modeler 2.1.0 released",
   "content": "Today we relased a new version of the camunda Modeler. It provides better property editing support for BPMN 2.0 and camunda BPM properties, improvements in pool and lane handling and fixes a number of important bugs.<br />\n<br />\n<a name='more'></a><br />\n<h3>\nProperty Editing Support</h3>\nKristin and Roman extended the property panel to achieve partity with new engine extensions and features introduced in camunda BPM 7.0:<br />\n<br />\n<ul>\n<li>On throwing message events and send tasks service task engine extensions may be edited</li>\n<li>On call activities <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#subprocesses-call-activity-passing-business-key\">passing the business key</a> as well as <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#subprocesses-call-activity-passing-variables\">all variables</a> may be edited</li>\n<li>On call activities the <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-process-versioning-which-version-will-be-used\">called element binding and version</a> may be specified</li>\n<li>On start events the form key may be edited independent of the event definition</li>\n</ul>\n<div>\nIn addition, documentation may now be maintained for all BPMN 2.0 elements.</div>\n<br />\n<h3>\nModeling enhancements</h3>\n<div>\nTo enhance the modeling experience I worked on an improved pool and lane handling</div>\n<div>\n<ul>\n<li>Pools and lanes may not be shrinked below their children bounds</li>\n<li>Bendpoints are properly update upon pool or lane resize</li>\n<li>Sufficient space is added on the diagram when adding a new pool</li>\n</ul>\nFurthermore we fixed the boundary event attachment on attached element resize.&nbsp;</div>\n<br />\n<h3>\nBPMN 2.0 Compatibility</h3>\n<div>\nDaniel, Roman and&nbsp;<span style=\"background-color: white;\">I</span>&nbsp;improved the interoperability of the modeler by fixing a number of diagram import and export related bugs:</div>\n<div>\n<br />\n<ul>\n<li>No more<span style=\"font-family: inherit;\">&nbsp;</span><span style=\"background-color: white; line-height: 15.454545021057129px;\"><span style=\"font-family: Courier New, Courier, monospace; font-size: 12.727272033691406px;\">xsi:type=“xsd:anyType\"</span><span style=\"font-family: inherit;\"> is added to extension elements on export</span></span></li>\n<li><span style=\"background-color: white; line-height: 15.454545021057129px;\"><span style=\"font-family: inherit;\">Documentation is exported correctly without reordering</span></span></li>\n<li><span style=\"background-color: white; line-height: 15.454545021057129px;\"><span style=\"font-family: inherit;\">Data object references are supported on import and are correctly created by the modeler</span></span></li>\n<li><span style=\"background-color: white; line-height: 15.454545021057129px;\"><span style=\"font-family: inherit;\">Diagrams containing invalid DI references to data objects are automatically fixed during import</span></span></li>\n</ul>\n<div>\n<span style=\"line-height: 15.453125px;\"><br /></span></div>\n<span style=\"line-height: 15.453125px;\">Finally, we switched from <span style=\"font-family: Courier New, Courier, monospace;\">activiti</span><span style=\"font-family: inherit;\"> t</span>o <span style=\"font-family: Courier New, Courier, monospace;\">camunda</span> as the default namespace prefix for engine attributes.&nbsp;</span><br />\n<div>\n<span style=\"line-height: 15.453125px;\"><br /></span></div>\n<div>\n<span style=\"line-height: 15.453125px;\">Check out the&nbsp;</span><a href=\"https://github.com/camunda/camunda-modeler/blob/master/CHANGELOG.md#2.1.0\">release notes</a>&nbsp;for a complete list of changes.</div>\n<br />\n<h3>\nBehind the Scenes</h3>\n</div>\n<div>\nChristian and Roman integrated the modeler tests into our continuous integration. As a result the ~500 modeler tests run now continuously and no test covered feature will accidently be broken again.</div>\n<div>\n<br /></div>\n<div>\nWhat is lying ahead of us? For the next modeler release we look into Eclipse Kepler support and more modeling improvements.</div>\n<div>\n<br /></div>\n<div>\nFeel free to <a href=\"http://camunda.org/download/modeler/\">try out the new modeler</a> and give us feedback via <a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\">our forums</a> or <a href=\"https://twitter.com/camundaBPM\">twitter</a>.</div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4839956377601871317/comments"
   },
   "labels": [
    "camunda-modeler",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7156179343015771006",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-10-07T11:01:00+02:00",
   "updated": "2014-11-26T10:21:22+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTkzNjgyODQ5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/10/camunda-bpm-power-to-embedded-taskforms.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7156179343015771006",
   "title": "camunda BPM: Power to Embedded Taskforms",
   "content": "For everyone out there using <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist-task-forms-embedded-task-forms\">embedded task forms</a>&nbsp;in the&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\">camunda tasklist</a>&nbsp;there is great news:<br />\nThe forms are getting way more powerful.<br />\n<br />\nThe upcoming alpha of camunda 7.1 introduces two extensions for embedded task forms: Client side form validation and form extensions via JavaScript.<br />\n<a name='more'></a><br />\n<h3>\nForm Validation</h3>\n<div>\n<a href=\"http://docs.angularjs.org/api/ng.directive:input\">Validation directives</a>&nbsp;provided by&nbsp;<a href=\"http://angularjs.org/\">AngularJS</a>&nbsp;may now be attached to form fields to activate simple client-side validation constraints for them.<br />\n<br />\nThe following form field will only accept one of the strings <span style=\"font-family: Courier New, Courier, monospace;\">demo</span>, <span style=\"font-family: Courier New, Courier, monospace;\">john</span>, <span style=\"font-family: Courier New, Courier, monospace;\">mary</span><span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"> </span>or <span style=\"font-family: Courier New, Courier, monospace;\">peter</span>&nbsp;due to the defined pattern:<br />\n<br /></div>\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 1.428571429; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\">&lt;input form-field type=\"string\" name=\"assignee\" </code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"><span style=\"color: #bf9000;\">ng-pattern=\"/^(demo|john|mary|peter)$<span id=\"goog_340102718\"></span><span id=\"goog_340102719\"></span>/\"</span></code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"> /&gt;</code></pre>\n<br />\nIf a user enters an invalid value in a form field the field will be marked as invalid. Additionally the complete task button will be disabled and the form may not be submitted.<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-T89lLYPYfyc/UlJnP-lEAWI/AAAAAAAAAJU/FyshaXHFadg/s1600/form-validated.png\" imageanchor=\"1\" style=\"padding: 1em;\"><img border=\"0\" height=\"241\" src=\"http://3.bp.blogspot.com/-T89lLYPYfyc/UlJnP-lEAWI/AAAAAAAAAJU/FyshaXHFadg/s400/form-validated.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">An invalid form</td></tr>\n</tbody></table>\nThe validation state of both the form as well as single form fields may be queried through the variable <span style=\"font-family: Courier New, Courier, monospace;\">variablesForm </span>that represents the form inside the scope of an embedded task form.<br />\n<div>\n<br /></div>\n<div>\nThe following snipped is a valid form markup that renders the message <i>Your form contains errors!</i><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div>\nwhen the form itself is invalid. In addition, it renders a red&nbsp;<i>Not a valid user!</i> message to the user for specific validation problems of the assignee form field:</div>\n<div>\n<br /></div>\n<div>\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 1.428571429; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\">&lt;p </code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"><span style=\"color: #bf9000;\">ng-if=\"variablesForm.$invalid\"</span></code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\">&gt;\n  Your form contains errors!\n&lt;/p&gt;\n&lt;p </code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"><span style=\"color: #bf9000;\">ng-if=\"variablesForm.assignee.$invalid\"</span></code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"> style=\"color: red\"&gt;\n  Not a valid user!\n&lt;/p&gt;</code></pre>\n<br />\n<h3>\nJavaScript Form Extensions</h3>\n</div>\n</div>\n<div>\nMore complex validations may be performed using form script - JavaScript embedded into task forms. form script is injected into the task form context via a special <span style=\"font-family: Courier New, Courier, monospace;\">&lt;script form-script type=\"text/form-script\" /&gt;</span> tag:</div>\n<div>\n<br /></div>\n<div>\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 1.428571429; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\">&lt;input form-field type=\"string\" name=\"approver\" <span style=\"color: #bf9000;\">ng-change=\"approverChanged()\"</span> /&gt;\n\n&lt;script form-script type=\"text/form-script\"&gt;\n  <span style=\"color: #bf9000;\">$scope.</span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\"><span style=\"color: #bf9000;\">approverChanged</span> </span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">= function(e) {</span>\n    var formField = $scope.variablesForm.assignee, \n        value = formField.$modelValue;\n        allowedNames = ['demo', 'john', 'mary', 'peter'];\n\n    // value must be contained in allowed names\n    if (allowedNames.indexOf(value) == -1) {\n      value.$setValidity('validAssignee', false);\n    } else {\n      value.$setValidity('<span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">validAssignee</span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">', true);</span>\n    }\n  };\n&lt;/script&gt;</code></pre>\n<div>\n<br /></div>\nThe above form script performs the same validation as the <span style=\"font-family: Courier New, Courier, monospace;\">ng-pattern</span> directive but via JavaScript. To do that it registers a change listener on the form input that is attached to the forms <span style=\"font-family: Courier New, Courier, monospace;\">$scope</span> inside the form script.</div>\n<div>\n<br /></div>\n<div>\nFor even more elaborated use cases application services such as <span style=\"font-family: Courier New, Courier, monospace;\">$http</span> may be injected into the form script. using the <span style=\"font-family: Courier New, Courier, monospace;\">inject</span>&nbsp;callback. Given the <span style=\"font-family: Courier New, Courier, monospace;\">$http</span> service backend validation may be performed for a form or its attributes:&nbsp;</div>\n<div>\n<br /></div>\n<div>\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgb(204, 204, 204); box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 1.428571429; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\">&lt;script form-script type=\"text/form-script\"&gt;\n\n  </code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"><span style=\"color: #bf9000;\">inject(</span></code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\">[ '$scope', '$http', function($scope, $http) {\n\n    </code><code class=\"lang-html\" style=\"background-color: transparent; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 0px; box-sizing: border-box; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; word-wrap: break-word;\"><span style=\"color: #bf9000;\">$scope.<span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">approverChanged</span></span><span style=\"background-color: transparent; color: black; font-size: inherit; line-height: 1.428571429;\"> </span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">= function(e) {</span><span style=\"color: rgba(0, 0, 0, 0);\">\n     </span> var formField = $scope.variablesForm.<span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">assignee</span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">, </span>\n          value = formField.$modelValue;\n\n      <span style=\"color: #bf9000;\">$http.get(\"...?<span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">assignee</span></span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\"><span style=\"color: #bf9000;\">=\" + value)</span>.success(function(data) {</span>\n        if (data == \"ok\") {\n          value.$setValidity('validAssignee', true);\n        } else {\n          value.$setValidity('<span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">validAssignee</span><span style=\"background-color: transparent; font-size: inherit; line-height: 1.428571429;\">', false);</span>\n        }\n      });\n    };\n  }]<span style=\"color: #bf9000;\">)</span>;\n&lt;/script&gt;</code></pre>\n</div>\n<div>\nFind all of this including an improved <a href=\"http://stage.docs.camunda.org/guides/user-guide/#task-forms\" target=\"_blank\">documentation</a>&nbsp;of embedded task forms in the next camunda BPM alpha release.</div>\n<div>\n<br /></div>\n<div>\nPower to the forms!</div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7156179343015771006/comments"
   },
   "labels": [
    "task forms",
    "tasklist"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "866618097593228695",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-09-25T10:20:00+02:00",
   "updated": "2014-11-26T10:17:53+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTkzNDczNDEwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/09/camunda-bpm-apache-camel-integrating.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/866618097593228695",
   "title": "camunda BPM + Apache Camel: Integrating two Open Source frameworks for a lightweight BPM+SOA infrastructure",
   "content": "<a href=\"http://camel.apache.org/\">Apache Camel</a> is a well known Open Source framework solving a lot of integration problems and implementing the <a href=\"http://www.eaipatterns.com/\">Enterprise Integration Patterns</a>. So combining it with <a href=\"http://camunda.org/\">camunda BPM</a> is a perfect match: solve workflow and BPM requirements with camunda and integration requirements with Camel.<br />\n<br />\nTogether with <a href=\"http://rafael.cordones.me/\">Rafael Cordones</a>&nbsp;we took the existing&nbsp;<a href=\"https://github.com/Activiti/Activiti/tree/master/modules/activiti-camel\">Activiti Camel Module</a>&nbsp;as a basis and did a huge refactoring. For everybody knowing this module I compiled the changes at the end of this article. For everybody else: Lean back and enjoy the show while I quickly walk you through the features. I do this based on our&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-camel\">\"camel use cases\" example</a>&nbsp;which is available on GitHub (by the way - you can discuss this process model on <a href=\"http://camunda.org/share/#/process/f54a4ff9-4cc1-428c-829b-a4002dcdd81f\">camunda share</a>):<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-DT4BSiRQ14c/UkGVzVF04II/AAAAAAAAAHg/qetP2QHJrrc/s1600/use-cases.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-DT4BSiRQ14c/UkGVzVF04II/AAAAAAAAAHg/qetP2QHJrrc/s400/use-cases.png\" height=\"140\" width=\"400\" /></a></div>\n<br />\n<a name='more'></a>The process does not solve any real-life business problem but showcases different use cases:<br />\n<ul>\n<li>Start a process instance when a file is dropped into a folder</li>\n<li>Start a process instance when a new Tweet is shared on Twitter with the term 'camunda' in it</li>\n<li>Call a Camel route (\"Service\") from a <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-service-task\">ServiceTask</a>. This Service \nalways throws an Exception which we catch with a BPMN Error Event.</li>\n<li>Call a Camel route (\"Service\") from a <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-send-task\">SendTask</a>&nbsp;and retrieve the response asynchronous in a following <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-message-events\">Message Event</a>.</li>\n<li>Between all steps there is a <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-user-task\">UserTask</a> so that you can click through the example using <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\">Tasklist</a>.</li>\n</ul>\n<b>The camunda BPM Camel component</b><br />\n<b><br /></b>\nWe developed a <a href=\"http://camel.apache.org/component.html\">Camel component</a> to talk to camunda BPM from Camel. You can easily add this component to your own project as described here:&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-camel\">https://github.com/camunda/camunda-bpm-camel</a>. I currently work on a JBoss AS 7 distribution already containing Camel and this component - which would make it even more easy to get started. But that's for another time. Let's examine what the component can do for you:<br />\n<b><br /></b>\n<b>Start a Process Instance</b><br />\n<br />\nStarting a new process instance is really easy - just call the \"<span style=\"font-family: Courier New, Courier, monospace;\">camunda-bpm:start</span>\" endpoint within your Camel Route and specify which process definition should be used. In the example the <a href=\"http://camel.apache.org/file.html\">File Component</a> is used which can watch a drop folder for new files:<br />\n<br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\">from(\"file://C:/temp/\")</span><br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; &nbsp;.convertBodyTo(String.class) // convert content into String</span><br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; &nbsp;.to(\"camunda-bpm:start?processDefinitionKey=camel-use-cases\");</span><br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\nAs an alternative you can start a process instance by a message (then the message start event is triggered and the process definition has not to be specified). In the example the <a href=\"http://camel.apache.org/twitter.html\">Twitter Component</a> is used polling Twitter for new Tweets with the keyword 'camunda':<br />\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span>\n<span style=\"font-family: Courier New, Courier, monospace;\">from(\"twitter://search?type=polling&amp;delay=5&amp;keywords=camunda&amp;consumerKey=\"...\")</span><span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;</span><br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp;.transform().groovy(\"def map=[:] \\n\" +</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"map['tweet.what'] = request.body.text &nbsp; &nbsp; &nbsp; \\n\" +</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"map['tweet.when'] = request.body.createdAt &nbsp;\\n\" +</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"request.body = map\")</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;.to(\"camunda-bpm:message?messageName=camel.start\");</span><br />\n<br />\nNote that I used a <a href=\"http://camel.apache.org/groovy.html\">Groovy script to transform</a> the data from what I get from Twitter to what I want to have in the process engine. As I am not a Groovy expert I am sure that there is a more elegant solution to do that - but it worked within minutes - so I was happy. Camel supports multiple possibilities to transform data easily .<br />\n<br />\n<b>Call a Camel Route from the Process Instance</b><br />\n<br />\nIn order to call a camel route you have to add a simple expression to your BPMN 2.0 process model:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-loOzH1EakIg/UkGaYWB2ShI/AAAAAAAAAH0/AwKOuHhl7Wk/s1600/serviceTaskCamel.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-loOzH1EakIg/UkGaYWB2ShI/AAAAAAAAAH0/AwKOuHhl7Wk/s320/serviceTaskCamel.png\" height=\"320\" width=\"306\" /></a></div>\n<br />\nIn the background this will create the following XML:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;bpmn2:serviceTask id=\"ServiceTask_1\" name=\"call some service\"</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\"> </span>camunda:expression=\"#{camel.sendTo('direct:syncService')}\" &gt;</span><br />\n<div>\n<br /></div>\nWhich references a Camel route:<br />\n<br />\n<span style=\"font-family: Courier New, Courier, monospace;\">from(\"direct://syncService\")</span><br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; .onException(SampleException.class) // map exception to BPMN error</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; .throwException(new BpmnError(\"camel.error\"))</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; .end()</span><br />\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; .process(new Processor() { &nbsp; &nbsp; &nbsp; &nbsp;</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; @Override</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; public void process(Exchange exchange) throws Exception {</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // always throwing error to demonstrate error event</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;throw new SampleException(\"some error occured in service\");</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span><br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; });</span><br />\n<div>\n<br /></div>\n<div>\nWhat you do in the Camel route is completely up to you and not part of this blog post. What I did in the above route is to always throw an exception (do not consider this best practice ;-)). But this allows me to show how to map any exception a <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-delegation-code-throwing-bpmn-errors-from-delegation-code\">BPMN error</a> which can be <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-error-events\">handled in the BPMN</a> process model. Note that this should only be done in cases of errors you want to model in your process model - see <a href=\"http://docs.camunda.org/latest/real-life/how-to/#concepts-error-handling\">How-To on Error Handling</a> for details.</div>\n<div>\n<br /></div>\n<div>\n<b>Get a response message</b></div>\n<div>\n<br /></div>\n<div>\nCalling the route with the SendTask is the same as with the ServiceTask. But interesting is how to get the response to the process instance waiting in the message event. The following screenshot shows one process instance waiting for the message in cockpit:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-DLKPcPCYl_A/UkGeBFtLoFI/AAAAAAAAAIA/fP29vq88uWQ/s1600/waiting-process-cockpit.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-DLKPcPCYl_A/UkGeBFtLoFI/AAAAAAAAAIA/fP29vq88uWQ/s320/waiting-process-cockpit.png\" height=\"203\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n<div>\nThis is again easy:</div>\n<div>\n<br /></div>\n<div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">from(\"seda:someQueue\")</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; .to(\"camunda-bpm:message?messageName=camel.answer\");&nbsp;</span></div>\n</div>\n<div>\n<br /></div>\n<div>\nThe message name corresponds to the message name in the BPMN 2.0 XML:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-0GVHasEU-kI/UkKZkRgEH1I/AAAAAAAAAIc/RBnUDVhJc88/s1600/messageEvent.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-0GVHasEU-kI/UkKZkRgEH1I/AAAAAAAAAIc/RBnUDVhJc88/s200/messageEvent.png\" height=\"192\" width=\"200\" /></a></div>\n<br />\n<br />\nIn the example expect the property <span style=\"font-family: Courier New, Courier, monospace;\">CamundaBpmProcessInstanceId </span>to be present in the Camel message properties, this is how correlation currently is done. You could hook in some logic in your Route to do correlation/matching yourself, as e.g. shown in the <a href=\"https://github.com/camunda/camunda-consulting/tree/master/showcases/bank-account-opening-camel\">Bank Account Opening Example</a> (this uses by the way a ReceiveTask instead of a Message Event - both is possible):</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-baz9tYfWOCg/UkGfj6uLwwI/AAAAAAAAAIM/_frRpSfBteU/s1600/ReceiveTask.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-baz9tYfWOCg/UkGfj6uLwwI/AAAAAAAAAIM/_frRpSfBteU/s1600/ReceiveTask.png\" /></a></div>\n<div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">from(\"file://\" + postidentFolder)</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; .process(new Processor() {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp;public void process(Exchange exchange) throws Exception {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp;</span><span style=\"font-family: 'Courier New', Courier, monospace;\">// extract key from file name</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;String businessKey =&nbsp;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; exchange.getIn().getHeader(\"CamelFileName\")</span><span style=\"font-family: 'Courier New', Courier, monospace;\">.toString()</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .split(\"-\")[1]</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .substring(0, 4);</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp; &nbsp;exchange.setProperty(CAMUNDA_BPM_BUSINESS_KEY, businessKey);</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &nbsp;}</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; })</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; .to(\"camunda-bpm://message?activityId=wait_for_postident\").</span></div>\n<div>\n<br /></div>\n</div>\n<div>\n<b>Where to get it?</b><br />\n<br />\n<ul>\n<li>The camunda-bpm-camel component and further information can be found on GitHub:&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-camel\">https://github.com/camunda/camunda-bpm-camel</a></li>\n<li>The sources for the example used in this blog post can be found on GitHub:&nbsp;<a href=\"https://github.com/camunda/camunda-consulting/tree/master/showcases/camel-use-cases\">https://github.com/camunda/camunda-consulting/tree/master/showcases/camel-use-cases</a></li>\n<li>A business example (opening a bank account) using Camel can found on GitHub as well:&nbsp;<a href=\"https://github.com/camunda/camunda-consulting/tree/master/showcases/bank-account-opening-camel\">https://github.com/camunda/camunda-consulting/tree/master/showcases/bank-account-opening-camel</a></li>\n</ul>\nNote that camunda-bpm-camel is still in incubation phase!<br />\n<ul>\n</ul>\n</div>\n<div>\n<b>Why is it cool?</b><br />\n<b><br /></b>\nPersonally I like Apache Camel especially because it introduced a common language and a well adopted Component concept having a simple solution available for a lot of integration problems out there. File handling, Streaming, huge CSV files processes in parallel? No problem with Camel. Twitter, Salesforce, Hadoop or whatever? There might be a component, see this amazing list here: <a href=\"https://github.com/apache/camel/tree/master/components\">https://github.com/apache/camel/tree/master/components</a>.<br />\n<br />\nCamel is no rocket-science. It is not a complex ESB. It is a down-to-earth Java framework making your live easier and reducing the amount of code for quite some problems. The philosophy is matching pretty well with ours. Together with camunda BPM you can already built some sophisticated BPM/SOA solution.<br />\n<b><br /></b>\n<b>Further topics</b></div>\n<div>\n<ul>\n<li><b>Correlation:&nbsp;</b>We have some <a href=\"http://docs.camunda.org/latest/api-references/javadoc/org/camunda/bpm/engine/impl/runtime/CorrelationHandler.html\">Correlation Mechanism</a> already built in camunda BPM. So we want to make that available in the Camel integration as well. Currently we discuss how this can be done best - basically which parameters to set in a Camel message in order to get that working. Join <a href=\"http://camunda.org/community/forum.html\">our forum</a> to add your opinion!</li>\n<li><b>Retry Mechanism</b>: Camel has some retry strategies if some external service is unavailable. camunda BPM has own <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor-failed-jobs\">retry strategies</a> as well. I recommend to use retrying from camunda normally - as this makes monitoring easier. But I am happy to get feedback.</li>\n</ul>\n</div>\n<div>\n<b>Ongoing discussions and next steps</b></div>\n<div>\n<b><br /></b></div>\n<div>\nIf you follow the forum you will notice that we are still discussing. Join the discussion if you like! To give you an impression - there are a couple of things we ask ourselves:</div>\n<div>\n<ul>\n<li>I would like to have Camel installed as a JBoss module and the route deployed within a Process Application. This should be easy doable - but currently we lack time for it.</li>\n<li>Should we rely on camel-cdi? As this has <a href=\"https://groups.google.com/forum/#!searchin/camunda-bpm-users/camel-cdi/camunda-bpm-users/brILmqj4Xrw/00Jg9H0vaZoJ\">some drawbacks</a>.&nbsp;</li>\n<li>Properties or Header for CamundaBpm properties? Currently we use <a href=\"http://camel.apache.org/properties.html\" target=\"_blank\">properties</a>.&nbsp;Properties are hanging off the Exchange and not off the messages that flow through a route. A processor in a route <i>can</i> copy the headers but may not do it. Properties are maintained all through the route. But normally headers are used. Maybe we should switch?</li>\n<li>Is it interesting to get a <span style=\"font-family: Courier New, Courier, monospace;\">camunda-bpm://events?filter=…</span> consumer endpoint that captures Audit Log events from the engine and send them down the route?&nbsp;</li>\n<li>Should we support multiple process engines? Ho do we expose this on the camel API? As a parameter (<span style=\"font-family: Courier New, Courier, monospace;\">camunda-bpm://start?processEngine=...</span>)?</li>\n</ul>\n</div>\n<br />\n<b>Changes compared to Activiti Camel Module</b><br />\n<br />\nAnd for everybody familiar with the Activiti Camel Module it might be interesting what we changed. In a nutshell:<br />\n<ul>\n<li>Removed the CamelBehavior (we prefer working with expressions, see examples above).</li>\n<li>Add support for Message Events (not only ReceiveTask).</li>\n<li>Separated the codebase&nbsp;to not force Spring dependencies when using CDI and vice-versa:</li>\n<ul>\n<li><a href=\"https://github.com/camunda/camunda-bpm-camel/tree/master/camunda-bpm-camel-common\">camunda-bpm-camel-common</a></li>\n<li><a href=\"https://github.com/camunda/camunda-bpm-camel/tree/master/camunda-bpm-camel-spring\">camunda-bpm-camel-spring</a></li>\n<li><a href=\"https://github.com/camunda/camunda-bpm-camel/tree/master/camunda-bpm-camel-cdi\">camunda-bpm-camel-cdi</a></li>\n</ul>\n</ul>\n<ul>\n<li>Refactored the core code base to make it easier understandable.</li>\n<li>Added examples.</li>\n</ul>",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "3",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/866618097593228695/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2561933064780664052",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-09-13T16:28:00+02:00",
   "updated": "2014-03-20T15:29:50+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzk1MzI1NzkwOTMyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/09/camunda-share-discuss-your-bpmn-20.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2561933064780664052",
   "title": "camunda share: Discuss your BPMN 2.0 process model in the cloud",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-MvXUG5rgDhg/UjL8aVA19FI/AAAAAAAAAGc/LZzu6Ijyt9M/s1600/screenshot.png\" imageanchor=\"1\" style=\"clear: left; display: inline !important; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-MvXUG5rgDhg/UjL8aVA19FI/AAAAAAAAAGc/LZzu6Ijyt9M/s200/screenshot.png\" height=\"148\" width=\"200\" /></a></div>\nOnce a year the whole camunda team does a ShipIt-Day (<a href=\"https://www.atlassian.com/de/company/about/shipit\">inspired by Atlassian</a>) - developing something awesome within 24 hours. This year, <a href=\"http://camunda.org/community/team.html\">Kristin, Falko and me</a> did \"camunda share\" - a web application in the cloud to share and discuss BPMN 2.0 process models. And we shipped it! It is live.<br />\n<br />\nTry it today: <a href=\"http://camunda.org/share/\">http://camunda.org/share/</a><br />\n<br />\n<br />\n<a name='more'></a><b>Why camunda share?</b><br />\n<br />\nWe often discuss with colleagues, partners or customers about process models. We often send around annotated PDF files via email. We were tired of it and wanted to have something like&nbsp;<a href=\"http://doodle.com/\" target=\"_blank\">doodle</a>&nbsp;for this. And with <a href=\"http://www.camunda.org/\">camunda BPM</a> and especially the <a href=\"https://github.com/camunda/camunda-bpmn.js/\">camunda-bpmn.js</a> component we had everything at hand to get that going. And we had 24 hours :-)<br />\n<br />\nThe idea is to avoid any hazzle with logins or users - you get a unique URL nobody can guess and can send that to everybody who is interested.<br />\n<br />\n<b>Feature Overview</b><br />\n<b><br /></b>\nThe following screenshots should give a brief overview of the features of camunda share as of today. As we hacked the last 24 hours I will not go into much more details now...<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-MvXUG5rgDhg/UjL8aVA19FI/AAAAAAAAAGc/LZzu6Ijyt9M/s1600/screenshot.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-MvXUG5rgDhg/UjL8aVA19FI/AAAAAAAAAGc/LZzu6Ijyt9M/s320/screenshot.png\" height=\"237\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Upload a BPMN 2.0 process model (you can use every tool capable of BPMN 2.0)</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-xW13-eZF8tw/UjL8XjzejzI/AAAAAAAAAGA/E_RDscUkrbo/s1600/addcomment.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-xW13-eZF8tw/UjL8XjzejzI/AAAAAAAAAGA/E_RDscUkrbo/s320/addcomment.png\" height=\"237\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">comment on elements of the BPMN 2.0 process models</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-Y1S2nA11_lM/UjL8X1z37DI/AAAAAAAAAGI/A3Iw-Jmi3yc/s1600/addcomment2.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-Y1S2nA11_lM/UjL8X1z37DI/AAAAAAAAAGI/A3Iw-Jmi3yc/s320/addcomment2.png\" height=\"237\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">See all other comments visualized on the model and add your answers</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-tfPUy1hx32A/UjMAoaLGmrI/AAAAAAAAAG4/RYAdIvE0Nw0/s1600/feature.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-tfPUy1hx32A/UjMAoaLGmrI/AAAAAAAAAG4/RYAdIvE0Nw0/s320/feature.png\" height=\"186\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Multiple features explained</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-fobJUen7IxY/UjL8bbQxbRI/AAAAAAAAAGs/EXvwMXJLwd0/s1600/xml-view.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-fobJUen7IxY/UjL8bbQxbRI/AAAAAAAAAGs/EXvwMXJLwd0/s320/xml-view.png\" height=\"215\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">See or change (as admin) the BPMN 2.0 XML</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-FC-07l9gzbA/UjMEFuzeSgI/AAAAAAAAAHE/YNQCS-wY3BM/s1600/anonymized.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-FC-07l9gzbA/UjMEFuzeSgI/AAAAAAAAAHE/YNQCS-wY3BM/s320/anonymized.png\" height=\"215\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">You can anonymize process models during upload if you want to discuss on structure without providing company internal information.&nbsp;</td></tr>\n</tbody></table>\n<br />\n<b>Roadmap</b><br />\n<br />\nFirst of all: We have small remaining problems with Internet Explorer - we will remove them pretty quickly! For the moment please use Firefox or Chrome.<br />\n<br />\nWe plan to integrate camunda share in the camunda.org community and to develop it further. But there is no fixed roadmap yet. With the beta state of this ShipIt Day we want to collect feedback from users (<b>you!!</b>) and start using it in our own consulting work. Then we will decide how to move forward. So let us know what you think - use the <a href=\"http://camunda.org/community/forum.html\">camunda BPM User Forum</a>.<br />\n<br />\n<b>Update (March 20, 2014)</b><br />\n<b><br /></b>\nThe idea of camunda share inspired us to create a <a href=\"http://network.camunda.org/forum\">BPMN forum</a> where you can discuss your process models with over 10,000 members of our <a href=\"http://network.camunda.org/\">camunda BPM network</a>.<br />\n<br />\n<b>Where to send the flowers?</b><br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://2.bp.blogspot.com/-DdZoJuwClbU/UjMga3blgAI/AAAAAAAAAHQ/3fGsuJODIxA/s1600/shipItTeam.JPG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-DdZoJuwClbU/UjMga3blgAI/AAAAAAAAAHQ/3fGsuJODIxA/s320/shipItTeam.JPG\" height=\"180\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">The camunda team at the ShipItDay 2013 in Mamerow</td></tr>\n</tbody></table>\nNo need to - we had a lot of fun! But tell all your friends how awesome camunda share, camunda BPM and the whole camunda team is :-)",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2561933064780664052/comments"
   },
   "labels": [
    "BPMN"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2543180057687372434",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-09-05T19:30:00+02:00",
   "updated": "2014-11-26T10:05:07+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTkyNzA3NzIxCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/09/how-to-use-bpmn-20-scripttask-with.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2543180057687372434",
   "title": "How to use BPMN 2.0 ScriptTask with Groovy in JBoss",
   "content": "<b><span style=\"color: red;\">Note: </span>this blogpost only applies to camunda BPM version &nbsp;&lt; 7.1.0. Starting from camunda BPM 7.2.0 we ship Groovy as part of the pre-packaged distribution.</b><br />\n<br />\nRecently at a customer we added a <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#tasks-script-task\">ScriptTask </a>to a process and wanted to run a <a href=\"http://groovy.codehaus.org/\">Groovy</a> script. Pretty easy with <a href=\"http://www.camunda.org/\">camunda BPM</a> - but in the JBoss environment you have to know how to correctly put Groovy on the classpath - as we correctly use the <a href=\"http://www.jcp.org/en/jsr/detail?id=223\">JSR 223</a> stuff to recognize existing Scripting Languages.<br />\n<a href=\"http://1.bp.blogspot.com/-xHla-e8c-Hk/Uii-3TdHHtI/AAAAAAAAAFw/e7wxsEuH1wM/s1600/ScriptTask_Groovy.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-xHla-e8c-Hk/Uii-3TdHHtI/AAAAAAAAAFw/e7wxsEuH1wM/s1600/ScriptTask_Groovy.png\" /></a><br />\n<br />\nTo help others and to remind myself I quickly wanted to blog how to do this.<br />\n<a name='more'></a><br />\n<div>\n<b>1.) Add groovy module to your JBoss</b></div>\n<div>\n<div>\n<br /></div>\n</div>\n<div>\nDownload latest <a href=\"http://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all\">groovy-all.jar</a> and copy it to <i>JBOSS_HOME/modules/groovy/main/groovy-all.jar</i>.</div>\n<div>\n<br />\nCreate&nbsp;<i>JBOSS_HOME/modules/groovy/main/module.xml</i> with the following content:</div>\n<br />\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;?xml version=\"1.0\"\nencoding=\"UTF-8\"?&gt;<o:p></o:p></span></div>\n<div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;module\nxmlns=\"urn:jboss:module:1.0\" name=\"groovy\"&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp; &lt;resources&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&lt;resource-root path=\"groovy-all.jar\"/&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;\n&lt;/resources&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;\n&lt;dependencies&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&lt;module name=\"javax.api\"/&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&lt;module name=\"org.apache.commons.logging\"/&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp;&nbsp;&nbsp;\n&lt;/dependencies&gt;<o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;/module&gt;</span><span style=\"font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10.0pt; mso-fareast-font-family: &quot;Times New Roman&quot;;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><b>2.) Add dependency to groovy in the camunda engine module</b></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><b><br /></b></span></div>\n<div class=\"MsoNormal\">\nEdit file &nbsp;<i>JBOSS_HOME/modules/org/camunda/bpm/camunda-engine/main/module.xml</i>. Add one line in the dependencies:</div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &lt;module name=\"groovy\"\nservices=\"import\" export=\"true\" /&gt;</span><span style=\"font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 10.0pt; mso-fareast-font-family: &quot;Times New Roman&quot;;\"><o:p></o:p></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\">Important is the <i>services=\"import\"</i> which tells JBoss to recognize the META-INF/services directory in groovy - which is does not by default. This is the small thing with normally takes some hours to solve - hope this helps somebody out there. <a href=\"https://docs.jboss.org/author/display/AS7/Class+Loading+in+AS7\">You can find the according JBoss documentation online</a>. The whole <i>module.xml</i> now looks more or less like this:&nbsp;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;module xmlns=\"urn:jboss:module:1.0\" name=\"org.camunda.bpm.camunda-engine\"&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &lt;resources&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;resource-root path=\"camunda-engine-7.0.0-Final.jar\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &lt;/resources&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\"><br /></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &lt;dependencies&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.api\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.transaction.api\"/&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.enterprise.api\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.inject.api\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.ejb.api\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.xml.bind.api\" /&gt;&nbsp;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"javax.servlet.api\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp;&nbsp;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"org.jboss.vfs\" /&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: 'Courier New', Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"org.mybatis.mybatis\" /&gt;</span><span class=\"Apple-tab-span\" style=\"font-family: 'Courier New', Courier, monospace; white-space: pre;\"> </span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"com.fasterxml.uuid.java-uuid-generator\"/&gt;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; &lt;module name=\"org.joda.time\" slot=\"2.1\" /&gt; &nbsp; &nbsp; &nbsp; &nbsp;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp;&nbsp;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &nbsp; <b>&lt;module name=\"groovy\" services=\"import\" export=\"true\" /&gt;</b> &nbsp; &nbsp;</span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&nbsp; &lt;/dependencies&gt;</span></div>\n<div class=\"MsoNormal\">\n</div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;/module&gt;</span></div>\n<div>\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><b>3.) Have fun with the ScriptTask!</b></span></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"MsoNormal\">\n<span style=\"font-family: inherit;\"><br /></span></div>\n</div>",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2543180057687372434/comments"
   },
   "labels": [
    "BPMN",
    "how-to"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "5977087271163268951",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-08-31T16:28:00+02:00",
   "updated": "2014-11-25T17:28:38+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMyOTE4MDYzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/08/camunda-BPM-7.0.0-Final-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5977087271163268951",
   "title": "It's done: camunda BPM 7.0.0-Final released",
   "content": "We are happy to announce the first major release of camunda BPM: 7.0.0-Final. The highlights of this release are\n<br />\n<ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\">camunda cockpit: new webapplication for visual process monitoring and operations</a></li>\n<li>improved process engine with&nbsp;</li>\n<ul>\n<li>more flexible and better performing history (audit database),</li>\n<li><a href=\"http://camundabpm.blogspot.de/2013/06/introducing-activity-instance-model-to.html\">support for activity instance execution model,</a></li>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-the-job-executor\">better clustering support</a></li>\n</ul>\n<li><a href=\"http://docs.camunda.org/api-references/rest/\">REST Api based on JAX-RS</a></li>\n<li>Sophisticated Runtime Container Integration</li>\n<ul>\n<li>Container managed Threading (JBoss Threads, JCA, CommonJ),</li>\n<li>Shared Process Egnine as container managed service on all containers including Apache Tomcat.</li>\n</ul>\n<li><a href=\"http://docs.camunda.org/latest/guides/user-guide/#admin-ldap-connection\">Improved user management with authorizations and LDAP support</a></li>\n<ul>\n</ul>\n</ul>\n<div>\nDistributions are available for Apache Tomcat, JBoss Application Server 7 and Glassfish Application Server 3. An additional IBM WebSphere Application Server 8 distribution is reserved for enterprise customers only. For more information about this release, please join us for our (free) upcoming webinars: webinars now passed.</div>\n<div>\n<div style=\"text-align: center;\">\n<br />\n<a href=\"http://camunda.org/download/\"><b><span style=\"font-size: large;\">Download camunda BPM 7.0.0-Final now for free.</span></b></a></div>\n<br /></div>\n<div>\n<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12315\">Complete Release Notes for the 7.0 Release in JIRA</a>,&nbsp;<a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12995\">Release Notes for the last development iteration.</a></div>\n<a name='more'></a><h3>\nEnterprise Support</h3>\n<div>\nThe 7.0 release is the first supported production release for camunda BPM. It is fully supported in <a href=\"http://camunda.com/bpm/enterprise/\">the camunda BPM enterprise subscription</a>. Support includes <a href=\"http://camunda.com/bpm/enterprise/\">Help Requests</a> based on different SLAs as well as access to camunda BPM maintenance releases. Maintenance releases allow customers to get bugfixes for production systems based on the 7.0 codebase. While the community project will forge ahead for 7.1, we will backport bugfixes to the 7.0 branch and perform maintenance releases reserved for enterprise subscription customers.<br />\n<br />\nThere is a <a href=\"http://docs.camunda.org/latest/guides/migration-guide/\">Migration Guide</a> targeting existing camunda fox installations.</div>\n<h3>\nLooking Back</h3>\nA little over 5 months have passed since we announced the camunda BPM project launch. During that time we have performed <a href=\"http://camunda.org/download/previous/\">9 community preview releases</a>&nbsp;and&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-platform/compare/7.0.0-alpha1...7.0.0-Final\">14 developers have contributed a little over 1200 commits</a>&nbsp;to <a href=\"https://github.com/camunda/camunda-bpm-platform\">the main codebase</a>. As project lead of camunda BPM I want to take this opportunity for thanking my <a href=\"http://www.camunda.org/community/team.html\">team at camunda</a> for their exceptional work and commitment to this project. Getting to where we are today, to me, felt like one single intense coding session and I must say that the whole team really rocked it to the max.<br />\n<br />\n<div style=\"text-align: center;\">\n<b>The heros of camunda BPM 7.0 are</b></div>\n<div style=\"text-align: center;\">\nCore Devs: <a href=\"https://github.com/Nikku\">Nico Rehwaldt</a>, <a href=\"https://github.com/romansmirnov\">Roman Smirnov</a>, <a href=\"https://github.com/ThorbenLindhauer\">Thorben Lindhauer</a></div>\n<div style=\"text-align: center;\">\nQA Engineer: <a href=\"https://github.com/mschoe\">Michael Schöttes</a></div>\n<div style=\"text-align: center;\">\nQA/CI Infrastructure, Maintenance &amp; Build Automation: <a href=\"https://github.com/hawky-4s-\">Christian Lipphardt</a>,<span style=\"font-family: inherit;\">&nbsp;<span style=\"background-color: white; color: #333333; line-height: 20px;\"><a href=\"https://github.com/shentschel\">Stefan Hentschel</a></span></span></div>\n<div style=\"text-align: center;\">\nProduct Management: <a href=\"https://github.com/gimbel\">Robert Gimbel</a></div>\n<div style=\"text-align: left;\">\n<br /></div>\n<div style=\"text-align: left;\">\nBesides us core guys who can work on camunda BPM every day, we have a growing number of community members who contribute to camunda BPM in various ways. Among these I want to stress the restless efforts of <a href=\"https://github.com/berndruecker\">Bernd Rücker</a> who is our chief evangelist and probably the most black-belt BPM practitioner out there. He also co-organizes many of our community meetings. The community meetings are free discussion meetings where people get together and talk about BPM and related topics. So far, we have organized&nbsp;<a href=\"http://www.camunda.org/community/meetings.html\">12 community meetings</a> and the next ones are already scheduled. Bernd is heading the team of camunda consultants among which I want to thank <a href=\"https://github.com/polenz/\">Kristin Polenz</a> and <a href=\"https://github.com/falko\">Falko Menge</a> for their many many contributions to the project and channeling a huge amount of customer feedback. From the community outside of camunda I want to highlight the efforts of&nbsp;<a href=\"https://github.com/clintmanning\">Clint Manning</a>&nbsp;from <a href=\"http://www.1and1.com/\">1&amp;1 </a>who made large contributions to the REST Api as well as <a href=\"https://github.com/marcel-wieczorek\">Marcel Wiczorek</a> and <a href=\"https://github.com/jbellmann\">Jörg Bellmann</a> from <a href=\"http://www.zalando.de/\">zalando</a> for their contributions to the process engine history refactoring.</div>\n<div style=\"text-align: left;\">\n<br /></div>\n<div style=\"text-align: left;\">\nThe camunda Incubation space was launched with three interesting projects:</div>\n<ul>\n<li><a href=\"https://github.com/camunda/camunda-bpm-fluent-testing\">Fluent Testing Library</a></li>\n<li><a href=\"http://camunda.github.io/camunda-bpm-php-sdk/\">PHP SDK</a></li>\n<li><a href=\"https://github.com/camunda/camunda-bpm-camel\">Apache Camel Integration</a></li>\n</ul>\n<h3>\nLooking Forward</h3>\nWe will do an <a href=\"http://network.camunda.org/meetings/10\">international (English speaking) community Day in Prague</a>. Entry &nbsp;is free and I hope that as many of you as possible can make it.<br />\n<br />\nAnd other than that, we will forge ahead for the 7.1 release!<br />\n<br />\n<div style=\"text-align: center;\">\n<b>Do not miss our Webinars: webinars now passed.</b></div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5977087271163268951/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8185102535480013943",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-08-27T08:34:00+02:00",
   "updated": "2014-11-25T17:13:38+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMyMDE4ODI1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/08/camunda-bpm-participates-in-bpmn.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8185102535480013943",
   "title": "camunda BPM participates in BPMN Roundtrip Demo of OMG",
   "content": "The camunda BPM platform participated in a somewhat extreme BPMN roundtrip demo of the OMG. During that demo, the camunda engine managed to execute a BPMN process model that we pushed through five different modeling tools. Altogether, eight tools participated in the entire roundtrip. Among them where <a href=\"http://camunda.org/bpmn/tool/\">camunda Modeler</a> for editing BPMN in Eclipse, the <a href=\"http://camunda.org/\">camunda engine</a> for executing the BPMN process and <a href=\"https://github.com/camunda/camunda-bpmn.js\">camunda-bpmn.js</a> for rendering BPMN in JavaScript. In addition, I also did a demo of how to use <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cycle\">camunda Cycle</a> for automating BPMN roundtrips.\n\n<p>Find the full story, screenshots and videos at BPM-Guide.de: <a href=\"http://www.bpm-guide.de/2013/08/27/bpmn-roundtrip-works-interchange-demo-with-8-tools/\">BPMN Roundtrip works: Interchange Demo with 8 Tools</a>.",
   "author": {
    "id": "11297925707405783498",
    "displayName": "Falko Menge",
    "url": "https://www.blogger.com/profile/11297925707405783498",
    "image": {
     "url": "http://4.bp.blogspot.com/-9L-G6hmCAa4/UhxJN_US7xI/AAAAAAAAAFc/yQDSKQNp2-M/s35/2012-08-14_13-09-38_by_Angelita_P8140026.edit.JPG"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8185102535480013943/comments"
   },
   "labels": [
    "BPMN"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2738238855534992864",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-08-09T17:37:00+02:00",
   "updated": "2014-11-25T17:09:10+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMxNzUwNDM2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/08/camunda-bpm-700-alpha9-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2738238855534992864",
   "title": "camunda BPM 7.0.0-alpha9 released",
   "content": "Today we are happy to announce the next alpha version of camunda BPM. Get it&nbsp;<a href=\"http://camunda.org/download/\" target=\"_blank\">here</a>.<br />\n<div>\n<br />\n<h3>\nHighlights of this Release</h3>\n<div>\n<br /></div>\n<div>\ncockpit:</div>\n<div>\n<ul>\n<li>instance filters added that allow you to filter for business key and variables</li>\n<li>called process definition tab added</li>\n<li>called process instances tab added</li>\n</ul>\nadmin:<br />\n<ul>\n<li>administrate users and groups added</li>\n<li>change group memberships added</li>\n<li>manage authorizations added</li>\n<li>assign access rights to cockpit and tasklist added (as part of manage authorizations)</li>\n</ul>\nengine:</div>\n<div>\n<ul>\n<li>ability to run process engine in a heterogenous cluster&nbsp;added</li>\n<li>unique constraint on business key&nbsp;removed&nbsp;(applied to new installations only)</li>\n<li>#noRetriesLeft to jobQuery&nbsp;added</li>\n<li>bpmn element throwing message event&nbsp;added</li>\n<li>bpmn element&nbsp;send task&nbsp;added</li>\n<li>exception types in error codes to declare business exceptions</li>\n<li>history performance&nbsp;improved</li>\n<li>configuration from camunda.cfg.xml file possible (in addition to activity.cfg.xml)</li>\n</ul>\n<div>\n<br />\nBreaking changes:</div>\n</div>\n<div>\n<ul>\n<li>the tasklist is now part of the camunda webapp, you should find it at&nbsp;<a href=\"http://localhost:8080/camunda/app/tasklist\">http://localhost:8080/camunda/app/tasklist</a>.&nbsp;</li>\n</ul>\n<div>\n<div>\n<br />\nIn total, 80 issues have been addressed including more than 20 bug fixes. Check out the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12994\">complete list</a> for all the details.</div>\n<div>\n<br /></div>\n<div>\nThanks to&nbsp;<a href=\"https://github.com/polenz\">Kristin</a>,&nbsp;<a href=\"https://github.com/rafacm\">Rafael</a>&nbsp;and&nbsp;<a href=\"https://github.com/clintmanning\">Clint</a>&nbsp;for contributing to this release through their pull requests.&nbsp;</div>\n</div>\n</div>\n<div>\nAnd thanks to <a href=\"https://github.com/shentschel\">Stefan</a>&nbsp;for your continuous fight for better IE compatibility ;-).</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<h3>\nUnder the Hood</h3>\n<div>\nA major contribution to this release was <a href=\"https://github.com/meyerdan\">Daniel's</a> work a sophisticated authorization mechanism.<br />\nThrough that mechanism you have fine grained control over which users and groups may create, view, edit and delete which resources.<br />\n<br />\nAs a first step, we applied that mechanism to cockpit, tasklist and the admin app. From today on, you will only be able to access the apps you have been authorized for ;-).<br />\n<br />\nFurthermore, superpowered users may configure all this through the extended admin application.<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-6YbqbJjU2f8/UgT_TlvA55I/AAAAAAAAAIo/LFpmS2Kj980/s1600/admin-gui.jpg\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"416\" src=\"http://1.bp.blogspot.com/-6YbqbJjU2f8/UgT_TlvA55I/AAAAAAAAAIo/LFpmS2Kj980/s640/admin-gui.jpg\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Manage users, groups and authorizations through the admin app.</td></tr>\n</tbody></table>\n<br />\nDaniel also worked on improving the history, both in terms of structure and performance. The result moved into our code base, expect a blog post about it, soon.<br />\n<br /></div>\n<div>\nIn the meantime <a href=\"https://github.com/romansmirnov\">Roman</a>&nbsp;and <a href=\"https://github.com/Nikku\">I</a> overhauled the cockpit process definition and process instance view&nbsp;internals. The result is a small library called <a href=\"https://github.com/Nikku/angular-data-depend\">angular-data-depend</a>&nbsp;and a cleaner code base.<br />\n<div>\nEach action you perform is reflected in the url. As a result, you are able to walk back through what you have done using your browser's history.</div>\n</div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td><embed align=\"middle\" allowscriptaccess=\"always\" height=\"470\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" quality=\"high\" src=\"http://nixis.de/~nikku/camunda/cockpit-interactivity.swf\" type=\"application/x-shockwave-flash\" width=\"640\"></embed></td></tr>\n<tr><td class=\"tr-caption\">Walking through your process data with cockpit and jump back using your browser's history. <br />\n(Excuse bad quality, not enough pixels ;-)</td></tr>\n</tbody></table>\n<br />\nLast but not least, we created a process instance filter that tells you exactly where you are and what you filter for. It allows you to narrow the displayed process instances based on their business key and process variables, too.</div>\n<div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td><a href=\"http://1.bp.blogspot.com/-NWPmBnlqYX8/UgUDAOIwKLI/AAAAAAAAAI8/waesvTpci1s/s1600/instance-filter.jpg\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"200\" src=\"http://1.bp.blogspot.com/-NWPmBnlqYX8/UgUDAOIwKLI/AAAAAAAAAI8/waesvTpci1s/s200/instance-filter.jpg\" width=\"135\" /></a></td></tr>\n<tr><td class=\"tr-caption\">Finds the process instances interesting for you.</td></tr>\n</tbody></table>\n</div>\n<div>\nAs always, tell us what you think on our <a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-users\">mailing list</a>.</div>\n",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2738238855534992864/comments"
   },
   "labels": [
    "cockpit",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3508192439416815785",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-07-22T16:08:00+02:00",
   "updated": "2014-11-25T17:05:15+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMxNTE1Njc5Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/07/prague-history-beer-and-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3508192439416815785",
   "title": "Prague: history, beer and …camunda BPM",
   "content": "<p>\nYes, fellow BPM-enthusiasts it is time to head to Prague for the <a href=\"http://network.camunda.org/\">camunda BPM community</a> event of the year!\n</p>\n<p>\nWe are heading across the border and are hosting our first event in a non-German speaking country on Friday, October 18th at the <a href=\"http://www.fusionhotels.com/en/\">fusion hotel</a> in the great city of Prague.\n</p>\n<table>\n<tr><td style=\"text-align:center;\"><a href=\"http://www.bpm-guide.de/wp-content/uploads/2013/07/2700211.jpg\"><img style=\"margin-right:20px;\" src=\"http://www.bpm-guide.de/wp-content/uploads/2013/07/2700211-150x101.jpg\" alt=\"\" title=\"reception fusion prague\" width=\"150\" height=\"100\" class=\"size-thumbnail wp-image-4817\" /></a><a href=\"http://www.bpm-guide.de/wp-content/uploads/2013/07/2719711.jpg\"><img style=\"margin-right:20px;\" src=\"http://www.bpm-guide.de/wp-content/uploads/2013/07/2719711-150x99.jpg\" alt=\"\" title=\"playroom fusion prague\" width=\"150\" height=\"100\" class=\"size-thumbnail wp-image-4818\" /></a><a href=\"http://www.bpm-guide.de/wp-content/uploads/2013/07/18PRAGUE_SPAN-articleLarge1.jpg\"><img src=\"http://www.bpm-guide.de/wp-content/uploads/2013/07/18PRAGUE_SPAN-articleLarge1-150x92.jpg\" alt=\"\" title=\"Prague\" width=\"150\" height=\"100\" class=\"aligncenter size-thumbnail wp-image-4820\" /></a></td>\n</tr>\n</table>\n<p>\nYou will get the chance to learn more about <a href=\"http://www.camunda.org/\">camunda BPM</a> from the people behind the platform (the whole <a href=\"http://www.camunda.org/community/team.html\">team</a> will be present!) but also get real-life reports from users.\n</p>\n<p>\nThere will be plenty of time for open discussion as we are eager to hear your opinions, feedback and suggestions and of course we will take advantage of our surroundings and head out for a few Prague beers afterwards.\n</p>\n<p>\nYou can find out more and register <a href=\"http://network.camunda.org/meetings/10\">here</a>. \n</p>\n<p>\nFor those of you who cannot wait to see what is in store, here is the current agenda (subject to change):\n<table>\n  <thead>\n    <tr>\n      <th width=\"100\" align=\"left\">When?</th>\n      <th align=\"left\" >What?</th>\n      <th align=\"left\">Who?</th>\n    </tr>\n  </thead>\n  <tbody>\n  <tr class=\"popover-title\" height=\"50\">\n    <td>12.00 - 13.00</td>\n    <td>Registration and chitchat</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>13.00 - 13.10</td>\n    <td>Welcome and camunda Vision</td>\n    <td><a href=\"http://www.camunda.org/community/team.html\">Bernd and Jakob</a> (CEOs)</td>\n  </tr>\n  <tr>\n    <td>13.10 - 13.30</td>\n    <td>camunda BPM Introduction and technical Vision</td>\n    <td><a href=\"http://www.camunda.org/community/team.html\">Daniel</a> (Project Lead)</td>\n  </tr>\n  <tr>\n    <td>13.30 - 14.00</td>\n    <td>Latest and greatest from the development team</td>\n    <td><a href=\"http://www.camunda.org/community/team.html\">Core Team</a></td>\n  </tr>\n  <tr class=\"popover-title\" height=\"50\">\n    <td>14.00 - 14.30</td>\n    <td>BREAK</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>14.30 - 15.00</td>\n    <td>Real-Life Experience Report: Processes within 1&1 <br> Starting from jBPM 3, we're closely working with the open-source community to build the next 1&1 Process Platform, supporting our high-volume business processes. Checkout our experience with providing an enterprise software stack based on camunda BPM.<br> </td>\n    <td>Mehmet Sürü, <a href=\"http://www.1und1.de//\">1&1 Internet AG</a> </td>\n  </tr>\n  <tr>\n    <td>15.00 - 15.30</td>\n    <td>Best Practices from our customer projects</td>\n    <td><a href=\"http://www.camunda.org/community/team.html\">Consulting Team</a></td>\n  </tr>\n  <tr class=\"popover-title\" height=\"50\">\n    <td>15.30 - 16.00</td>\n    <td>BREAK</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>16.00 - 16.20</td>\n    <td>How do we work? <br> How can you contribute? <br> How to be part of the camunda BPM community?</td>\n    <td><a href=\"http://www.camunda.org/community/team.html\">Daniel</a> (Project Lead)</td>\n  </tr>\n  <tr>\n    <td>16.20 - 16.40</td>\n    <td>Contribution spotlights and contribution awards</td>\n    <td><a href=\"http://www.camunda.org/community/team.html\">Contributors</a></td>\n  </tr>\n  <tr>\n    <td>16.40 - 18.00</td>\n    <td>camunda BPM roadmap and next steps, discussion of concrete features / contributions</td>\n    <td>all - moderated by <a href=\"http://www.camunda.org/community/team.html\">Robert</a> (Product Owner)</td>\n  </tr>\n  <tr class=\"popover-title\" height=\"50\">\n    <td>18.00 - ?</td>\n    <td>End of official event – grab some beers around and dicsuss everything that REALLY matters</td>\n    <td>all</td>\n  </tr>\n  <tr class=\"popover-title\" height=\"50\">\n    <td>03.00</td>\n    <td>Time to think about sleeping</td>\n    <td></td>\n  </tr>\n</table>\n</p>\n<p>\nWe look forward to seeing you in Prague in October.\n</p>",
   "author": {
    "id": "g114958856302928747260",
    "displayName": "Nastasja Johnston",
    "url": "https://www.blogger.com/profile/09924962448140455402",
    "image": {
     "url": "//lh6.googleusercontent.com/-IthZQAQw36I/AAAAAAAAAAI/AAAAAAAAABM/ht1Hb4cFv3I/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3508192439416815785/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "1305810503991325679",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-07-19T18:04:00+02:00",
   "updated": "2014-11-25T17:00:08+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMxMjA4OTU1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/07/camunda-bpm-camunda-bpm-700-alpha8.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1305810503991325679",
   "title": "camunda BPM camunda BPM 7.0.0-alpha8 released",
   "content": "<a href=\"http://www.camunda.org/download/\">Here</a> comes the latest camunda BPM alpha release with the following highlights:<br />\n<br />\nNew features in cockpit webapplication:<br />\n<br />\n<ul>\n<li>Greatly improved layout</li>\n<li>Editing process variables</li>\n<li>Cancelling a process instance</li>\n<li>Increment retries for failed jobs</li>\n<li>Login based on Process Engine Identity Service</li>\n</ul>\n<div>\nWe added a new application called camunda Admin which provides support for</div>\n<div>\n<ul>\n<li>Managing users &amp; groups based on the process engine engine identity service</li>\n<li>Creating an initial user for a process engine</li>\n</ul>\n<div>\nThe REST API was enhanced&nbsp;</div>\n</div>\n<div>\n<ul>\n<li>Improved variable handling</li>\n<li>Added Jobs resource (<a href=\"https://github.com/1and1/camunda-bpm-platform\">contribution by Clint Manning, 1&amp;1</a>)</li>\n<li>Added User and Group Resources</li>\n</ul>\n<div>\nThe Process Engine got smarter</div>\n</div>\n<div>\n<ul>\n<li>Started work on authorization service</li>\n</ul>\n<div>\nBraking change: the URL for cockpit is now <span style=\"background-color: white;\"><span style=\"color: red;\">http://localhost:8080/camunda/</span></span>.</div>\n<div>\n<br /></div>\n<div>\nAll in all, 33 issues were closed, including 8 bugfixes. <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12993\">Read the full release notes in JIRA.</a></div>\n<div>\n<br /></div>\n<div>\n<a href=\"http://www.camunda.org/download/\">camunda BPM 7.0.0-alpha8 can be downloaded here.</a>&nbsp;</div>\n</div>\n<div>\n<br /></div>\n<div>\n<a name='more'></a><br /></div>\n<h3>\nAdditions to the Webapps</h3>\n<div>\nNico Rehwaldt &amp; Roman Smirnov have given cockpit a complete layout overhaul and added a lot of features:</div>\n<div>\n<br /></div>\n<div>\n<b>New Cockpit layout:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-Rnq9j8yRpfU/UelAhknmT_I/AAAAAAAAAOQ/0CiN8xsabg0/s1600/cockpit-layout.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"322\" src=\"http://3.bp.blogspot.com/-Rnq9j8yRpfU/UelAhknmT_I/AAAAAAAAAOQ/0CiN8xsabg0/s400/cockpit-layout.png\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>Editing process variables:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-cR4wDrKdX6Q/UelAg2OMg_I/AAAAAAAAAOI/S7mDZ67UD44/s1600/cockpit-edit-variable.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-cR4wDrKdX6Q/UelAg2OMg_I/AAAAAAAAAOI/S7mDZ67UD44/s1600/cockpit-edit-variable.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>Cancelling Process Instances:</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-5KUl_zBSQKM/UelAgY30JtI/AAAAAAAAAN4/X5PT3KhDzjk/s1600/cockpit-cancel-process-instance.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-5KUl_zBSQKM/UelAgY30JtI/AAAAAAAAAN4/X5PT3KhDzjk/s1600/cockpit-cancel-process-instance.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b><br /></b></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>Increment Job retries</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-lvBs2z2K0N0/UelAhDcMz0I/AAAAAAAAAOE/SQ-zFJ1sAbQ/s1600/cockpit-increment+jobs.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-lvBs2z2K0N0/UelAhDcMz0I/AAAAAAAAAOE/SQ-zFJ1sAbQ/s1600/cockpit-increment+jobs.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b><br /></b></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>Selecting a process engine</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-dmtOwOHMt9I/UelAh70imCI/AAAAAAAAAOU/qmI1oq_b8r8/s1600/cockpit-select-process-engine.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"148\" src=\"http://1.bp.blogspot.com/-dmtOwOHMt9I/UelAh70imCI/AAAAAAAAAOU/qmI1oq_b8r8/s320/cockpit-select-process-engine.png\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b><br /></b></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>Switching to a different application</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-KHUC3zH2Wes/UelAgWp5vZI/AAAAAAAAAOg/RB4lOijRvkQ/s1600/cockpit-app-swith.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-KHUC3zH2Wes/UelAgWp5vZI/AAAAAAAAAOg/RB4lOijRvkQ/s1600/cockpit-app-swith.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>The camunda Admin application allows managing Users and Groups</b></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-DihQ_fve3zM/UelAgcICMzI/AAAAAAAAAN0/InGbItieGR0/s1600/camunda-admin-manage-users.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"305\" src=\"http://3.bp.blogspot.com/-DihQ_fve3zM/UelAgcICMzI/AAAAAAAAAN0/InGbItieGR0/s400/camunda-admin-manage-users.png\" width=\"400\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<h3>\nStarted Work on Authorizations:</h3>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nWe started work on a resource-based authorization system in the process engine:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\nThe authorization service allows managing <code><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine-authorization-service\">Authorizations</a></code>. \nAuthorizations manage permissions of a given user/group to interact with a given \nresource.<br />\n<br />\n<b>Creating an authorization</b><br />\nAn authorization is created between a user/group and a resource. It describes \nthe user/group's <em>permissions</em> to access that resource. An authorization \nmay express different permissions, such as the permission to READ, WRITE, DELTE \nthe resource.<br />\n<br />\n<b>Granting / revoking permissions</b><br />\nIn order to grant the permission to access a certain resource, an \nauthorization object is created: <br />\n<pre> Authorization auth = authorizationService.createNewAuthorization();\n //... configure auth\n authorizationService.saveAuthorization(auth);\n </pre>\n<div class=\"separator\" style=\"clear: both;\">\nThe authorization object can be configured either for a user or a group: </div>\n<pre> auth.setUserId(\"john\");\n   -OR-\n auth.setGroupId(\"management\");\n </pre>\n<div class=\"separator\" style=\"clear: both;\">\nand a resource: </div>\n<pre> auth.setResource(Resources.USER);\n auth.setResourceId(\"mary\");\n </pre>\n<div class=\"separator\" style=\"clear: both;\">\nfinally the permissions to access that resource can be assigned: </div>\n<pre> auth.addPermission(Permissions.READ);\n </pre>\n<div class=\"separator\" style=\"clear: both;\">\nand the authorization object is saved: </div>\n<pre> authorizationService.saveAuthorization(auth);\n </pre>\n<div class=\"separator\" style=\"clear: both;\">\nAs a result, the given user or group will have permission to READ the \nreferenced process definition. \n</div>\n<div class=\"separator\" style=\"clear: both;\">\n<br /></div>\n<br />\n<b>Checking a permission</b><br />\nPermissions can be checked using a query: <br />\n<pre> authorizationQuery.userId(\"john\")\n   .resourceType(\"processDefinition\")\n   .resourceId(\"2313\")\n   .hasPermission(Permissions.READ)\n   .hasPermission(Permissions.WRITE)\n   .hasPermission(Permissions.DELETE)\n   .list();\n </pre>\n<div class=\"separator\" style=\"clear: both;\">\nSelects all Authorization objects which provide READ,WRITE,DELETE \nPermissions for the user \"john\".&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nIn the 7.0 final release, authorizations will work on the Resources USER, GROUP, APPLICATION, AUTHORIZATION. In 7.1 we will extend authorization support to process definitions.&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n(All plans are subject to change :) )</div>\n<h3>\nWhat's coming up next?</h3>\n<div>\n- LDAP support: identity service provider&nbsp;already there:&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/identity/identity-ldap/src/main/java/org/camunda/bpm/identity/impl/ldap\">https://github.com/camunda/camunda-bpm-platform/tree/master/identity/identity-ldap/src/main/java/org/camunda/bpm/identity/impl/ldap</a>&nbsp;)</div>\n<div>\n- Authorizations</div>\n<div>\n- Merge new history branch (<a href=\"https://github.com/camunda/camunda-bpm-platform/tree/history\">https://github.com/camunda/camunda-bpm-platform/tree/history</a>)</div>\n<div>\n- Many awesome features in cockpit :)</div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1305810503991325679/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6695671717703912979",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-07-04T16:49:00+02:00",
   "updated": "2014-11-25T16:55:08+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMwOTA4NzE1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/07/camunda-bpm-70-alpha7-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6695671717703912979",
   "title": "camunda BPM 7.0-alpha7 released",
   "content": "<a href=\"http://camunda.org/download/\">camunda BPM 7.0.0-alpha7</a> is out now!<br />\n<br />\nThe highlights of this new release are:\n\n<br />\n<ul>\n<li>In Cockpit we worked on the visualization of Process Instances:</li>\n<ul>\n<li>Incidents of a running process instance will be shown in the corresponding rendered process diagram.</li>\n<li>The former introduced <a href=\"http://camundabpm.blogspot.de/2013/06/introducing-activity-instance-model-to.html\">Activity Instance Tree</a> will be visualized as a tree.</li>\n<li>Now it is possible to select a BPMN element in the rendered process diagram or to select a activity instance wihtin the activity instance tree. If a single BPMN Element is selected, the corresponding activity instances will also be selected in the tree (and vice versa).</li>\n<li>Variable instances of the process instance/activity instances will be shown in the view.</li>\n</ul>\n<li>In Cockpit you can switch between the configured process engines (multi-tenancy).</li>\n<li>The variable instances can be selected via an introduced Java and REST Api.</li>\n<li>Support of a further Bpmn 2.0 Element: Link Event.</li>\n<li>New user guide for <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cycle\">Cycle</a> and <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\">Tasklist</a>.</li>\n</ul>\n33 issues were closed. See the complete release notes in <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12990\">Jira</a>. \n<br />\n<h3>\nVisualization of a Process Instance</h3>\n<div>\nThe following screencast summarizes all in <a href=\"http://camunda.org/download/\">this release</a> implemented features in camunda Cockpit:<br />\n<br />\n<br />\n<br />\n<iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/zqzXM0QBSbY\" frameborder=\"0\" allowfullscreen></iframe>\n<br /></div>\n<h3>\nSupport of multi-tenancy in camunda Cockpit</h3>\n<div>\nDue to the possibility to run <a href=\"https://app.camunda.com/confluence/display/foxUserGuide/Multi-Tenancy\">multiple tenants</a>&nbsp;on the camunda BPM platform you can now switch between the configured process engines in Cockpit to get the process engine specific information.</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-6uLs4Ms3wc0/UdWEVcPAHKI/AAAAAAAAACo/TuLjwwy-XWk/s228/multi-tenancy.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-6uLs4Ms3wc0/UdWEVcPAHKI/AAAAAAAAACo/TuLjwwy-XWk/s228/multi-tenancy.png\" /></a></div>\n<div>\n<br /></div>\n<h3>\nVariable Instance query</h3>\n<div>\nNow it is possible to create a variable instance query to get variables instances:</div>\n<div>\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #333333; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code style=\"background-color: transparent; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 0px; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 0px;\">runtimeService\n  .createVariableInstanceQuery()\n  .list()\n</code></pre>\n</div>\n<div>\nFurthermore, with the Java Api you are able to query after variables instances for more than one task id, process instance id, execution id and activity instance id at once. For example:<br />\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #333333; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code style=\"border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 0px; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 0px;\">runtimeService\n  .createVariableInstanceQuery()\n  .taskId(\"aTaskId\", \"anotherTaskId\")\n  .list</code></pre>\nIn the case of the example you will get all variable instances with the task id \"aTaskId\" and \"anotherTaskId\". This is also possible with the process instance ids, execution ids and activity instance ids.<br />\n<br />\n<b>Note:</b>&nbsp;At the moment it is not possible to select variable instance with the type 'bytes'.<br />\n<br />\nThe variable instance query is also exposed via the <a href=\"http://docs.camunda.org/api-references/rest/#!/variable-instance/get-query\">REST API</a>.<br />\n<br />\n<br />\n<br />\n<br /></div>",
   "author": {
    "id": "g103095829219633860375",
    "displayName": "Roman Smirnov",
    "url": "https://www.blogger.com/profile/16926070807839636634",
    "image": {
     "url": "//lh5.googleusercontent.com/-5x2tX0l0eeI/AAAAAAAAAAI/AAAAAAAAAB8/gOaW1PE04uM/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6695671717703912979/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "6287541041306065043",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-06-18T17:18:00+02:00",
   "updated": "2014-11-25T16:52:20+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMwNzQwMzgzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/06/announcing-release-date-of-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6287541041306065043",
   "title": "Announcing the Release Date of camunda BPM 7.0.0 GA",
   "content": "We are proud to announce the major release date of&nbsp;<a href=\"http://www.camunda.org/\">camunda BPM</a>:<br />\n<h3>\n7.0.0 GA* on 31.08.2013</h3>\n<div>\n<br />\n&nbsp;All features will be open source, exept for the IBM Websphere AS distribution.<br />\nFrom that day on, there will also exist the&nbsp;<a href=\"http://www.camunda.org/support.html\">supported enterprise edition</a>&nbsp;of &nbsp;camunda BPM.<br />\n<i style=\"background-color: white;\"><span style=\"color: #999999; font-size: x-small;\">(*General Availability)</span></i></div>\n<h3>\n<span style=\"font-size: large;\">\nHighlights of 7.0.0</span></h3>\n<ul>\n<li><span style=\"background-color: white;\">New webapplication for process monitoring with BPMN 2.0, based on an <a href=\"https://github.com/camunda/camunda-bpm-examples#cockpit-examples\">open</a>&nbsp;<a href=\"http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin\">plugin infrastructure</a></span></li>\n<li><span style=\"background-color: white;\">Faster process engine with asynchronous history, optimized for high load scenarios</span></li>\n<li><span style=\"background-color: white;\">New&nbsp;<a href=\"http://docs.camunda.org/latest/api-references/rest/#overview-embedding-the-api\">embeddable</a>&nbsp;<a href=\"http://docs.camunda.org/api-references/rest/\">REST API</a>, based on JAX-RS</span></li>\n<li><span style=\"background-color: white;\">Java Script library for&nbsp;<a href=\"https://github.com/camunda/camunda-bpmn.js\">rendering</a>&nbsp;BPMN 2.0 diagrams&nbsp;</span></li>\n<li><span style=\"background-color: white;\"><a href=\"http://docs.camunda.org/guides/installation-guide/\">Support</a> for: Tomcat, JBoss, Glassfish and IBM Websphere AS</span></li>\n<li><span style=\"background-color: white;\">Enahnced user management, supporting LDAP and JAAS</span></li>\n</ul>\n<div>\n<a name='more'></a></div>\n<h3>\n<span style=\"font-size: large;\">Also new in 7.0.0</span></h3>\n<div>\nFully Java EE 6 compliant process engine, s<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21px;\">upport for message correlation,&nbsp;</span>HTML5&nbsp;Tasklist for human workflow, a<span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21px;\">&nbsp;new&nbsp;</span><a href=\"http://docs.camunda.org/guides/user-guide/#incidents\" style=\"font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21px;\">incident infrastructure</a><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21px;\">&nbsp;in the process engine, l</span><span style=\"background-color: white; font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21px;\">ots of </span><a href=\"https://app.camunda.com/jira/issues/?jql=fixVersion%20%3D%20%227.0.0%22%20AND%20project%20%3D%20CAM%20and%20type%20%3D%20%22Bug%20Report%22\" style=\"font-family: 'Times New Roman', Times, FreeSerif, serif; line-height: 21px;\">bugf<span id=\"goog_439193655\"></span><span id=\"goog_439193656\"></span>ixes</a>, lots of helpful&nbsp;<a href=\"http://docs.camunda.org/\">documentation</a>.<br />\n<ul>\n</ul>\n</div>\n<h3>\nStart using camunda BPM today!</h3>\n<div>\nAlthough still tagged as alpha, our <a href=\"http://www.camunda.org/download/\">current releases</a> are already considered stable, especially the process engine itself. There are already customers going live with the current alpha5 - we have no worries - but keep in mind that some things might still be subject to change:</div>\n<div>\n<ul>\n<li>History (we expect some database changes)</li>\n<li>Central User Management (will be added)</li>\n<li>Cockpit (more features will be added; the plugin API might still change)</li>\n</ul>\n<div>\n<br />\nJust being the product owner, I will not build any of this stuff myself. The credits go to our <a href=\"http://www.camunda.org/community/team.html\">team</a>, the contributors and the <a href=\"http://network.camunda.org/\">community</a>.</div>\n</div>\n<div>\n<br /></div>\n<div>\nGreat work, great project!</div>",
   "author": {
    "id": "g101625908329141843890",
    "displayName": "Robert Gimbel",
    "url": "https://www.blogger.com/profile/17572476699193022389",
    "image": {
     "url": "//lh5.googleusercontent.com/-lGSPqACLBSU/AAAAAAAAAAI/AAAAAAAAABM/A1fREVfGopk/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6287541041306065043/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2398006376010643581",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-06-17T09:40:00+02:00",
   "updated": "2013-06-19T09:40:21+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzcxNjI3NjIxOTMxCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/06/introducing-activity-instance-model-to.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2398006376010643581",
   "title": "Introducing an Activity Instance Model to the core Process Engine",
   "content": "<span style=\"font-weight: normal;\"><i><br /></i></span>\n<span style=\"font-weight: normal;\"><i>(this post was originally part of the <a href=\"http://camundabpm.blogspot.de/2013/06/camunda-bpm-700-alpha6-released.html\">7.0.0-alpha6 release blog post</a> but later extracted into an own post).</i></span><br />\n<span style=\"font-weight: normal;\"><i><br /></i></span>\nIn 7.0.0-alpha6 we introduced the concept of&nbsp;activity&nbsp;instances and the activity instance tree to the core process engine. This post explains the motivation and gives some insight into the internal implementation.<br />\n<h3>\nWhy do we need an Activity Instance Tree?</h3>\n<div>\nThe activity instance tree contains a node for each activity that is currently active in the process instance. Some activity instances are scopes (such as Embedded Subprocesses). Such scope activity instance may have child activity instances:</div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td><a href=\"http://4.bp.blogspot.com/-nHFq1mJMTD0/Ubsb63GXFJI/AAAAAAAAAKE/QZ_Cd2GqsfI/s1600/tree1.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"122\" src=\"http://4.bp.blogspot.com/-nHFq1mJMTD0/Ubsb63GXFJI/AAAAAAAAAKE/QZ_Cd2GqsfI/s320/tree1.png\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"font-size: 13px;\">Activity Instance Tree and Scopes</td></tr>\n</tbody></table>\n<div>\nSo far so good. But is that not the execution tree provided by the process engine? To some extent yes, but not in &nbsp;all cases. There are numerous cases where the execution tree is not aligned with activity scoping in BPMN 2.0.</div>\n<h3>\nScoping vs. Concurrency</h3>\n<div>\nThe process engine uses the concept of a \"child execution\" both for scoping and for concurrency. If a non-concurrent execution reaches a parallel gateway, it will stay there and concurrent child executions are spawned for each outgoing sequence flow. The effect is that the child executions are nested below an inactive execution waiting in the parallel gateway (fork). This concept is an internal implementation detail and not aligned with the BPMN 2.0 specification and usually very hard to understand for new users of the process engine:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-uD5Rb0XBsQ0/UbshmnQ3k_I/AAAAAAAAAKo/Yryo_9v_Y_U/s1600/scoping_cs_concurrency.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"253\" src=\"http://3.bp.blogspot.com/-uD5Rb0XBsQ0/UbshmnQ3k_I/AAAAAAAAAKo/Yryo_9v_Y_U/s400/scoping_cs_concurrency.PNG\" width=\"400\" /></a></div>\n<div>\nIn the execution tree (left hand side) you will see an inactive scope execution waiting in the parallel gateway (even though the process instance has already completed that activity and is now executing the service tasks). The executions executing the service tasks are nested below the inactive scope execution waiting in the fork gateway. In the activity instance tree (right hand side), this execution is not visible.&nbsp;</div>\n<div>\nIn the activity instance tree, the root node in the activity instance tree represents the process instance itself (ie. the instance of the process definition activity) and its children represent active activity instances for both service tasks.</div>\n<div>\n<br /></div>\n<div>\nAnother example is Parallel Multi Instance. Consider the following examples:&nbsp;</div>\n<div>\n1) Single parallel multi instance task:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-CphDoa92RvE/Ubso_L9XzYI/AAAAAAAAALM/wyol3xiZEAA/s1600/tree_multiInstance_single.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"151\" src=\"http://3.bp.blogspot.com/-CphDoa92RvE/Ubso_L9XzYI/AAAAAAAAALM/wyol3xiZEAA/s320/tree_multiInstance_single.PNG\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n2) Multi instance subprocess:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-gtsqLRzxNNI/UbsogihhAiI/AAAAAAAAALE/3BznfVbbnVA/s1600/tree_multiInstance.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"290\" src=\"http://4.bp.blogspot.com/-gtsqLRzxNNI/UbsogihhAiI/AAAAAAAAALE/3BznfVbbnVA/s400/tree_multiInstance.PNG\" width=\"400\" /></a></div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div>\nThe additonal executions in the execution trees on the left hand side are needed for internal process engine reasons. In cockpit we want to visualize the activity instance tree which is easier to understand and more aligned with BPMN 2.0.&nbsp;</div>\n<h3>\nExecution Tree Compacting and Optimization</h3>\n<div>\nA second reason for introducing the activity instance tree is that the process engine compacts and optimizes the execution tree at runtime. Consider the example of a parallel gateway with two usertasks. Initially both T1 and T2 are active. In the execution tree we will see the inactive concurrent root execution waiting at the parallel gateway and two child executions, one for each task. The activity instance tree has the same structure but the root node corresponds to the process instance itself and is not waiting in the parallel gateway. After the task T2 is completed, the process engine will compact the execution tree, prune the execution for T1 and replace it with the root execution. If the execution T1 references variables or tasks they are moved to the root execution. The activity instance tree look different: it still contains an activity instance for T1 and for the process definition itself. &nbsp;</div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td><a href=\"http://3.bp.blogspot.com/-TpryPDwOCIQ/UbsylNOPQOI/AAAAAAAAAMM/qZEoNNEj4kY/s1600/replaced_by.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"286\" src=\"http://3.bp.blogspot.com/-TpryPDwOCIQ/UbsylNOPQOI/AAAAAAAAAMM/qZEoNNEj4kY/s400/replaced_by.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"font-size: 13px;\">Execution Tee compacting</td></tr>\n</tbody></table>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<div>\nA ramification of this behavior is that in the execution tree there is no concept of \"activity instance identity\". There is no unique identifier representing an instance of an activity. In general, it is not guaranteed that the same execution that enters an activity instance will be the same execution that completes it. In the example above T1 is started by an execution with Id=2 and ended by an execution with Id=1.</div>\n<div>\n<b><span style=\"color: red;\"><br /></span></b></div>\n<div>\n<b><span style=\"color: red;\">(This is why in general you should never use execution IDs for message correlation, BTW!!!)</span></b></div>\n<br />\nIn cockpit we want to allow users to select activity instances and explore their details (variables, tasks ...). If we used the execution IDs the following behavior could occur: the user selects T1 and we write the execution id to the url. While he is looking at the details, T2 is completed and the execution tree is compacted by the process engine. Now the user types F5 (refresh) in the browser. He gets an error since the execution he previously selected does not exist anymore even though the Task is still active. Fail!<br />\n(Even worse: he could send the effectively-non-deep-link to a colleague.)<br />\n<h4>\nUnifying the model for History and Execution</h4>\n<div>\nThe third reason for adding the activity instance tree to the process engine is that it is better aligned with the way the process engine history works. In the process engine history we always had the concept of historic activity instances. Aligning history and runtime tree structures allows us to use the same client-side code in cockpit for visualizing both running an historic activity instances and activities. In addition: cockpit also works if history is turned off.</div>\n<h3>\nHow is the Activity Instance Tree implemented?&nbsp;</h3>\n<div>\nThe activity instance tree is squeezed into the execution tree. We added a new column to the execution table named ACT_INST_ID_:&nbsp;</div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td><a href=\"http://4.bp.blogspot.com/-dYuyGvfrCOo/Ubs1NKr2q9I/AAAAAAAAAMc/RDZnpjzklpU/s1600/db_column.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"165\" src=\"http://4.bp.blogspot.com/-dYuyGvfrCOo/Ubs1NKr2q9I/AAAAAAAAAMc/RDZnpjzklpU/s320/db_column.png\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"font-size: 13px;\">New ACT_INST_ID_ column added in Execution table.</td></tr>\n</tbody></table>\n<div>\nIt was not necessary changing anything else as far as the database is concerned. The values of all other columns remain untouched and we have the same number of executions as before.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nThe activity instance IDs are generated by the&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/AtomicOperation.java\">Atomic Operations</a>&nbsp;that start/ end activities:</div>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td><a href=\"http://4.bp.blogspot.com/-pX1xnuq1oPE/Ubs2PrE35RI/AAAAAAAAAMs/RavfOcyOomY/s1600/atomic_ops.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"190\" src=\"http://4.bp.blogspot.com/-pX1xnuq1oPE/Ubs2PrE35RI/AAAAAAAAAMs/RavfOcyOomY/s320/atomic_ops.png\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"font-size: 13px;\">New Atomic Operation Type Hierarchy</td></tr>\n</tbody></table>\n<div>\n<a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/engine/src/test/java/org/camunda/bpm/engine/test/pvm/PvmActivityInstanceTest.java\">There are testcases</a>&nbsp;verifying that activity instance Id generation and activity start / end listener invocation works as expected (ie. an activity instance ID is generated BEFORE the activity START listeners are invoked etc.).</div>\n<div>\n<br /></div>\n<h3>\nHow can I retrieve an Activity Instance Tree?</h3>\n<div>\nCurrently you can retrieve the activity instance tree only for a whole process instance.</div>\n<div>\n<br /></div>\n<div>\n<b>Using the Java API:</b></div>\n<div>\n<br /></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">ActivityInstance rootActivityInstance = runtimeService.getActivityInstance(pi.getProcessInstanceId());</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\"><br /></span></div>\n<div>\n<a href=\"http://docs.camunda.org/api-references/java/org/camunda/bpm/engine/RuntimeService.html#getActivityInstance(java.lang.String)\"><span style=\"font-family: inherit;\">Read the Javadocs.</span></a></div>\n<div>\n<br /></div>\n<div>\n<b>You can also use the REST API:</b></div>\n<div>\n<b><br /></b></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">GET engine-rest/process-instance/8f72bc9f-d505-11e2-bafa-3c970e140ef1/activity-instances</span></div>\n<div>\n<br /></div>\n<div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">{</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"id\": \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"parentActivityInstanceId\": null,</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"activityId\": \"executionProcess:1:8ef5c393-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"processInstanceId\": \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"processDefinitionId\": \"executionProcess:1:8ef5c393-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"childActivityInstances\": [</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"id\": \"SubProcess_1:8f72bca4-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"parentActivityInstanceId\": \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"activityId\": \"SubProcess_1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"processInstanceId\": \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"processDefinitionId\": \"executionProcess:1:8ef5c393-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"childActivityInstances\": [],</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"childTransitionInstances\": [</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"id\": \"8f72bca9-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"parentActivityInstanceId\": \"SubProcess_1:8f72bca4-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"processInstanceId\": \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"processDefinitionId\": \"executionProcess:1:8ef5c393-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"targetActivityId\": \"ServiceTask_1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"executionId\": \"8f72bca9-d505-11e2-bafa-3c970e140ef1\"</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"id\": \"8f72bcaa-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"parentActivityInstanceId\": \"SubProcess_1:8f72bca4-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"processInstanceId\": \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"processDefinitionId\": \"executionProcess:1:8ef5c393-d505-11e2-bafa-3c970e140ef1\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"targetActivityId\": \"ServiceTask_2\",</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"executionId\": \"8f72bcaa-d505-11e2-bafa-3c970e140ef1\"</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"executionIds\": [</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\"</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; ],</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"childTransitionInstances\": [],</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; \"executionIds\": [</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; &nbsp; &nbsp; \"8f72bc9f-d505-11e2-bafa-3c970e140ef1\"</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">&nbsp; &nbsp; ]</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: xx-small;\">}</span></div>\n</div>\n<br />\n<span style=\"font-family: inherit;\">Step by step we will roll out the support for activity instances in public API, add an Activity Instance Query etc.</span><br />\n<h3>\nWill executions be deprecated?</h3>\n<div>\nI am not sure yet but my gut feeling is yes. The concept of \"Execution\" is a proprietary internal process engine concern and will gradually be replaced by the activity instance model. We might go down a road where you can still query for executions but you will in fact get activity instances as result, in order not to break the API. But not before 7.1 or probably 8.0 :)</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2398006376010643581/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "8667225385440580668",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-06-14T18:04:00+02:00",
   "updated": "2014-11-25T16:43:43+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMwMjIzNDg0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/06/camunda-bpm-700-alpha6-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8667225385440580668",
   "title": "camunda BPM 7.0.0-alpha6 released",
   "content": "<div>\n<br /></div>\n<div>\nToday we announce the <a href=\"http://www.camunda.org/download/\">release of camunda BPM 7.0.0-alpha6</a>. In this release we focused on visualizing process instance state on top of a rendered diagram in cockpit. We added the following features:&nbsp;</div>\n<div>\n<ul>\n<li>Process Instance Detail view in cockpit visualizing active activity instances with count</li>\n<li>Updated process definition view to include failed jobs from subprocess instances</li>\n<li>Greatly improved <a href=\"https://github.com/camunda/camunda-bpmn.js\">Javascript BPMN 2.0 Renderer</a> (now feature complete)</li>\n<li>Added persistent Activity Instance tree in process engine</li>\n<li><a href=\"http://docs.camunda.org/latest/api-references/rest/#execution-get-message-event-subscription\">Event Subscription Query is exposed in REST and Java API</a></li>\n</ul>\n<div>\n41 issues were closed. See the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12893\">complete release notes in Jira</a>.&nbsp;</div>\n<div>\n<a name='more'></a></div>\n<h3>\nProcess Instance Detail View in Cockpit</h3>\n</div>\n<div>\nIn cockpit we started work on the process instance detail view. This view will allow you to drill down into a single process instance and explore it's running and completed activities as well as the variables, tasks, jobs... &nbsp;associated. To open the process instance detail view, you can select a process definition on the start page (dashboard), navigate the the process definition page and select a process instance from the instance list.</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-KtTipRABJ5c/UbsRi0DQbbI/AAAAAAAAAJE/lQgx5Y9rakA/s1600/overview.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"244\" src=\"http://4.bp.blogspot.com/-KtTipRABJ5c/UbsRi0DQbbI/AAAAAAAAAJE/lQgx5Y9rakA/s320/overview.png\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\nIn the initial increment we focused on rendering the process diagram (using our <a href=\"https://github.com/camunda/camunda-bpmn.js\">Javascript-based BPMN renderer</a>) and visualizing the currently active activity instances on this diagram:</div>\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td><a href=\"http://3.bp.blogspot.com/-Q2jUYHFml98/UbsSI4lR16I/AAAAAAAAAJM/qHcXP-NeobQ/s1600/multiInstance.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"113\" src=\"http://3.bp.blogspot.com/-Q2jUYHFml98/UbsSI4lR16I/AAAAAAAAAJM/qHcXP-NeobQ/s200/multiInstance.png\" width=\"200\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"font-size: 13px;\">Multi Instance</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-eeSzH-DLjmQ/UbsSJvzgAZI/AAAAAAAAAJY/NK0tOfpuHrg/s1600/scoping.PNG\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><img alt=\"\" border=\"0\" height=\"150\" src=\"http://3.bp.blogspot.com/-eeSzH-DLjmQ/UbsSJvzgAZI/AAAAAAAAAJY/NK0tOfpuHrg/s320/scoping.PNG\" title=\"Embedded Subprocess and Scoping\" width=\"320\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Embedded Subprocess and Scoping</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://4.bp.blogspot.com/-oczqZv4ZP4c/UbsSIx5TtoI/AAAAAAAAAJU/xwJ-0ETnpgw/s1600/compensation.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"125\" src=\"http://4.bp.blogspot.com/-oczqZv4ZP4c/UbsSIx5TtoI/AAAAAAAAAJU/xwJ-0ETnpgw/s200/compensation.png\" width=\"200\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Compensation</td></tr>\n</tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-FarP3t8mJ8M/UbsSI6MXxYI/AAAAAAAAAJQ/nyuy6jzoUFM/s1600/join.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><img border=\"0\" height=\"147\" src=\"http://1.bp.blogspot.com/-FarP3t8mJ8M/UbsSI6MXxYI/AAAAAAAAAJQ/nyuy6jzoUFM/s400/join.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Parallel Join</td></tr>\n</tbody></table>\n<h3>\nHow does it work?</h3>\n<div>\nIn order to visualize these diagrams, camunda Cockpit creates two client side models:</div>\n<div>\n<ul>\n<li><b>The process definition object model</b>: is a Javascript object model representation of the parsed BPMN 2.0 process definition XML. The model has the form of a tree structured in accordance with the BPMN 2.0 semantic process model. We merge the BPMN Diagram Interchange information into this tree.</li>\n<li><b>The process instance object model</b>: is a Javascript object model representation of the current process instance state. The model has the form of a tree and is constructed from the Activity Instance Tree (new feature) retrieved from the process engine.&nbsp;</li>\n</ul>\n<div>\nBoth the process definition tree and the process instance tree have the same structure (ie. activity instances in the process instance tree are at the same level as their corresponding activity definitions in the object model.). In order to achive this, we had to make a couple of additions in the core process engine (PVM-Process Virtual Machine).&nbsp;</div>\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-V8nkTQOkxZs/UbsYqwAIRCI/AAAAAAAAAJ0/3lFh2RoXx6A/s1600/architecture.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"313\" src=\"http://4.bp.blogspot.com/-V8nkTQOkxZs/UbsYqwAIRCI/AAAAAAAAAJ0/3lFh2RoXx6A/s320/architecture.png\" width=\"320\" /></a></div>\n<h3>\nVisualizing the Activity Instance Tree</h3>\n<div>\nWe will visualize the Activity Instance tree in the process instance detail view on the left hand side:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-EeLbTkkAwPk/UbsqYY6bwGI/AAAAAAAAALc/ka0el09PyuM/s1600/Instance+Details+inkl+Tree.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"149\" src=\"http://4.bp.blogspot.com/-EeLbTkkAwPk/UbsqYY6bwGI/AAAAAAAAALc/ka0el09PyuM/s320/Instance+Details+inkl+Tree.png\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div>\n<br /></div>\n<div>\nSee&nbsp;<a href=\"https://app.camunda.com/jira/browse/CAM-719\">CAM-719</a></div>\n<h3>\n<a href=\"http://camundabpm.blogspot.de/2013/06/introducing-activity-instance-model-to.html\">Read more about the activity instance tree in this follow up blog post</a>.</h3>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8667225385440580668/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7367418979937935189",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-31T16:52:00+02:00",
   "updated": "2014-11-25T16:40:20+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTMwMDIwMzQzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/camunda-bpm-70-alpha5-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7367418979937935189",
   "title": "camunda BPM 7.0-alpha5 released",
   "content": "Two weeks after the last alpha release we bring you the freshly baked* alpha5 version of the<a href=\"http://www.camunda.org/download/\"> camunda BPM platform</a>. The highlights of this crispy new release are:<br />\n<br />\n<ul>\n<li>Failed jobs plugin in cockpit,</li>\n<li>Process Instance table in cockpit,</li>\n<li>Refined client-side plugin infrastructure,</li>\n<li>New incident infrastructure in process engine,</li>\n<li>Additions to the REST API,</li>\n<li><a href=\"http://docs.camunda.org/guides/installation-guide/was/\">Complete support for websphere application server 8.5 (enterprise customers only)</a></li>\n</ul>\n<div>\n<span style=\"font-family: Arial, FreeSans, Helvetica, sans-serif;\"><span style=\"font-size: 14px; line-height: 18px;\">50</span></span> JIRA issues were closed, see the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12892\">complete release notes</a>.</div>\n<div>\n<br /></div>\n<div>\nNote: this release contains database changes. Upgrade scripts can be found in the \"sql\" folder of the distribution.</div>\n<div>\n<i><br /></i></div>\n<div>\n<i>(* using Robert Gimbel's special homemade yeast)</i><br />\n<i></i><br />\n<a name='more'></a><i><br /></i></div>\n<h3>\nThings are happening in the cockpit</h3>\n<div>\nOver the last two weeks, process engine hacker Roman Smirnov and Javascript wizzard super magician Nico Rehwaldt have been focusing on camunda cockpit. They have added a couple of features and refined the cockpit plugin infrastructure.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nThere is process definition summary plugin which visualizes the state of a process definition using green and red dots (red = failed jobs):</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-Z-IkIG4UezQ/Uahw_XbmfEI/AAAAAAAAAII/PTfQNyACrKE/s1600/summary.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"153\" src=\"http://2.bp.blogspot.com/-Z-IkIG4UezQ/Uahw_XbmfEI/AAAAAAAAAII/PTfQNyACrKE/s640/summary.png\" width=\"640\" /></a></div>\n<div>\n<br /></div>\n<div>\nOn the process definition details page we now have process instance table:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-D44PYSRGPUE/UahxfbfIoGI/AAAAAAAAAIQ/uHG-XzZz8rk/s1600/process-definition.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"194\" src=\"http://1.bp.blogspot.com/-D44PYSRGPUE/UahxfbfIoGI/AAAAAAAAAIQ/uHG-XzZz8rk/s200/process-definition.png\" width=\"200\" /></a></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\nWe now have an increasingly powerful and flexible client side-architecture in place which will now allow us to implement interesting new features and start working on usability and layout of existing features. Read the full client-side plugin story at&nbsp;<a href=\"http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin\">http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin</a>&nbsp;(section \"The client side\"). Also check out our client-side test infrastructure using Karma and Node.js: see <a href=\"https://github.com/camunda/camunda-bpm-platform/blob/master/README.md\">README.md</a>&nbsp;and <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/master/webapps/cockpit/cockpit-webapp/src/test/js\">sources</a>.</div>\n<div>\n<br /></div>\n<h3>\nIncident infrastructure in Process Engine (Work In Progress)</h3>\n<div>\nWe started work on a new Infrastructure for incidents in the process engine. This project has 3 goals:</div>\n<div>\n<br />\n<ol>\n<li>Provide an abstraction over different \"notable\" events that can happen during process execution.&nbsp;</li>\n<li>Provide an extensible, event-oriented API for handling such incidents.</li>\n<li>Provide a default implementation for incident event handlers which writes incidents to the database.</li>\n</ol>\n<div>\nCurrently we provide incidents for failed jobs. Failed job incidents are raised when automatic retries for a Job (Timer or Asynchronous continuation) have elapsed. The incident indicates that the corresponding execution is stuck and will not continue automatically. Administrative action is necessary. The incident is resolved, when the job is executed manually or when the retries for the corresponding job are reset to a value &gt; 0. In the future, we plan on providing features for raising additional kinds of incidents. Examples are the fact that a process instance has entered a certain task, that an error boundary has been triggered or that a process instance took to long to complete.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nIncident handling is extensible. The default implementation writes incidents to the database such that they can be queried:</div>\n<div>\n<br /></div>\n<div>\n<pre style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #333333; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code style=\"background-color: transparent; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 0px; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 0px;\">runtimeService.createIncidentQuery()\n  .processDefinitionId(\"someDefinition\")\n  .list();</code></pre>\n</div>\n<div>\n<br /></div>\n<div>\nIn cockpit we can now visualize different kinds of incidents in the same way and allow users to define for a given process definition what constitutes an \"incident\".</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-6RECUsxACQ4/Uah6lFBMzdI/AAAAAAAAAIw/HIuSf7wc7Y0/s1600/incidents.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" height=\"118\" src=\"http://2.bp.blogspot.com/-6RECUsxACQ4/Uah6lFBMzdI/AAAAAAAAAIw/HIuSf7wc7Y0/s400/incidents.png\" width=\"400\" /></a></div>\n<div>\n</div>\n<div>\n<br /></div>\n<div>\nWe also support recursively raising incidents for super process instances and correlating them to the call activity which has invoked the process instance in which the incident occurred. This is used by the cockpit tool for visualizing the state of a process definitions (and instances). &nbsp;The recursive nature of incidents will allow the cockpit tool to provide drill-down features.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-wBOg-yj-Fnc/Uah6auTNi8I/AAAAAAAAAIg/sxM1I6QG_70/s1600/drill-down.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"221\" src=\"http://2.bp.blogspot.com/-wBOg-yj-Fnc/Uah6auTNi8I/AAAAAAAAAIg/sxM1I6QG_70/s320/drill-down.png\" width=\"320\" /></a></div>\n<div>\n<br /></div>\n</div>\n<div>\nThere is an extensible API for handling incidents which allows you to replace or enhance the default behavior. For example, you could send an email to an administrator if an incident inside a given process definition is raised.</div>\n<div>\n<br /></div>\n<div>\nRead the doc on incidents:&nbsp;<a href=\"http://docs.camunda.org/latest/guides/user-guide/index.html#process-engine-incidents\">http://docs.camunda.org/latest/guides/user-guide/index.html#process-engine-incidents</a></div>\n<h3>\nAdditions to the REST Api</h3>\n<div>\nThorben has done some additions to the REST API, checkout&nbsp;</div>\n<div>\n<ul>\n<li>Better exception messages.</li>\n<li>Execution Queries.</li>\n<li>Process instance /execution variables.</li>\n</ul>\n<div>\nErrors are now also provided in JSON format:</div>\n</div>\n<div>\n<br /></div>\n<div>\n<code style=\"background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; line-height: 20px; padding: 2px 4px; white-space: nowrap;\">{\"type\" : \"SomeExceptionClass\", \"message\" : \"a detailed message\"}.</code></div>\n<div>\n<br /></div>\n<div>\nYou can modify multiple process variables in a single request:</div>\n<div>\n<br /></div>\n<div>\n<span class=\"ng-scope\" style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\"></span><br />\n<div class=\"ng-scope\" style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 10px;\">\nPOST&nbsp;<code style=\"background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 2px 4px; white-space: nowrap;\">/process-instance/aProcessInstanceId/variables</code></div>\n<span class=\"ng-scope\" style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\"></span><br />\n<div class=\"ng-scope\" style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 10px;\">\nRequest body:</div>\n<span class=\"ng-scope\" style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\"></span><br />\n<pre class=\"ng-scope\" style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #333333; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code style=\"background-color: transparent; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 0px; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 0px;\">{\"modifications\": [\n    {\"name\": \"aVariable\",\n     \"value\": \"aValue\"},\n    {\"name\": \"anotherVariable\",\n     \"value\": 42}\n    ],\n\"deletions\": [\n    \"aThirdVariable\", \"FourthVariable\"\n]}</code></pre>\n</div>\n<div>\n<br /></div>\n<div>\nOr you can address individual process variables through PUT/ GET / DELETE:</div>\n<div>\n<span style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\">PUT&nbsp;</span><code style=\"background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; line-height: 20px; padding: 2px 4px; white-space: nowrap;\">/execution/anExecutionId/localVariables/aVarName</code></div>\n<div>\n<span style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\">GET&nbsp;</span><code style=\"background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; line-height: 20px; padding: 2px 4px; white-space: nowrap;\">/execution/anExecutionId/localVariables/aVarName</code></div>\n<div>\n<span style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\">DELETE&nbsp;</span><code style=\"background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; line-height: 20px; padding: 2px 4px; white-space: nowrap;\">/execution/anExecutionId/localVariables/aVarName</code></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7367418979937935189/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "532537400394326711",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-24T18:58:00+02:00",
   "updated": "2013-11-22T11:01:43+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzg1MTE0NTAzNzkyCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/php-sdk-for-camunda-bpm-new-incubation.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/532537400394326711",
   "title": "PHP SDK for camunda BPM: new Incubation Project started",
   "content": "If you want to do BPM / Workflow and BPMN 2.0 in PHP then we have good news for you: as part of our camunda BPM polyglot initiative we started a new incubation project which aims at providing a <a href=\"http://camunda.github.io/camunda-bpm-php-sdk/\">PHP SDK for camunda BPM</a>. This SDK will facilitate the development of <a href=\"http://php.net/\">PHP</a>-based applications that use the camunda BPM middleware services. The project will provide a client library which authenticates against the REST Api and provide PHP developers with a native API for interacting with the process engine:<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-wR_7PJzzB6o/UZ-edtQnp9I/AAAAAAAAAH0/y5Zt_XNiKZY/s1600/php.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"220\" src=\"http://4.bp.blogspot.com/-wR_7PJzzB6o/UZ-edtQnp9I/AAAAAAAAAH0/y5Zt_XNiKZY/s400/php.png\" width=\"400\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\nWhile <b>the camunda BPM project stays&nbsp;focused&nbsp;on Java as primary programming language</b>, we believe that it is important to support developers that use other programming languages and give them access to the BPMN 2.0 process engine technology, without having to rewrite that technology in every programming language.<br />\n<br />\nThe main developer on the project is Stefan Hentschel who has a great deal of experience developing PHP applications.<br />\n<br />\nThe project will provide 3 main artifacts:<br />\n<br />\n<ol>\n<li>A PHP client library for the REST API,</li>\n<li>Documentation including Getting stated, Userguide and PHP Api Docs,</li>\n<li>A PHP demo application which showcases the features of the Api.&nbsp;</li>\n</ol>\n<br />\nAs additional topics we might look into OAuth 2.0 authentication for the REST API and external service tasks (a facility for implementing service tasks externally and polling the process engine for new task instances. This will enable you to code service tasks directly inside the PHP client&nbsp;application).<br />\n<br />\nIf you are interested in contributing to this project, please talk to us on the developers' mailing list:<br />\n<a href=\"https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-dev\">https://groups.google.com/forum/?fromgroups#!forum/camunda-bpm-dev</a><br />\n<br />\n<br />\nJira:<br />\n<a href=\"https://app.camunda.com/jira/browse/CIS/component/12056\">https://app.camunda.com/jira/browse/CIS/component/12056</a><br />\n<br />\n<br />\n<br />\nGithub repository:<br />\n<a href=\"https://github.com/camunda/camunda-bpm-php-sdk\">https://github.com/camunda/camunda-bpm-php-sdk</a><br />\n<br />",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "7",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/532537400394326711/comments"
   },
   "labels": [
    "php",
    "polyglot"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "3219850972417106272",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-17T16:07:00+02:00",
   "updated": "2014-11-25T16:31:42+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI5NTAyMDY3Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/extending-camunda-cockpit-through.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3219850972417106272",
   "title": "Extending camunda Cockpit through Plugins",
   "content": "<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-3aUtRwmI7r0/UZYiaqXKtnI/AAAAAAAAAIE/uQJtXCXHAeg/s1600/cockpit-plugin-yea.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"282\" src=\"http://3.bp.blogspot.com/-3aUtRwmI7r0/UZYiaqXKtnI/AAAAAAAAAIE/uQJtXCXHAeg/s400/cockpit-plugin-yea.png\" width=\"400\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">camunda Cockpit with a plugin. Yeaaah.</td></tr>\n</tbody></table>\n<br />\nAs we have seen in the past, it is impossible for camunda Cockpit ---our process monitoring tool--- to satisfy all needs, out of the box. That is why we have long thought about providing it with an appopriate extension mechanism that empoweres users to fit the tool to their very own monitoring needs.<br />\n<br />\nWith the latest relase of camunda BPM a first version of a plugin system for camunda Cockpit is finally here. So what is it about? Simply spoken it is about extending the cockpit GUI with custom views on everything that runs with camunda BPM. Processes, process instances, deployments, tasks... you name it. That may be accomplished by providing backend services that execute custom queries against an engine database. In addition, the backend services can also execute custom engine commands. A colleague already promised me to exploit the full powers of the mechanism in a&nbsp;<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/ChuckNorris+Plugin\" target=\"_blank\">Chuck Norris plugin</a>. <a href=\"http://camunda.org/\" target=\"_blank\">camunda BPM engines</a> around the world, watch out.<br />\n<br />\nI created an article on&nbsp;<a href=\"http://docs.camunda.org/latest/real-life/how-to/#cockpit-how-to-develop-a-cockpit-plugin\" target=\"_blank\">how to develop a plugin</a>&nbsp;for everyone who is interested in all the details.&nbsp;Another good start to get right into the matter may be the <a href=\"https://github.com/Nikku/cockpit-sample-plugin\" target=\"_blank\">sample plugin</a>&nbsp;that gets developed in the article.<br />\n<br />\nThe whole plugin matter is brand new and you can expect more source code, documentation and articles on the matter. Up to then we welcome your feedback on our <a href=\"https://groups.google.com/forum/#!forum/camunda-bpm-dev\" target=\"_blank\">dev mailing list</a>.",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3219850972417106272/comments"
   },
   "labels": [
    "cockpit",
    "how-to",
    "plugins"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8680626554970795984",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-16T15:49:00+02:00",
   "updated": "2014-11-25T16:29:15+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI5MzU1OTEzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/camunda-bpm-700-alpha4-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8680626554970795984",
   "title": "camunda BPM 7.0.0-alpha4 released",
   "content": "Release early and release often. Today we bring you<a href=\"http://www.camunda.org/download/\"> the next release of camunda BPM (7.0.0-alpha4)</a>. The Highlights are:<br />\n<ul>\n<li><a href=\"http://camundabpm.blogspot.de/2013/05/extending-camunda-cockpit-through.html\">First cut of new plugin API for camunda cockpit</a>.</li>\n<li>Added message correlation to REST API.</li>\n<li><a href=\"http://docs.camunda.org/guides/installation-guide/\">Support for shared process engine in IBM Websphere distribution</a> (enterprise customers only).</li>\n</ul>\n<div>\n<br />\nRead the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12890\">full release notes</a> in Jira.<br />\n<br /></div>\n<h3>\nMessage correlation in REST API</h3>\n<div>\nWith the previous release we added a message correlation method to the Java API. With this release we bring the new functionality&nbsp;to the REST API. (<a href=\"http://docs.camunda.org/api-references/rest/#!/message/post-message\">Read the docs</a>).</div>\n<div>\n<br /></div>\n<div>\nThe API is pretty straight forward, just execute a POST to the<span style=\"background-color: white; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;\">&nbsp;</span><code style=\"background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; line-height: 20px; padding: 2px 4px; white-space: nowrap;\">/message</code>&nbsp;resource. Example:&nbsp;</div>\n<div>\n<br /></div>\n<div>\n<pre class=\"ng-scope\" style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #333333; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code style=\"background-color: transparent; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 0px; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 0px;\">{\"messageName\" : \"aMessage\",\n\"businessKey\" : \"aBusinessKey\",\n\"correlationKeys\" : {\n    \"aVariable\" : \"aValue\"\n},\n\"processVariables\" : {\n    \"aVariable\" : \"aNewValue\",\n    \"anotherVariable\" : true\n}}</code></pre>\nThis allows correlating a message to an existing process instance (or start a new process instance) in a single, atomic request.</div>\n<div>\n<br /></div>\n<div>\nThe corresponding Java Api call looks like this:</div>\n<div>\n<br /></div>\n<div>\n<pre class=\"ng-scope\" style=\"background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #333333; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 10px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;\"><code style=\"background-color: transparent; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 0px; color: inherit; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 12px; padding: 0px;\">Map<string object=\"\"> correlationKeys = new HashMap<string object=\"\">();\ncorrelationKeys.put(\"aVariable\", \"aValue\");\n    \nMap<string object=\"\"> processVariables = new HashMap<string object=\"\">();\nprocessVariables.put(\"aVariable\", \"aNewValue\");\nprocessVariables.put(\"anotherVariable\", true);\n\n\nruntimeService.correlateMessage(\"aMessage\", \"aBusinessKey\", correlationKeys, processVariables);</string></string></string></string></code></pre>\n</div>\n<h3>\nWhat's next?</h3>\n<div>\nNow that we have the infrastructure ready for writing cockpit plugins, we can start implementing a bunch of awesome features in cockpit. We will now also start work on the login and security modules for the&nbsp;web applications.</div>\n<div>\n<br /></div>\n<div>\nOn top of that, we will continue work on the REST API and the Websphere distribution.</div>\n<div>\n<br /></div>\n<div>\nRead the full <a href=\"http://camunda.org/roadmap/\">Roadmap</a>.</div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8680626554970795984/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "4396900964801474024",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-14T10:08:00+02:00",
   "updated": "2014-12-11T14:14:14+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE4MzAzNjU0Njg2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/camunda-bpm-70-on-weblogic-12c.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4396900964801474024",
   "title": "camunda BPM 7.0 on WebLogic 12c",
   "content": "If we go <a href=\"http://camundabpm.blogspot.de/2013/05/camunda-vs-oracle-shootout-roadshow.html\" target=\"_blank\">on tour together with Oracle</a>&nbsp;I think we have to have <a href=\"http://www.camunda.org/\">camunda BPM</a> running on the Oracle WebLogic application server 12c (WLS in short). And one of our enterprise customers asked - so I invested a&nbsp;Sunday&nbsp;and got it running (okay - to be honest - I needed quite some help from our Java EE server guru&nbsp;<a href=\"http://camunda.org/community/team.html\">Christian</a>). In this blog post I give a step by step description how run camunda BPM on WLS. Please note that this is not an official distribution (which would include a <a href=\"http://camundabpm.blogspot.de/2013/04/camunda-bpm-700-alpha2-released.html\">sophisticated QA</a>, a <a href=\"http://docs.camunda.org/latest/\">comprehensive documentation</a> and a <a href=\"http://www.camunda.org/release/camunda-bpm/\">proper distribution</a>) - it was my personal hobby. And I did not fire the whole test suite agains WLS - so there might be some issues. We will do the real productization as soon as we have a customer for it (let us know if this is&nbsp;interesting&nbsp;for you).<br />\n<br />\n<a name='more'></a><b>Update (March 31, 2014)</b><br />\n<span style=\"color: red;\"><br /><span style=\"font-size: large;\">\nWith camunda BPM 7.1, WebLogic 12c is now officially supported. See our <a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-supported-environments\">supported environments</a> for more details. Some links below do no longer work.</span></span><br />\n<h3>\nNecessary steps</h3>\n<div>\nAfter installing and starting up WLS (I used the <a href=\"http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-main-097127.html\" target=\"_blank\">zip distribution of WLS 12c</a>&nbsp;by the way) you have to do:</div>\n<br />\n<ol>\n<li>Add a datasource</li>\n<li>Add shared libraries</li>\n<li>Add a resource adapter (for the <a href=\"https://app.camunda.com/confluence/display/foxUserGuide/The+Job+Executor\" target=\"_blank\">Job Executor</a> using a proper WorkManager from WLS)</li>\n<li>Add an EAR starting up <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine\" target=\"_blank\">one process engine</a></li>\n<li>Add a WAR file containing the <a href=\"http://docs.camunda.org/latest/api-references/rest/\" target=\"_blank\">REST API</a></li>\n<li>Add other WAR files (e.g. cockpit) and your own <a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-applications\" target=\"_blank\">process applications</a></li>\n</ol>\n<div>\nActually that sounds more work to do than it is ;-) So let's get started:</div>\n<h3>\nAdd a datasource</h3>\n<div>\nAdd a datasource via the Administration Console (or any other convenient way on WLS - I should admit that personally I am not the WLS expert). Make sure that you target it on your server - this is not done by default:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<a href=\"http://1.bp.blogspot.com/-ZATZj3K2AOI/UZEVcS5n4wI/AAAAAAAAAC8/Snmy_X18iGE/s1600/datasource1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\">\n<img border=\"0\" src=\"http://1.bp.blogspot.com/-ZATZj3K2AOI/UZEVcS5n4wI/AAAAAAAAAC8/Snmy_X18iGE/s200/datasource1.png\" height=\"146\" width=\"200\" />&nbsp;</a><a href=\"http://3.bp.blogspot.com/-ht2xOtEikrs/UZEVchDV42I/AAAAAAAAADA/lfE2QM7e-eg/s1600/datasource2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-ht2xOtEikrs/UZEVchDV42I/AAAAAAAAADA/lfE2QM7e-eg/s200/datasource2.png\" height=\"152\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br /></div>\n<h3>\nWhich camunda distribution do I use?</h3>\n<div>\nBefore we can install the camunda BPM platform on WLS we have to download it. But there is no WLS distribution yet. Hence we can leverage the existing distributions for other Java EE containers, I use the Glassfish distribution as it is technically pretty close to WLS.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nUnfortunately I had small issues with the current alpha3 version on WLS - which I <a href=\"https://github.com/camunda/camunda-bpm-platform/commit/fefc37027fe4d8db332a62c95f981ab938a5c61e\" target=\"_blank\">fixed on a branch</a> and try to convince the team to apply them to alpha4. So for the moment you have to build a patched alpha3 from this branch: <a href=\"https://github.com/camunda/camunda-bpm-platform/tree/wls-prototype-7.0.0-alpha3/distro/wls12c\">https://github.com/camunda/camunda-bpm-platform/tree/wls-prototype-7.0.0-alpha3/distro/wls12c</a>. If you do not want to build it by hand here is a ZIP file containing the relevant artifacts:</div>\n<div>\n<br /></div>\n<div style=\"text-align: center;\">\n<b><span style=\"font-size: large;\">DOWNLOAD camunda BPM for WLS (</span></b><span style=\"color: red; text-align: start;\">with camunda BPM 7.1, WebLogic 12c is now officially supported. See our&nbsp;</span><a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-supported-environments\" style=\"text-align: start;\">supported environments</a><span style=\"color: red; text-align: start;\">&nbsp;for more details. The link does no longer work.</span><b><span style=\"font-size: large;\">)</span></b></div>\n<div>\n<br /></div>\n<div>\nNow we will install the artifacts step by step.</div>\n<h3>\nAdd shared libraries</h3>\n<div>\nJust copy the provided libraries (the core engine, necessary dependencies like Apache MyBatis and interfaces for the Ressource Adapater) into your domain \"lib\" folder:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-o240VaVQlR0/UZHXV00C8kI/AAAAAAAAADU/9yVNmxnfj_g/s1600/shared-libs.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-o240VaVQlR0/UZHXV00C8kI/AAAAAAAAADU/9yVNmxnfj_g/s200/shared-libs.png\" height=\"85\" width=\"200\" /></a></div>\n<h3>\nAdd&nbsp;resource&nbsp;adapater</h3>\n<div>\nWe use a JCA (Java EE Connector Architecture) resource adapter to be fully Java EE compliant. This component is basically responsible to do something we call Job handling. Basically we need a thread pool to query the database if any timers or the like are due. See more details in the <a href=\"https://app.camunda.com/confluence/display/foxUserGuide/The+Job+Executor\" target=\"_blank\">Job Executor</a>&nbsp;docs.<br />\n<br />\nThe resource adapter is deployed as RAR archive. I used the archive provided for Glassfish - as there are no changes necessary. You can deploy it via the <a href=\"http://localhost:7001/console/\">Administration Console</a> without problems:<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-MYkRBqCgDPU/UZHeOmV16QI/AAAAAAAAAD8/3XN7HXM3kpo/s1600/rar-deployment.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-MYkRBqCgDPU/UZHeOmV16QI/AAAAAAAAAD8/3XN7HXM3kpo/s200/rar-deployment.png\" height=\"145\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<b>Important</b>: You now have to adjust the configuration. Change the deployment order (the resource adapter should be deployed before other stuff), set a JNDI name and allow global access to classes (actually I still wonder how providing the RAR classes to EAR classloaders really works in WLS as defined in the JCA specs - I didn't get it to work in the prototype so I added the stuff as shared libraries - any hints from WLS experts are welcome!):</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-auCGRBj-IRY/UZHeM6r8TZI/AAAAAAAAADk/Ekpp7otTjG8/s1600/rar-config1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-auCGRBj-IRY/UZHeM6r8TZI/AAAAAAAAADk/Ekpp7otTjG8/s200/rar-config1.png\" height=\"159\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAnd you have to provide an outbound connection factory which later can be used via JNDI from our process engine:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-Etrc-jv-EXE/UZHeNchZr2I/AAAAAAAAADo/qxE6w0ZOjxA/s1600/rar-config2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-Etrc-jv-EXE/UZHeNchZr2I/AAAAAAAAADo/qxE6w0ZOjxA/s200/rar-config2.png\" height=\"151\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAnd last but not least we need a <a href=\"http://docs.oracle.com/cd/E11035_01/wls100/config_wls/self_tuned.html\" target=\"_blank\">Weblogic WorkManager</a>&nbsp;for our thread pool:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-HLjxrhIi2ro/UZHeN165hwI/AAAAAAAAADw/K34PJybTd5U/s1600/rar-config3.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-HLjxrhIi2ro/UZHeN165hwI/AAAAAAAAADw/K34PJybTd5U/s320/rar-config3.png\" height=\"237\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThat's it. Next step :-)</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<h3>\nAdd EAR starting a process engine</h3>\n<div>\nI have build a custom EAR for WLS to provide a WLS specific deployment descriptor necessary to wire the EAR with the RAR correctly - but I will skip the details here. The EAR basically only does one thing: It starts up one engine - therefor it does not have more content than the deployment descriptor and a \"<a href=\"https://github.com/camunda/camunda-bpm-platform/blob/wls-prototype-7.0.0-alpha3/distro/wls12c/service/src/main/resources/META-INF/bpm-platform.xml\">bpm-platform.xml</a>\" file containing the configuration of that process engine. Deploy this with the wizard again:</div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-4t1A3Wt_wFI/UZHh_hx72GI/AAAAAAAAAEM/I6G728l9ZuA/s1600/ear-deployment.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-4t1A3Wt_wFI/UZHh_hx72GI/AAAAAAAAAEM/I6G728l9ZuA/s200/ear-deployment.png\" height=\"159\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThis time there is not much to configure - I would suggest &nbsp;that you change the deployment order to 75 - then it gets deployed after the RAR but before other applications.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nIf you want - you can have a look in the JNDI tree - you should see the started process engine there:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-9ZpO11gHC5g/UZHiumhBBKI/AAAAAAAAAEU/pMH7gWUCuZI/s1600/JndiView.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-9ZpO11gHC5g/UZHiumhBBKI/AAAAAAAAAEU/pMH7gWUCuZI/s200/JndiView.png\" height=\"170\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<h3>\nDeploy REST API as WAR</h3>\n<div>\nNow we can deploy the <a href=\"http://docs.camunda.org/api-references/rest/\">REST API</a>, this is a simple WAR (leveraging JAX-RS) providing a REST interface to the already running process engine of the server. To be precise it provides an interface to all running process engines of the current server - but that's a story for a different post :-)</div>\n<div>\n<br /></div>\n<div>\nYou can deploy the WAR file (I again used the Glassfish one without modifications) with the wizard - I think you practiced that enough by now. Just make sure you deploy it as \"application\" - not as \"library\" as the wizard tried to trick me here.</div>\n<div>\n<br /></div>\n<div>\nFor example you can now query all existing process engines:&nbsp;<span style=\"font-family: 'Courier New', Courier, monospace;\"><span style=\"font-size: x-small;\"><a href=\"http://localhost:7001/engine-rest/engine/\">http://localhost:7001/engine-rest/engine/</a>. </span></span>You can see get the one existing engine:</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-lB8oREQgJxM/UZHka_ivCyI/AAAAAAAAAEg/4YNAG4ZTTNs/s1600/rest1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-lB8oREQgJxM/UZHka_ivCyI/AAAAAAAAAEg/4YNAG4ZTTNs/s320/rest1.png\" height=\"140\" width=\"320\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nCongratulations - now on you have a platform working correctly within WLS - fully Java EE 6 compliant - and without any hazzle for starting your process engine. Amazing - isn't it?&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<h3>\nDeploy cockpit and tasklist</h3>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nSince tasklist and cockpit are HTML5 web applications using the REST API in the background you can easily deploy them as well as soon as you have the REST API running. Do that now (use the wizard again) and you can access them via the browser:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n</div>\n<ul>\n<li><a href=\"http://localhost:7001/cockpit/\">http://localhost:7001/cockpit/</a></li>\n<li><a href=\"http://localhost:7001/tasklist/\">http://localhost:7001/tasklist/</a>&nbsp;(I locally had a strange problem during login - it basically only worked with Chrome at the moment. Unfortunately no time to dig deeper - but at latest when we productize it we will figure that out! Or you do :-)).&nbsp;</li>\n</ul>\n<h3>\nDeploy Process Applications</h3>\n<div>\nNow you can deploy normal process applications - as e.g. described in the <a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/\">Getting Started Guide</a>. Enjoy!</div>\n<div>\n<br /></div>\n<div>\nPlease note that there is one limitation with the current codebase on WLS: The classpath scanning we do in order to find process definition files automatically does not work on WLS. Hence you can not auto-discover your process definitions but have to configure them by hand in the META-INF/processes.xml:</div>\n<div>\n<br /></div>\n<div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&lt;process-application</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; xmlns=\"http://www.camunda.org/schema/1.0/ProcessApplication\"</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;process-archive name=\"pa\"&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;process-engine&gt;default&lt;/process-engine&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; <b>&lt;process&gt;invoice.bpmn&lt;/process&gt;</b> &nbsp;&nbsp;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;properties&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; &lt;property name=\"isDeleteUponUndeploy\"&gt;false&lt;/property&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &nbsp; <b>&lt;property name=\"isScanForProcessDefinitions\"&gt;<span style=\"color: red;\">false</span>&lt;/property&gt;</b></span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &nbsp; &lt;/properties&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&nbsp; &lt;/process-archive&gt;</span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\">&lt;/process-application&gt;</span></div>\n</div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace; font-size: x-small;\"><br /></span></div>\n<h3>\n<span style=\"font-family: inherit;\">Some Screenshots</span></h3>\n<div>\n<span style=\"font-family: inherit;\">To prove that it was working :-) See cockpit showing the invoice example process application:</span></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<a href=\"http://1.bp.blogspot.com/-O1yBnux3OX8/UZHwN3qwKqI/AAAAAAAAAEw/e06uI0AGqmU/s1600/cockpit.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-O1yBnux3OX8/UZHwN3qwKqI/AAAAAAAAAEw/e06uI0AGqmU/s200/cockpit.png\" height=\"171\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nThe tasklist:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<a href=\"http://3.bp.blogspot.com/-xYkpbtYyvnw/UZHwgHXWkxI/AAAAAAAAAE4/vqItM800O8c/s1600/tasklist.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-xYkpbtYyvnw/UZHwgHXWkxI/AAAAAAAAAE4/vqItM800O8c/s200/tasklist.png\" height=\"129\" width=\"200\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nAnd starting a process instance via REST:</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<a href=\"http://4.bp.blogspot.com/-zrgAIhZoqlo/UZHwoJ2jvPI/AAAAAAAAAFA/7QNUY9D_EYY/s1600/rest2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-zrgAIhZoqlo/UZHwoJ2jvPI/AAAAAAAAAFA/7QNUY9D_EYY/s320/rest2.png\" height=\"80\" width=\"320\" /></a></div>\n<h3>\n<span style=\"font-family: inherit;\">Feedback welcome</span></h3>\n<div>\n<span style=\"font-family: inherit;\">We welcome every feedback on this - best use our forum (</span><a href=\"http://camunda.org/community/forum.html\">http://camunda.org/community/forum.html</a>, can be used by sending mails to it as well: <a href=\"mailto:camunda-bpm-users@googlegroups.com\">camunda-bpm-users@googlegroups.com</a>). Let us now if you want to use this in production - then we can place a proper enterprise distribution on our roadmap...</div>\n</div>\n",
   "author": {
    "id": "g110188196845420736381",
    "displayName": "Bernd Rücker",
    "url": "https://www.blogger.com/profile/05583980547099330957",
    "image": {
     "url": "//lh5.googleusercontent.com/-DPWMxhCoSJ4/AAAAAAAAAAI/AAAAAAAAACg/PcAOW3pq_Gw/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4396900964801474024/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "3436746826171771153",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-07T14:39:00+02:00",
   "updated": "2013-05-07T14:39:11+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzY3OTMwMzUxMDM3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/camunda-vs-oracle-shootout-roadshow.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3436746826171771153",
   "title": "camunda vs. Oracle: Shootout Roadshow",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-T7kU7QSe4U0/UYj07DY8VmI/AAAAAAAAAEA/qUNIQdpIJZQ/s1600/cowboy_duell_main.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-T7kU7QSe4U0/UYj07DY8VmI/AAAAAAAAAEA/qUNIQdpIJZQ/s1600/cowboy_duell_main.gif\" /></a></div>\n<br />\n<br />\nHigh Noon in BPM City: not a soul walks the dusty main road and the sun glares mercilessly onto El Camundo and his opponent – the Oracle of the Desert. The wireless mouse still rests in his holster, his hand hovers above it – only the slightest quiver reveals Camundo's tension. Pearly beads of sweat are glistening on Oracle's face. Who will be the first to shoot off his token?<br />\n<br />\nThis is close to what you can expect from our <a href=\"http://www.opitz-consulting.com/go/26-16-1281\">Shootout Roadshow</a>, that we will run together with Oracle and Opitz Consulting (the latter as a neutral presenter). The idea is to set camunda's and Oracle's BPM systems against each other and get a direct comparison. On the one hand the well-established and powerful infrastructure, on the other hand Oracle's tool. Just kidding, I just can't help myself. Seriously though: obviously Oracle as well as camunda offer serious and high-quality BPM solutions. What then are the similarities, what the &nbsp;differences? Which solutions is eligible for my specific project? This is less a question about which tool is the better, but more about which approach is the most suitable for a specific problem or business situation.<br />\n<br />\n<br />\nDates:<br />\n10.06.2013 | Berlin<br />\n11.06.2013 | Hamburg<br />\n25.06.2013 | Cologne<br />\n26.06.2013 | Bad Homburg<br />\n27.06.2013 | Munich<br />\n<br />\nFurther information and registration: <a href=\"http://www.opitz-consulting.com/go/26-16-1281\">http://www.opitz-consulting.com/go/26-16-1281</a><br />\n<br />\nWe are pleased that Oracle is prepared to participate in this event and will be present with some of its qualified representatives. I do believe that it will be an exciting few days without one side belittling the other, but where real BPM enthusiasts will describe why they love their product and which of its strengths they believe to be especially relevant and during which the Optiz team can report from their experiences with these products and enough time will be given for your questions (feel free to be critical). Definitely a marketing event (hey, free coffee!), but not the typical empty yes-we-are-great-stuff that one usually has to endure. It'll be cool.<br />\n",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/3436746826171771153/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "335727925246347123",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-05-03T16:24:00+02:00",
   "updated": "2014-11-25T16:08:43+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI4MTIzMDg2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/05/camunda-bpm-700-alpha3-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/335727925246347123",
   "title": "camunda BPM 7.0.0-alpha3 released",
   "content": "<p><a href=\"http://www.camunda.org/download/\">camunda BPM 7.0.0-alpha3</a> is out now! It packs a bunch of new features such as support for Spring Process Applications and correlation via the engine's Java API.</p>\n<p>\nFirst things first: Get it <a href=\"http://www.camunda.org/download/\">here</a>!\n</p>\n<h3>Spring Process Applications</h3>\n<p>\nUse process engines, container-managed or embedded, from within your Spring application context (on Tomcat, Glassfish). See below an example from our <a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/spring-framework/\">getting started guide</a>:\n</p>\n<script src=\"https://gist.github.com/ThorbenLindhauer/5509274.js\"></script>\n\n<h3>Message correlation</h3>\n<p>\nBPMN offers two incoming message constructs that are supported by the engine: Message start events and intermediate catching message events. Now you have the possibility to deliver messages in one call. \n</p>\n<p>\nUse the RuntimeService#correlateMessage methods to correlate messages to executions waiting for a specific message or start a new process instance. You do not need to know any longer, whether you deliver the message for a start or intermediate event. Correlation is done based on process instance variables and business keys. Our <a href=\"http://docs.camunda.org/latest/api-references/bpmn20/#events-message-events\">documentation on message events</a> gives some details.\n</p>\n<p>\nShortly, we will also offer this through the REST API and publish a more detailed blog post covering this topic.\n</p>\n<h3>What else?</h3>\n<p>\n<p>\nA number of bug fixes. Check our <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&version=12790\">release notes</a> to see what ships in alpha3.\n</p>",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/335727925246347123/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "2927355627978551755",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-24T18:57:00+02:00",
   "updated": "2014-11-25T16:05:07+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI3OTA3MDcwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/camunda-bpm-incubation-space-launched.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2927355627978551755",
   "title": "camunda BPM incubation space launched with contribution by plexiti",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: left;\">\nI am happy to announce the official launch of the camunda BPM incubation space with the first large community contribution by <a href=\"http://plexiti.com/\">plexiti</a>.</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\nView it on github:&nbsp;</div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<a href=\"https://github.com/camunda/camunda-bpm-incubation\">https://github.com/camunda/camunda-bpm-incubation</a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<a href=\"https://github.com/camunda/camunda-bpm-fluent-testing\">https://github.com/camunda/camunda-bpm-fluent-testing</a></div>\n<div class=\"separator\" style=\"clear: both; text-align: left;\">\n<br /></div>\nThe goal of the camunda BPM incubation space is to promote the development of interesting new projects and ideas around BPM, BPMN and process engines.<br />\n<br />\nDue to the productization and stabilization focus in the camunda BPM core platform, we decided to&nbsp;separate out these&nbsp;experimental&nbsp;projects from the core platform. The core BPM platform is stable and maintained and can be found in the github repository&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-platform\">camunda-bpm-platform</a>. This is also the base for the supported (commercial)&nbsp;<a href=\"http://www.camunda.com/fox/product/community-vs-enterprise/\">camunda BPM platform product</a>.&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-incubation\">The camunda-bpm-incubation</a>&nbsp;repository contains a list of incubation projects which may be located in that repository itself or inside a different repository. We hope that this helps us finding a balance between being able to try out new innovative ideas (possibly in an unstructured or even unstable manner) but still being able to provide a stable \"core\" project. I think that this is also helpful for users of the project: users immediately see which parts of the project are stable and maintained and which other parts are still experimental.<br />\n<h3>\nPlexiti makes the first large&nbsp;community&nbsp;contribution to camunda BPM</h3>\n<div>\nThe first project started in the incubation space is located at&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-fluent-testing\">https://github.com/camunda/camunda-bpm-fluent-testing</a>&nbsp;and is a contribution by <a href=\"http://plexiti.com/\">plexiti</a>.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nPlexiti is an innovative company from Vienna / Austria and founded by <span style=\"font-family: inherit;\">Martin Schimak&nbsp;</span><span style=\"font-family: inherit;\">and&nbsp;</span><span style=\"font-family: inherit;\">Rafael Cordones. <a href=\"http://network.camunda.org/meetings/3\" target=\"_blank\">You can meet them at our jointly organized community event in Vienna</a>.</span></div>\n<div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<br /></div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<a href=\"https://groups.google.com/d/msg/camunda-bpm-dev/m8VDRnZe55A/YsZ2QwnFOPcJ\">Martin has presented the project on the camunda BPM DEV group</a>: &nbsp;</div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<br /></div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\nIt's an emerging little library aiming at easing tests when developing process applications. We reach out to</div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<ul>\n<li style=\"line-height: 17px;\">ease the readability and maintainability of process model tests and make the writing of process model tests more fluent and more fun</li>\n</ul>\n</div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<ul>\n<li style=\"line-height: 17px;\">make it even easier to mock the services available to a process instance than it already is</li>\n</ul>\n</div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\nFor that purpose, you can -&nbsp;<b>aspect 1&nbsp;</b>- write&nbsp;FEST assertions, e.g. like</div>\n</div>\n</div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<pre style=\"background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(204, 204, 204); color: #333333; line-height: 19px; margin-bottom: 15px; margin-top: 15px; overflow: auto; padding: 6px 10px; text-align: -webkit-auto; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: 0px; font-family: Helvetica; margin: 0px; padding: 0px; vertical-align: baseline;\"><span style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">assertThat</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">(</span><span style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">processInstance</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">).</span><span style=\"border: 0px; color: teal; margin: 0px; padding: 0px; vertical-align: baseline;\">is<wbr></wbr>WaitingAt</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">(</span><span style=\"border: 0px; color: #dd1144; margin: 0px; padding: 0px; vertical-align: baseline;\">\"review\"</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">);</span>\n<span style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">assertThat</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">(</span><span style=\"border: 0px; color: teal; margin: 0px; padding: 0px; vertical-align: baseline;\">task</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">).</span><span style=\"border: 0px; color: teal; margin: 0px; padding: 0px; vertical-align: baseline;\">isAssignedTo</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">(</span><span style=\"border: 0px; color: #dd1144; margin: 0px; padding: 0px; vertical-align: baseline;\"><wbr></wbr>\"piggie\"</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">);</span></span></pre>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\nbut you can also -&nbsp;<b>aspect 2</b>&nbsp;- query and drive \"the process\" via a somewhat more fluent API than currently available, e.g. like</div>\n</div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<pre style=\"background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(204, 204, 204); color: #333333; line-height: 19px; margin-bottom: 15px; margin-top: 15px; overflow: auto; padding: 6px 10px; text-align: -webkit-auto; vertical-align: baseline;\"><span style=\"border: 0px; font-family: Helvetica; margin: 0px; padding: 0px; vertical-align: baseline;\"><span style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">processInstance</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">.</span><span style=\"border: 0px; color: teal; margin: 0px; padding: 0px; vertical-align: baseline;\">task</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">().</span><span style=\"border: 0px; color: teal; margin: 0px; padding: 0px; vertical-align: baseline;\">complet<wbr></wbr>e</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">(</span><span style=\"border: 0px; color: #dd1144; margin: 0px; padding: 0px; vertical-align: baseline;\">\"approved\"</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">,</span> <span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">true</span><span style=\"border: 0px; font-weight: bold; margin: 0px; padding: 0px; vertical-align: baseline;\">);</span></span></pre>\n</div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\nYou can find a bit more documentation of what's currently possible in the&nbsp;<a href=\"https://github.com/camunda/camunda-bpm-fluent-testing/blob/master/README.md\" style=\"border: 0px; color: #6611cc; cursor: pointer; margin: 0px; padding: 0px; text-decoration: none; vertical-align: baseline;\" target=\"_blank\">README.md</a>&nbsp;of the github project.</div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<br /></div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\nWe are currently working to completely separate these two independent aspects and would like to contribute them into the&nbsp;<a href=\"http://camunda.org/\" style=\"border: 0px; color: #6611cc; cursor: pointer; margin: 0px; padding: 0px; text-decoration: none; vertical-align: baseline;\" target=\"_blank\">camunda.org</a>&nbsp;incubation space, e.g. as</div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<br /></div>\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<b>Project 1)</b>&nbsp;camunda-bpm-fluent-tests</div>\n</div>\n</div>\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<div style=\"border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<div style=\"background-color: white; border: 0px; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px; margin: 0px; padding: 0px; vertical-align: baseline;\">\n<b>Project 2</b>) camunda-bpm-fluent-engine-api</div>\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\n<br /></div>\n<h3>\nTry it out!</h3>\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\nSince today we have a running Hudson job that deploys snapshot builds to the camunda BPM nexus repository. This allows you to easily try out camunda-bpm-fluent-tests:</div>\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\n<br /></div>\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\nAdd the following maven dependency:</div>\n<br />\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;dependency&gt;<br />&nbsp; &lt;groupId&gt;org.camunda.bpm.incubation&lt;/groupId&gt;<br />&nbsp; &lt;artifactId&gt;camunda-bpm-fluent-engine-api&lt;/artifactId&gt;<br />&nbsp; &lt;version&gt;0.4-SNAPSHOT&lt;/version&gt;<br />&nbsp; &lt;scope&gt;test&lt;/scope&gt;<br />&lt;/dependency&gt;<br />&lt;dependency&gt;<br />&nbsp; &lt;groupId&gt;org.camunda.bpm.incubation&lt;/groupId&gt;<br />&nbsp; &lt;artifactId&gt;camunda-bpm-fluent-assertions&lt;/artifactId&gt;<br />&nbsp; &lt;version&gt;0.4-SNAPSHOT&lt;/version&gt;<br />&nbsp; &lt;scope&gt;test&lt;/scope&gt;<br />&lt;/dependency&gt;</span><br />\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\n<br /></div>\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\nAnd add the camunda BPM repository:</div>\n<div style=\"background-color: white; color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: 13px;\">\n<br /></div>\n<div>\n<span style=\"font-family: Courier New, Courier, monospace;\">&lt;repositories&gt;<br />&nbsp; &lt;repository&gt;<br />&nbsp; &lt;id&gt;camunda-bpm-nexus&lt;/id&gt;<br />&nbsp; &lt;name&gt;camunda-bpm-nexus&lt;/name&gt;<br />&nbsp; &lt;url&gt;https://app.camunda.com/nexus/content/groups/public&lt;/url&gt;<br /> &lt;/repository&gt; &lt;/repositories&gt;</span><br />\n<h2>\n</h2>\n<h3>\nMore contributions welcome!</h3>\n<span style=\"font-family: inherit; font-size: small; font-weight: normal;\">If you have an interesting idea for an incubation project, <a href=\"https://github.com/camunda/camunda-bpm-incubation/blob/master/README.md\">read the technical guidelines in Github</a> and <a href=\"https://groups.google.com/forum/?fromgroups=#!forum/camunda-bpm-dev\">talk to us on the DEV mailing list</a>!</span></div>\n</div>\n</div>\n</div>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "2",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2927355627978551755/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "6287768192203016535",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-24T10:02:00+02:00",
   "updated": "2013-04-24T10:13:06+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzY2NzkxMTg2MDUyCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/the-start-of-camundaorg-community-events.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6287768192203016535",
   "title": "The start of camunda.org community events",
   "content": "<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-QEpaHJiZRDs/UXeQf1HMc1I/AAAAAAAAACc/M8dyx9yK5NU/s1600/20130417_210530.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"150\" src=\"http://2.bp.blogspot.com/-QEpaHJiZRDs/UXeQf1HMc1I/AAAAAAAAACc/M8dyx9yK5NU/s200/20130417_210530.jpg\" width=\"200\" /></a></div>\n<br />\nLast week we had our first two camunda.org community kick-off events. On Wednesday we were at the Deutsche WertpapierService Bank AG in Frankfurt followed by an evening on Thursday at LVM Versicherung in Münster.<br />\nBoth companies successfully work with camunda BPM and have spoken of their experiences with the platform.<br />\nWe also got a chance to present the camunda project to groups of about 20 BPM enthusiasts and had open discussions about aims, preferences, likes and wishes.<br />\nA lot of positive feedback trickled through this week and more evenings with varying subjects will follow.<br />\nMake sure to sign up to our <a href=\"http://www.camunda.org/community/meetings.html\" target=\"_blank\">newsletter</a>&nbsp;to find out about what's happening next and check out some pictures below.<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-0KjU52oF-fw/UXeQi0dD2_I/AAAAAAAAACs/6AoUxfG1zyc/s1600/20130417_193617.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"240\" src=\"http://2.bp.blogspot.com/-0KjU52oF-fw/UXeQi0dD2_I/AAAAAAAAACs/6AoUxfG1zyc/s320/20130417_193617.jpg\" width=\"320\" /></a></div>\n<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-M6nrJU3epv4/UXeQh1LGs3I/AAAAAAAAACk/MKFQBzOpkdg/s1600/20130418_193848(0).jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"240\" src=\"http://2.bp.blogspot.com/-M6nrJU3epv4/UXeQh1LGs3I/AAAAAAAAACk/MKFQBzOpkdg/s320/20130418_193848(0).jpg\" width=\"320\" /></a></div>\n<br />\n<br />\nAnd last but not least, our partners <a href=\"http://plexiti.com/\" target=\"_blank\">Plexiti</a> just introduced camunda BPM at the JUG Barcelona. Thanks to Rafael Cordones for flying the camunda flag in Spain.<br />\n<br />\n<img height=\"240\" src=\"https://pbs.twimg.com/media/BIeiHhXCUAEyOJp.jpg:large\" width=\"320\" /><br />\n<br />\n<br />",
   "author": {
    "id": "g114958856302928747260",
    "displayName": "Nastasja Johnston",
    "url": "https://www.blogger.com/profile/09924962448140455402",
    "image": {
     "url": "//lh6.googleusercontent.com/-IthZQAQw36I/AAAAAAAAAAI/AAAAAAAAABM/ht1Hb4cFv3I/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/6287768192203016535/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "4015487596260696957",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-23T16:21:00+02:00",
   "updated": "2013-12-12T13:49:07+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzg2ODUyNTQ3NDkzCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/camunda-bpm-700-alpha2-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4015487596260696957",
   "title": "camunda BPM 7.0.0-alpha2 released",
   "content": "I am happy to announce the release of <a href=\"http://www.camunda.org/download/\">camunda bpm platform 7.0.0-alpha2</a>. This is the first camunda BPM release that contains a distribution for Glassfish Application Server. You can now download a complete open source BPM platform with fully compliant Java EE 6 integration!<br />\n<br />\n<a href=\"http://www.camunda.org/download/\">Download it now!</a><br />\n<h2>\nHighlights:</h2>\n<div>\n<ul>\n<li>Glassfish 3.x Distribution with Java EE 6 process engine integration</li>\n<li>New Job Executor Service with JCA 1.6 Integration</li>\n<li>Job Executor manageability through JMX</li>\n<li>New space for documentation:&nbsp;<a href=\"http://docs.camunda.org/\">http://docs.camunda.org/</a>&nbsp;with new <a href=\"http://docs.camunda.org/guides/installation-guide/\">installation&nbsp;guides</a>.</li>\n</ul>\n<div>\nI will dedicate a&nbsp;separate&nbsp;Blogpost to showcasing the Job Executor improvements in the following days.</div>\n<div>\n<br /></div>\n<div>\nIn addition, the release contains a set of small improvements and bug fixes. Read the <a href=\"https://app.camunda.com/jira/secure/ReleaseNote.jspa?projectId=10230&amp;version=12590\">Complete Release Notes</a>&nbsp;in JIRA.</div>\n</div>\n<div>\n<br /></div>\n<h2>\nMajor QA Infrastructure Improvements&nbsp;</h2>\n<div>\nProbably not as exciting for most people as for myself but I still think stuff like this deserves some attention :) We also made a lot of QA infrastructure improvements behind the scenes. For instance, we have made it a lot easier to run in-container (ie. inside JBoss / Glassfish / Tomcat) integration tests for both process engine and web applications.</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-iOSAIkeQqH4/UXaUXGxdwBI/AAAAAAAAAGs/_f8qzuOtBHs/s1600/qa-infrastructure.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-iOSAIkeQqH4/UXaUXGxdwBI/AAAAAAAAAGs/_f8qzuOtBHs/s1600/qa-infrastructure.png\" /></a></div>\n<div>\nThis allows us to run extensive in-container testsuites testing the Java EE 6 and Servlet integrations against all supported runtime containers and databases.&nbsp;</div>\n<h2>\nWhat's next?</h2>\n<div>\nFor the next release we plan:</div>\n<div>\n<ul>\n<li><a href=\"https://app.camunda.com/jira/secure/RapidBoard.jspa?rapidView=23&amp;view=planning&amp;selectedEpic=CAM-398\">Websphere distribution (enterprise customers only)</a></li>\n<li><a href=\"https://app.camunda.com/jira/secure/RapidBoard.jspa?rapidView=23&amp;view=planning&amp;selectedEpic=CAM-9\">Lots of additions to the REST-API</a></li>\n<li><a href=\"https://app.camunda.com/jira/secure/RapidBoard.jspa?rapidView=23&amp;view=planning&amp;selectedEpic=CAM-572\">camunda cockpit</a>: Nico and Roman will start working on the new cockpit plugin concept end of this week. This will lay the groundwork for future work on the cockpit tool. Cockpit will be \"the big thing\" for the 7.0 final release.</li>\n</ul>\n<div>\n<a href=\"http://www.camunda.org/download/\">Go get it!</a></div>\n</div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4015487596260696957/comments"
   },
   "labels": [
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "8450347935782874633",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-10T16:58:00+02:00",
   "updated": "2013-04-10T17:00:30+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzY1NjA2MDMwNjAzCm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/camunda-bpm-launch-party.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8450347935782874633",
   "title": "camunda BPM Launch Party",
   "content": "After launching our open source platform camunda BPM on 18th March, we gave it a proper welcoming to the BPM community last week. 55 people showed up to the launch party held at camunda HQ, which coincided with our 5th birthday.<br />\n<div>\nIt was a great night, during which the hard-working team around camunda BPM had the chance to demonstrate some of the platform's great features and advantages followed by good discussions with the guests afterwards.<br />\n<div>\nBut not only that, our foosball table, Wii and a fridge filled to the brim with beer made sure that the hard work also payed off with some well-deserved fun.</div>\n<div>\nTake a look at some pictures we took on the night and make sure to sign up<a href=\"http://www.camunda.org/community/meetings.html\" target=\"_blank\">&nbsp;here</a>&nbsp;for one of our future community events.</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-UrxMP-SPQqs/UWV93nnu5wI/AAAAAAAAABk/3bPBtVrquNA/s1600/P1170302.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://3.bp.blogspot.com/-UrxMP-SPQqs/UWV93nnu5wI/AAAAAAAAABk/3bPBtVrquNA/s320/P1170302.JPG\" width=\"240\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-OYgszxLihEs/UWV93SBlpKI/AAAAAAAAABo/T5lP14BgAh8/s1600/P1170301.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"180\" src=\"http://1.bp.blogspot.com/-OYgszxLihEs/UWV93SBlpKI/AAAAAAAAABo/T5lP14BgAh8/s320/P1170301.JPG\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-fEbDAiZIOEw/UWV94d98tRI/AAAAAAAAABs/VSaDJ2LbXpE/s1600/P1170362.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"240\" src=\"http://4.bp.blogspot.com/-fEbDAiZIOEw/UWV94d98tRI/AAAAAAAAABs/VSaDJ2LbXpE/s320/P1170362.JPG\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-DNqEuIDjcCY/UWV95CO4fAI/AAAAAAAAAB0/1SkxfquUBWA/s1600/P1170522.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"180\" src=\"http://2.bp.blogspot.com/-DNqEuIDjcCY/UWV95CO4fAI/AAAAAAAAAB0/1SkxfquUBWA/s320/P1170522.JPG\" width=\"320\" /></a></div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-xuQYFQG0784/UWV95ScuGhI/AAAAAAAAAB8/aOzTIc-HZW0/s1600/P1170541.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"180\" src=\"http://4.bp.blogspot.com/-xuQYFQG0784/UWV95ScuGhI/AAAAAAAAAB8/aOzTIc-HZW0/s320/P1170541.JPG\" width=\"320\" /></a></div>\n</div>\n",
   "author": {
    "id": "g114958856302928747260",
    "displayName": "Nastasja Johnston",
    "url": "https://www.blogger.com/profile/09924962448140455402",
    "image": {
     "url": "//lh6.googleusercontent.com/-IthZQAQw36I/AAAAAAAAAAI/AAAAAAAAABM/ht1Hb4cFv3I/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/8450347935782874633/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "634756565123110541",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-09T17:58:00+02:00",
   "updated": "2014-11-25T15:42:24+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI2NTQ0OTg2Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/new-camunda-bpm-community.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/634756565123110541",
   "title": "New: camunda BPM-Community",
   "content": "<br />\nProcess management is not a bureaucratic evil but can be a key instrument for scalable business models.<br />\nBut to do so we need to get rid of our old ways of thinking. Need an example? The whole <a href=\"http://camundabpm.blogspot.de/2013/04/the-camunda-hypothesis.html\">Zero Code BPM – Illusion</a>, is one of many errors that have dominated process management in the past.<br />\n<br />\nOn 18th March we released our BPM platform under an open source license as Business Process Management is impossible without IT (not everyone likes this, but it’s just the way it is). But of course BPM requires a lot more than purely a technical platform. That’s why we are also, bit by bit, providing our knowledge that we have acquired over the years. You can find both software and knowledge on <a href=\"http://www.camunda.org/\">www.camunda.org</a>.<br />\n<h3>\nBut that’s not enough.</h3>\nWe know first-hand that BPM works and what is important. We helped more than 500 companies and public organisations to apply BPM selectively or openly. A lot of it worked well, but some didn’t. We need to bring these people together so as to not reinvent the wheel and to realise in time which paradigms do not work (Need an example? The “refinement” of modeled processes via partial- or subprocesses, from the process landscape to the executable technical workflow, is rubbish. It doesn’t work that way but unfortunately it’s being tried again and again).<br />\n<br />\nTherefore, we call the camunda BPM community to life. We will start with evening workshops, preferably hosted by specific BPM-users. The first dates are planned and are taking place at the dwpBank in Frankfurt (Germany), LVM insurance in Münster (Germany) and plexiti in Vienna (Austria). If you want to register for one of these events or stay informed about future events please register here:<br />\n<br />\n<a href=\"http://network.camunda.org/meetings\">hhttp://network.camunda.org/meetings</a><br />\n<br />\nThe first meeting’s subject will be the introduction of our new open source platform, but further subjects will follow. If you have specific subjects you want to be discussed please contact Nastasja Johnston who will be managing the community via <a href=\"mailto:community@camunda.org\">community@camunda.org</a>.<br />\n<br />\nThe same applies to BPM-users who are hosting events. If you have specific ideas how the community can support and join fellow BPM enthusiasts feel free to let us know!<br />\n<br />\nAre we doing this without self-interest? Not quite. camunda will profit as this community grows and prospers. But we are also talking about a win-win situation for all involved!<br />\n<br />\nTherefore: let’s do it :-)<br />\n<br />",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/634756565123110541/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "2819603031154774870",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-07T17:19:00+02:00",
   "updated": "2013-06-20T09:44:16+02:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzcxNzE0MjU2NjE3Cm9mZnNldDogNzIwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/the-camunda-hypothesis.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2819603031154774870",
   "title": "The camunda Hypothesis",
   "content": "<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-qzrKz0WRZZA/UWEXB2b7qFI/AAAAAAAAACs/rcuLsuVenrE/s1600/deceptive.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"472\" src=\"http://2.bp.blogspot.com/-qzrKz0WRZZA/UWEXB2b7qFI/AAAAAAAAACs/rcuLsuVenrE/s640/deceptive.png\" width=\"640\" /></a></div>\n<br />\nScott Francis has written <a href=\"http://www.bp-3.com/blogs/2013/04/the-zero-code-hypothesis/\">an excellent post</a> about the core message of our presentation at <a href=\"http://www.bpmnext.com/\">bpmNEXT</a>. He called it the \"Zero Code Hypothesis\".&nbsp;Though Scott's summary is completely right in its essentials, I would like to put some details straight:<br />\n<br />\n<ul>\n<li>We don't think that \"Zero Code BPM\" does not work at all - Zero Coding and our approach are both reasonable, depending on what you have and what you need. The real problem is that most of the zero coding BPM vendors claim that you should use their solution for situations where you actually shouldn't.</li>\n<li>We do not condemn the ideas and ambitions often associated with the term \"ACM\". Quite the contrary, we even believe that our approach is very well suited to create the according process applications (basically because <a href=\"http://www.bpm-guide.de/2012/11/02/bpmn-unstructured-processes-and-acm-example-patent-application/?lang_pref=en\">we already did it</a>).</li>\n<li>I would not consider our standpoint a&nbsp;counter-point to the movement to make BPM \"more accessible\" to the business. We just don't belive that zero coding is the right approach to realize that enhanced accessibility. There are other instruments (most of them based on BPMN), that we already successfully validated and incorporated in our approach. But still, just like ACM, this is a field of research. I don't think that anyone could seriously claim to have found the \"silver bullet\" yet.</li>\n</ul>\n<br />\nBut even given these&nbsp;relativizations, we are pretty much off the BPM mainstream with our \"camunda Hypothesis\":<br />\n<blockquote class=\"tr_bq\">\n<span style=\"font-size: large;\"><i>While there are reasonable use cases for zero code BPM Suites, they are not the right approach for automating business processes that execute an IT based business model.</i></span>&nbsp;</blockquote>\n<br />\nA business model is \"IT based\", if IT is the core infrastructure to create and/or deliver the customer value. Financial Service providers, insurance companies etc. execute IT based business models, while most manufacturing companies, but also doctors etc. don't (though the relevance of IT for business models in any industry is rapidly growing).<br />\n<br />\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://1.bp.blogspot.com/-vuRZ8XEIrZk/UWA_GbUuADI/AAAAAAAAACU/4659XVrpADs/s1600/businessmodel.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"254\" src=\"http://1.bp.blogspot.com/-vuRZ8XEIrZk/UWA_GbUuADI/AAAAAAAAACU/4659XVrpADs/s640/businessmodel.png\" width=\"640\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">business processes execute your business model &nbsp;(image: <a href=\"http://www.businessmodelgeneration.com/\">www.businessmodelgeneration.com</a>)</td></tr>\n</tbody></table>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\nOne critical success factor of a business model is its uniqueness, which leads to the differentiation from competition and therefore to the leadership in the respective market (segment). The obvious conclusion is, that an IT based business model requires a very high degree of flexibility in the underlying IT infrastructure. Otherwise, the unique idea behind the model could not be implemented, or, if there would be a (customizable) \"off-the-shelf\" IT solution for it, it could very easily be adopted by competition - and actually could not have been really unique in the first place. The second dealbreaker criterion is, that the company must be able to create, adjust and maintain that executing infrastructure independently from external parties: A company with an IT based business model must recognize IT as their core competence (which, by the way, also means that outsourcing IT resources would be a pretty bad idea).<br />\n<br />\nZero-Coding BPM suites (including most of the BPM suites currently available) cannot meet those criteria, but an open BPM platform like <a href=\"http://www.camunda.org/\">camunda BPM</a> does, for the following reasons:<br />\n<h3>\nAccurately fitting solutions</h3>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<blockquote class=\"tr_bq\">\n<i>\"The open architecture of camunda BPM allows us to implement our very individual requirements in a way that a traditional BPM suite just cannot provide.\"&nbsp;</i>(<a href=\"http://www.zalando.com/\">Zalando</a>, fashion e-commerce)</blockquote>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://1.bp.blogspot.com/-vgFSxJDzDUc/UWGDYJB7l-I/AAAAAAAAADE/IijbZ9LqFDY/s1600/iStock_000014266950XSmall.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"278\" src=\"http://1.bp.blogspot.com/-vgFSxJDzDUc/UWGDYJB7l-I/AAAAAAAAADE/IijbZ9LqFDY/s320/iStock_000014266950XSmall.jpg\" width=\"320\" /></a></div>\n<br />\n<br />\nIn Zero Coding BPM, you would implement your process application using certain forms, wizards etc. The inavoidable consequence is, that you can implement anything... that the BPM vendor has imagined beforehand. But as soon as you have a requirement, that does not map to a checkbox, dropdown or what ever in the Zero Coding Wizard, you're lost. This would not necessarily be an issue - as I said, there are reasonable use cases for this approach. <b>But implementing an unique IT based business model is certainly not amongst them.</b><br />\n<br />\nSince camunda BPM is a (Java-based) open source framework rather than a black box product, you have the exact same freedom during implementation you always have when developing in Java. You can implement everything in the exact way it is needed for executing your business model.<br />\n<blockquote class=\"tr_bq\">\n<i>\"camunda BPM allows a seamless integration of process automation with non-procedural Use Cases for the case management, so that we are able to interlock optimally structural and non-structural processes.\"&nbsp;</i>(<a href=\"http://www.flightright.de/en\">flightright</a>, debt collector)</blockquote>\nThe ability to seamlessly combine structured and semi- or unstructured processes is another advantage of this approach, and a critical foundation for any process application that should be considered \"ACM-like\". <br />\n<h3>\nNo vendor specific learning curve</h3>\n<blockquote class=\"tr_bq\">\n<i>\"Additionally we can use our existing Java know-how combined with camunda BPM to build quickly and easily lightweight process solutions.\"</i> (<a href=\"http://www.freenet.de/\">Freenet</a>, Telco Provider)</blockquote>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-jD3WLZ1MLLc/UWGCLCPS5vI/AAAAAAAAAC8/YIyzwJRRJEg/s1600/Learning-Curve-1024x709.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"275\" src=\"http://3.bp.blogspot.com/-jD3WLZ1MLLc/UWGCLCPS5vI/AAAAAAAAAC8/YIyzwJRRJEg/s400/Learning-Curve-1024x709.png\" width=\"400\" /></a></div>\n<br />\n<br />\nThere are ~10 mio. Java developers worldwide. Think of any available BPM suite and tell me, how many according developers you would find on the market.<br />\n<br />\nBesides the restrictiveness described above, this is the biggest issue with traditional BPM suites: Your IT staff has to learn how do develop your process applications in a <b>vendor specific way</b>. This takes time, and most certainly your staff will never really master the vendor stack, because they cannot completely focus on it while also working on other projects with other technology stacks. In other words: It will be a huge effort to learn that vendor specific way, and if they don't continuously work with it, they will soon forget what they have learned.<br />\n<br />\nAs a consequence, you will always depend on the know how resources (consultants etc.) the specific vendor or their partners provide. Not the smartest way to execute your business model, is it?<br />\n<br />\nWith camunda BPM, there is no vendor specific way. You know Java? You know camunda.<br />\n<br />\nZero Coding BPM vendors like to claim that you don't need your IT staff any more, because it's so easy to implement the process applications that the business users can do that on their own. I can just repeat myself: The more individual your requirements are, the more flexibility your BPM solution must provide. The more flexibility your BPM solution provides, the more complex is it to implement your process application. You won't gain anything with a form wizard instead of programming code, if that wizard consists of 25 elements your business user is expected to understand.<br />\n<h3>\nThe force is with you</h3>\n<blockquote class=\"tr_bq\">\n<i>\"camunda rocks.\"</i> (<a href=\"http://www.plexiti.com/\">Plexiti</a>, IT solution provider)</blockquote>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-j4rQJ5OdmrE/UWGMAZOM3XI/AAAAAAAAADk/ur7JIrjXRQk/s1600/iStock_000012998399Small.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"265\" src=\"http://3.bp.blogspot.com/-j4rQJ5OdmrE/UWGMAZOM3XI/AAAAAAAAADk/ur7JIrjXRQk/s400/iStock_000012998399Small.jpg\" width=\"400\" /></a></div>\n<br />\n<br />\nOK, I am getting carried away. What I really mean is this: If your business model is IT based, your software developers are probably your most valuable assets. And actually they are not just \"assets\" or \"resources\", but human beings. They can be incredibly creative and productive, but only if they have the opportunity to flower. Have a look around, at <a href=\"https://github.com/\">GitHub</a>, at <a href=\"http://www.devoxx.com/\">Devoxx</a> etc. There is a whole global movement of extremely talented, enthusiastic software developers who just love to create great value.<br />\n<br />\nYou can benefit from that enormous force, if you let them create your process applications in an open, lightweight, developer-friendly environment, that can be enriched with any emerging technology or method (HTML 5 or what ever), and actually <b>makes fun to work with</b>.<br />\n<br />\n<blockquote class=\"tr_bq\">\n<i>\"It took only a few days to highly inspire the whole project team (consisting of people from both IT and business departments) for process mapping with BPMN 2.0\" (<a href=\"http://www.lvm.de/\">LVM Versicherungen</a>, insurance company)</i></blockquote>\nAs I said at bpmNEXT, Business-IT-Alignment is not about getting rid of IT, but a successful collaboration between partners. We know that BPMN assumes a key role here. I would never consider camunda BPM a pure \"framework for techies\". We strive to inspire both Business <b>and</b> IT, to bring them together and enable them to collaboratively create the process applications they need to execute their IT based business models.<br />\n<h3>\nThe \"camunda Hypothesis\" is already proven</h3>\n<blockquote class=\"tr_bq\">\n<i>\"camunda showed true roundtripping between third-party business-oriented modeling tools and a BPMS, the first I’ve seen to do that well.\" (<a href=\"http://brsilver.com/\">Bruce Silver</a>, BPMN Super Hero)</i></blockquote>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-KHSla9RDwBY/UWGOQmOGJII/AAAAAAAAADs/mFZ2QSb7buU/s1600/approach.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"473\" src=\"http://2.bp.blogspot.com/-KHSla9RDwBY/UWGOQmOGJII/AAAAAAAAADs/mFZ2QSb7buU/s640/approach.png\" width=\"640\" /></a></div>\n<br />\n<br />\nA this point, I should probably make clear that our \"hypothesis\" has already been validated. As a consulting agency, we are in the BPM field for 5 years now (the two founders Bernd Rücker and me even for 10 years). Personally, I used to work for a well-known BPM Suite vendor before I joint forces with Bernd, and working for them as a PreSales Consultant I experienced exactly the problems I have described above.<br />\n<br />\nWhen we (camunda) finally entered the BPM software market in 2012, we quickly won way more clients than we had expected ourselves. Since March 18th, <a href=\"http://www.camunda.org/\">this product is open source</a>, and there are several clients that agreed to be quoted what they like about it (you have found some extracts in this blog post, but <a href=\"http://www.camunda.org/community/users.html\">there's more</a>).<br />\n<br />\nWe hope that by open sourcing not only our technology stack, but also our know how (we started by publishing <a href=\"http://www.camunda.org/design/reference.html#!/reference\">half of our best-selling BPMN book</a>, but there is way more to come), we can help others to recognize what actually has gone wrong in the last years of BPM, and how we could bring BPM to the next level of success (or even \"crossing the chasm\" <a href=\"http://www.column2.com/2013/03/bpmnext-opens-with-paul-harmon-keynote/\">Paul Harmon has mentioned</a> at bpmNEXT).<br />\n<br />\nI suppose this is some hard piece of work, but I know it's worth it.<br />\n<br />\n<br />\n<br />\n<br />",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/2819603031154774870/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "817369997623197999",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-04-05T12:14:00+02:00",
   "updated": "2014-11-25T15:38:37+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI2MzE3NjY1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/04/camunda-modeler-2012-released.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/817369997623197999",
   "title": "camunda modeler 2.0.12 released",
   "content": "<div>\nYesterday we released version 2.0.12 of our modeler with a number of bug fixes as well as layout and usability improvements. One highlight is splitting layouted sequence flows to insert new flow elements between two connected nodes.\n<br />\n<br /></div>\n<div>\n<embed align=\"middle\" allowscriptaccess=\"always\" height=\"501\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" quality=\"high\" src=\"http://camunda.github.com/camunda-modeler/assets/video/drop-on-flow.swf\" type=\"application/x-shockwave-flash\" width=\"591\"></embed>\n</div>\n<div>\n<br />\nOther things worth noting include<br />\n<ul>\n<li>Improved integration of the model wizard</li>\n<li>Proper support for event subprocess / non-interrupting start event</li>\n<li>Diagram image generation handles spaces in diagram file names correctly</li>\n</ul>\n<div>\n<br /></div>\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://camunda.github.com/camunda-modeler/assets/image/event-subprocess.png\" imageanchor=\"1\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img alt=\"Event subprocess and non-interrupting start event\" border=\"0\" height=\"156\" src=\"http://camunda.github.com/camunda-modeler/assets/image/event-subprocess.png\" title=\"Event Subprocess\" width=\"200\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Event Subprocess</td></tr>\n</tbody></table>\n<table cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"float: left; margin-right: 1em; text-align: left;\"><tbody>\n<tr><td style=\"text-align: center;\"><a href=\"http://camunda.github.com/camunda-modeler/assets/image/wizard-integration.png\" imageanchor=\"1\" style=\"clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;\"><img border=\"0\" height=\"127\" src=\"http://camunda.github.com/camunda-modeler/assets/image/wizard-integration.png\" width=\"200\" /></a></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\">Wizard integration</td></tr>\n</tbody></table>\n</div>\n<div style=\"clear: both;\">\n<br />\nWe also fixed some crucial bugs, reworked the layouting of participants and the resize behavior of pools, lanes and subprocesses.<br />\n<br />\nFor details refer to the <a href=\"https://app.camunda.com/jira/secure/IssueNavigator!executeAdvanced.jspa?jqlQuery=fixVersion+%3D+%22modeler+2.0.12%22&amp;runQuery=true&amp;clear=true\" target=\"_blank\">issues closed in this release</a>&nbsp;or check our&nbsp;<a href=\"https://github.com/camunda/camunda-modeler/blob/kepler/CHANGELOG.md\" target=\"_blank\">detailed technical changelog</a>.<br />\n<br />\nAs always, <a href=\"http://camunda.org/download/modeler/\" target=\"_blank\">upgrade your modeler</a> installation and tell us what you think!<br />\n<br /></div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/817369997623197999/comments"
   },
   "labels": [
    "camunda-modeler",
    "release notes"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "7028092513530515605",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-03-23T03:23:00+01:00",
   "updated": "2014-11-25T15:11:04+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI0NjY0NzQwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/03/camunda-bpmnext-2013.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7028092513530515605",
   "title": "camunda @bpmNEXT 2013",
   "content": "bpmNEXT has definetely been a Home Run, as <a href=\"http://brsilver.com/bpmnext-2013-a-home-run/\">Bruce Silver puts it</a>. Bruce has impressively succeeded in creating a real think tank event for BPM thought leaders sharing their ideas, visions and quite a lot of crazy new stuff around BPM. For those of you who do not know him: Bruce Silver is <b>the</b> BPMN Guru in the US, and I really admire him for both his competence and all that he has done for the standard. Rest assured that a good deal of BPMN's amazing success is due to him.<br />\n<br />\nThat said, it should not be surprising how excited I was when discovering in his <a href=\"http://brsilver.com/bpmnext-review/\">Review Post</a> a comment about my presentation of <a href=\"http://www.camunda.org/design/cycle-tutorial.html\">camunda Cycle</a>, one of the numerous components that we have open sourced when launching camunda BPM on Monday. Actually I cannot help but spending that quote the visual apperance it deserves:<br />\n<br />\n<blockquote class=\"tr_bq\">\n<span style=\"font-size: x-large;\">\"<i>camunda showed <b>true</b> roundtripping between third-party business-oriented modeling tools and a BPMS, the first I’ve seen to do that well.</i>\"</span></blockquote>\nMaybe that quote is not a big deal for most of you, but for me it is. As someone who is quite passionate about \"that whole Business IT Alignment - thing\", I have a rather emotional connection with that part of our project. And to be honest: Since there has never been any tool like that before, it has been a long struggle to figure out how it should actually work, how it should look like and so on. If you look at it now, it's actually no rocket science at all, and I won't claim that it is a ground-breaking piece of code. But it's strapped to its absolute core use case, and that use case has been implemented very thoughtfully in terms of both usability and software quality. For me it's a great example of good software craftsmanship.<br />\n<br />\nSo is Cycle \"feature complete\"? Not at all! It's just a first step in a long journey towards a better Business-IT-Alignment, but it is a very good first step indeed, and it's already creating value. We have loads of ideas what features should come next, but it also depends on you which of these would actually be implemented, and how soon that would be. You can both <a href=\"http://www.camunda.org/community/forum.html\">just tell us</a> what you're missing, or <a href=\"https://github.com/camunda/camunda-bpm-platform\">have look at the code</a> and make your own contributions (e.g. if you are a BPMN tool vendor wanting to improve how Cycle interacts with your product).<br />\n<br />\nBut why should I need Cycle anyway? There is a nice BPMN modeler included with camunda BPM already, so why having a roundtrip with yet another BPMN tool? If you are really wondering about that, you have probably not yet made a lot of experience with BPM projects that actually deserve the \"B\" in the \"BPM\" acronym. I will try to answer your question as soon as possible, which means basically as soon as I have time for an other blog post.<br />\n<br />\nBut right now I am finally enjoying myself in San Francisco, after I got some very interesting insights in the startup scene of Silicon Valley. Have you ever realized that BPM is the perfect tool for IT-based startups that want to scale up their business model? Oh my, I am already having visions again...<br />\n<br />",
   "author": {
    "id": "g101486391884810443451",
    "displayName": "Jakob Freund",
    "url": "https://www.blogger.com/profile/08004991504574493496",
    "image": {
     "url": "//lh4.googleusercontent.com/-DZBbhdGi8zA/AAAAAAAAAAI/AAAAAAAAABg/395xxPgOOmo/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7028092513530515605/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "5825127592550756456",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-03-22T12:28:00+01:00",
   "updated": "2014-11-25T15:37:26+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTI2MjQ2Njk0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/03/a-closer-look-at-camunda-modeler.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5825127592550756456",
   "title": "A closer look at the camunda modeler",
   "content": "Along with the <a href=\"http://camundabpm.blogspot.de/2013/03/camunda-forks-activiti-and-launches.html\">launch</a> of our <a href=\"http://camunda.org/\">open-source BPM platform</a> we made the camunda modeler available to the public, both as <a href=\"http://camunda.org/download/modeler/\">a&nbsp;software</a> and as&nbsp;<a href=\"https://github.com/camunda/camunda-modeler\" target=\"_blank\">source code</a>.<br />\n<br />\nWith the camunda modeler, you get at free modeling tool that integrates in your Eclipse IDE and <span style=\"font-family: inherit;\"><span style=\"background-color: white; line-height: 24.44444465637207px;\">focuses on seamless modeling of process and collaboration</span><span style=\"background-color: white; line-height: 24.44444465637207px;\">&nbsp;diagrams.&nbsp;</span></span>But see yourself:<br />\n<div style=\"font-size: medium; font-weight: normal;\">\n<br /></div>\n<div style=\"font-size: medium; font-weight: normal;\">\n<embed align=\"middle\" allowscriptaccess=\"always\" height=\"501\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" quality=\"high\" src=\"http://camunda.github.com/camunda-modeler/assets/video/intro.swf\" type=\"application/x-shockwave-flash\" width=\"591\"></embed></div>\n<div style=\"font-size: medium; font-weight: normal;\">\n<br /></div>\n<div style=\"font-size: medium; font-weight: normal;\">\nWe invite you to&nbsp;<a href=\"http://camunda.org/download/modeler/\">try out the modeler</a>,&nbsp;<a href=\"https://groups.google.com/forum/#!forum/camunda-bpm-users\">give us feedback</a>&nbsp;and&nbsp;<a href=\"https://github.com/camunda/camunda-modeler/blob/kepler/CONTRIBUTING.md\">contribute to it</a>.<br />\n<h2>\nPresent, past and Future</h2>\nThe camunda modeler is based on the <a href=\"http://eclipse.org/bpmn2-modeler/\">Eclipse BPMN 2.0 Modeler</a>&nbsp;that integrates into the Eclipse IDE. Its aim was to allow users with technical focus to create BPMN 2.0 diagrams and maintain BPMN and&nbsp;<a href=\"http://camunda.org/\">camunda BPM</a>&nbsp;/&nbsp;<a href=\"http://activiti.org/\">Activiti</a>&nbsp;specific attributes in those diagrams.<br />\n<br />\nBeginning October 2012, we decided to dedicate bigger long term efforts to make the modeler a general purpose tool to create and refactor BPMN 2.0 diagrams. As a result the focus of the tool shifted towards user&nbsp;friendliness, quality (in terms of bugs) and an easier maintainable code base.<br />\n<br />\nSince then, we have taken huge steps forward:<br />\n<ul>\n<li>We simplified the modeler architecture.</li>\n<li>We established a test infrastructure which comprises both unit tests for modeler features as well as blackbox user interface tests (400 Unit tests and 45 Minutes of blackbox Jubula tests).</li>\n<li>We rewrote many, if not most of the modeler features to increase testability and maintainability of the code base.</li>\n<li>We wrote a new model import to allow it to work with (most) diagrams, including BPMN 2.0 exports from other tool vendors.</li>\n<li>We reworked the property panels and added help texts and input validation&nbsp;to aid the user.</li>\n<li>We added advanced layouting features for flows to make it easier to work with complex models.</li>\n</ul>\n<div>\nAs of now there are still numerous areas to improve and work is long from finished. Many things such as layouting of message flows, better handling of pools and refactoring of the symbol palette are on our <a href=\"http://camunda.org/roadmap/\">roadmap</a>. Further, we would like to publish the modeler as a ready-to-use standalone tool for non-Eclipse users. Progress on all these issues is documented in both our&nbsp;<a href=\"https://github.com/camunda/camunda-modeler/blob/kepler/CHANGELOG.md\">technical changelog</a>&nbsp;as well as in our&nbsp;<a href=\"http://camunda.org/components/modeler/release-notes/\">release notes</a>.&nbsp;</div>\n<h2>\nThe modeler for contributors</h2>\n<div>\nWe highly encourage you to contribute to the modeler if you share our vision of a user&nbsp;friendly, high quality BPMN 2.0 modeling tool. Check out our <a href=\"https://github.com/camunda/camunda-modeler/blob/kepler/CONTRIBUTING.md\">contribution guidelines</a>&nbsp;to get started. Tell us what you think and share your ideas on the tool in our&nbsp;<a href=\"https://groups.google.com/forum/#!forum/camunda-bpm-dev\">development forum</a>.</div>\n<div>\n<br /></div>\n<div>\nStay tuned for frequent camunda modeler releases and upcomming blog posts.</div>\n<div>\nIn the mean time, we will continue to code with quality in mind.</div>\n</div>",
   "author": {
    "id": "g104234878487547038923",
    "displayName": "Nico Rehwaldt",
    "url": "https://www.blogger.com/profile/13161892308456850469",
    "image": {
     "url": "//lh5.googleusercontent.com/-isFDcUZbNj4/AAAAAAAAAAI/AAAAAAAAAFo/TeLuqv6vPVA/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "1",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/5825127592550756456/comments"
   },
   "labels": [
    "camunda-modeler"
   ]
  },
  {


   "kind": "blogger#post",
   "id": "888481024065508562",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-03-20T18:18:00+01:00",
   "updated": "2014-11-25T14:46:03+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTIzMTYzNTA1Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/03/the-html5-parts-in-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/888481024065508562",
   "title": "The HTML5 parts in camunda BPM",
   "content": "<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\">\nThe camunda bpm stacks currently includes three web apps: cycle, cockpit, tasklist. All of them are rewrites from a JSF 2.0 ancestor version and with this post I want to explain the decision to built them on a HTML5 plus REST architecture and not with <span style=\"font-family: Courier New, Courier, monospace;\">&lt;insert java web framework here&gt;</span>.<br />\n<br />\nIts clear that the web itself is based on the client-server principle. Many Web frameworks like JSF, Vaadin etc. implement it like this:<br />\n<ol style=\"text-align: left;\">\n<li>Provide a abstraction layer to define the HTML&nbsp;+ JS + CSS&nbsp;Code to generate (Java Code, Facelets etc.) which in the end is your application</li>\n<li>On request, generate the code sent to the browser, initially create a session model for data binding etc.</li>\n<li>Keep the generated browser client in sync with the backend session</li>\n</ol>\n<div>\nThe main purposes of this approach: reduce the need to touch JavaScript and make it possible to abstract even more to build reusable components. One&nbsp;consequence&nbsp;is a hard wiring of the client and the server session and you will need to have a integration layer between your application code and the framework, which is unlikely to be reused in case of a framework switch.</div>\n<div>\n<br /></div>\n<div>\nIn the end all that matters is: give the browser the HTML&nbsp;+ JS &nbsp;+ CSS it needs to show the application. So why not write just this code without a server side abstraction or knowledge about the server side implementation?&nbsp;</div>\n<div>\n<br /></div>\n<div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\nThats the idea behind the HTML5 buzz. We are now living in the age of web APIs (see&nbsp;<a href=\"http://www.apihub.com/\">http://www.apihub.com/</a>) and this concept can be applied to web app development very easily.&nbsp;</div>\n<div>\n<br /></div>\n<div>\nSo you provide a server side stateless implementation of you business logic or data and <a href=\"http://docs.camunda.org/latest/api-references/rest/\" target=\"_blank\">define the interface for your clients</a> (typically url paths and the json structure) to have a reusable API for you applications.</div>\n<div>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-G3HHc2cy5YM/UUntbZsb2UI/AAAAAAAAAFs/xzjeFX_36pM/s1600/webapps.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"462\" src=\"http://3.bp.blogspot.com/-G3HHc2cy5YM/UUntbZsb2UI/AAAAAAAAAFs/xzjeFX_36pM/s640/webapps.png\" width=\"640\" /></a></div>\n<br /></div>\n<div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n</div>\n<br /></div>\n<div>\n<br /></div>\n<div>\nWhat are the benefits:&nbsp;</div>\n<div>\n<ul style=\"text-align: left;\">\n<li>You can build new apps around existing apis very fast, the tasklist and cockpit are using the same server side implementation</li>\n<li>You are free in your choice on how to implement the client. There are many MVC JavaScript frameworks to help you&nbsp;kick-start&nbsp;the client side. Its possible to complement that with the whole universe of <a href=\"http://microjs.com/\">JavaScript libs</a>&nbsp;and CSS Frameworks. We are using <a href=\"http://angularjs.org/\" target=\"_blank\">AngularJS</a>, <a href=\"http://jquery.com/\" target=\"_blank\">jQuery</a>, <a href=\"http://dojotoolkit.org/\" target=\"_blank\">dojo</a> and <a href=\"http://twitter.github.com/bootstrap/\" target=\"_blank\">Bootstrap</a> for our apps.</li>\n<li>You can easily write <a href=\"https://github.com/camunda/camunda-bpmn.js/blob/master/test/bpmn/usertask.js\" target=\"_blank\">unit tests</a> for the code running in the browser</li>\n<li>Full control over the requests made and the browser compatibility layer&nbsp;</li>\n<li>You make your application scale better because of the stateless backend</li>\n<li>You can develop client and server in parallel and create mockups / prototypes very fast, e.g. to talk about different UI designs</li>\n</ul>\n</div>\n<div>\n<i>\"With great power comes great responsibility\"</i> so you will now need to take care of some aspects yourself:</div>\n<div>\n<ul style=\"text-align: left;\">\n<li>How to structure you client side code (javascript + css) for reuse (we are using <a href=\"http://requirejs.org/\" target=\"_blank\">requirejs</a>)</li>\n<li>Browser Compatibility (luckily most frameworks we are using take care themselves)</li>\n<li>All JavaScript related stuff like minifiing, concatenation etc. (there are lots of tools out there)</li>\n</ul>\n<div>\nBut in the end these points are part of the flexibility as well.</div>\n<div>\n<br /></div>\n<div>\nWe are really happy with the results and this setup is a future proof foundation for our <a href=\"http://www.camunda.org/\" target=\"_blank\">upcoming features</a>.</div>\n</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n</div>",
   "author": {
    "id": "g114419603499412171858",
    "displayName": "Andreas Drobisch",
    "url": "https://www.blogger.com/profile/11136730361695727093",
    "image": {
     "url": "//lh4.googleusercontent.com/-C7Z-fQc31EM/AAAAAAAAAAI/AAAAAAAAAFI/oAgLmMDso7M/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/888481024065508562/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "1402394314498396595",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-03-19T17:52:00+01:00",
   "updated": "2014-11-25T14:41:01+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTIyODYxNzUwCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/03/a-look-at-fresh-rest-api.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1402394314498396595",
   "title": "A look at the fresh REST API",
   "content": "camunda BPM comes with a fresh REST API based on JAX-RS. Its goal is to expose the process engine services as broadly as possible. That means we aim to enable you to interact with process engine services via REST with similar expressiveness as in plain Java. With 7.0.0-alpha1, we provide methods such as <a href=\"http://docs.camunda.org/latest/api-references/rest/#task\">task querying</a> that already realize our desired degree of detail (similar for process definitions and instances). For future releases, we plan to broaden the scope to reach the afore-mentioned goal.<br />\n<h3>\nUse it with a prebuilt distro </h3>\nIn 7.0.0-alpha1 the API covers interactions with process definitions, process instances and tasks as documented on <a href=\"http://docs.camunda.org/latest/api-references/rest/\">camunda.org</a>. Enough to build your first process applications as demonstrated in camunda's <a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\">tasklist</a>. In our prebuilt distros, the REST API is enabled by default and is ready to go.<br />\n<br />\nCool feature: camunda's <a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\">cockpit</a> prototype uses the new methods for aggregated runtime statistics. These give you the number of running instances of BPMN concepts such as <a href=\"http://docs.camunda.org/latest/api-references/rest/#process-definition\">processes</a> and <a href=\"http://docs.camunda.org/latest/api-references/rest/#process-definition-get-activity-instance-statistics\">activities</a> grouped by process definition and activity respectively. Optionally you can also get the number of failed jobs.<br />\n<br />\nYou may also address the several process engines you are running on the platform by prepending <code>/engine/{engine-name}</code> to any of the method's urls. If you omit this, the default engine is used. <br />\n<h3>\nEmbed it in your own JAX-RS application</h3>\nGot your embedded engine and want to quickly add REST capabilities to it? You may embed the RESTful resources in your own JAX-RS application with little&nbsp;configuration if you run on Resteasy and have jackson-jaxrs on your classpath. Pick up the REST resources by adding the following Maven dependency:<br />\n<pre>&lt;dependency&gt;\n&lt;groupid&gt;org.camunda.bpm&lt;/groupid&gt;\n&lt;artifactid&gt;camunda-engine-rest&lt;/artifactid&gt;\n&lt;classifier&gt;classes&lt;/classifier&gt;\n&lt;version&gt;7.0.0-alpha1&lt;/version&gt;\n&lt;/dependency&gt;\n</pre>\n<br />\nThen you can choose which of the resources you want to include. Have a look <a href=\"http://docs.camunda.org/latest/api-references/rest/#overview-embedding-the-api\">here</a> to see how this can be done. (The alternative is to use a JAX-RS implementation provided by your application server.)<br />\n<br />\nBeing an alpha release, we are aware that essential features such as authentication are still missing. However, this is on our roadmap to 7.0.0 final, so stay tuned and explore the <a href=\"http://docs.camunda.org/latest/\">docs</a> meanwhile!",
   "author": {
    "id": "04505047895176043464",
    "displayName": "Thorben Lindhauer",
    "url": "https://www.blogger.com/profile/04505047895176043464",
    "image": {
     "url": "https://img2.blogblog.com/img/b16-rounded.gif"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/1402394314498396595/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "7456788227372944046",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-03-19T14:11:00+01:00",
   "updated": "2013-03-19T14:11:07+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxMzYzNjk4NjY3MjExCm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/03/sandy-kemsley-writes-about-camunda-bpm.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7456788227372944046",
   "title": "Sandy Kemsley writes about camunda BPM",
   "content": "<br />\n<div class=\"MsoNormal\">\nIndependent BPM Analyst Sandy Kemsley writes about the camunda BPM launch on <a href=\"http://www.column2.com/2013/03/stick-a-open-source-fork-in-it-camunda-bpm-splits-from-activiti/\">column2</a>:</div>\n<div class=\"MsoNormal\">\n<br /></div>\n<div class=\"MsoNormal\">\n<a href=\"http://www.column2.com/2013/03/stick-a-open-source-fork-in-it-camunda-bpm-splits-from-activiti/\">http://www.column2.com/2013/03/stick-a-open-source-fork-in-it-camunda-bpm-splits-from-activiti/</a></div>\n",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/7456788227372944046/comments"
   }
  },
  {


   "kind": "blogger#post",
   "id": "4396959316147344119",
   "blog": {
    "id": "2414043640680427770"
   },
   "published": "2013-03-18T09:00:00+01:00",
   "updated": "2014-11-25T14:23:27+01:00",
   "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/dGltZXN0YW1wOiAxNDE2OTIxODA3MzM0Cm9mZnNldDogMzYwMDAwMAo\"",
   "url": "http://blog.camunda.org/2013/03/camunda-forks-activiti-and-launches.html",
   "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4396959316147344119",
   "title": "camunda forks Activiti and launches camunda BPM",
   "content": "I am proud to announce that today&nbsp;<a href=\"http://www.camunda.com/\">camunda</a>&nbsp;launches a new open source BPM project:&nbsp;<a href=\"http://www.camunda.org/\">camunda BPM</a>. At this juncture we part ways with the <a href=\"http://www.activiti.org/\">Activiti project</a>&nbsp;which we have contributed to since the first days.<br />\n<br />\nLeaving Activiti is a sad but necessary step for us. Starting as a consulting company, we have built a customer base of 250+ in little over 4 years. Last year, we entered the BPM vendor business with the camunda fox BPM platform. Our success and the <a href=\"http://www.camunda.org/community/users.html\">positive feedback we got from customers</a> made us realize that we have to go all-in. Today, we drop the \"fox\"-brand and as camunda BPM, we&nbsp;embark on the journey of building the best BPM platform, under our own leadership &amp; vision.<br />\n<br />\nWe are grateful&nbsp;for Alfresco's contributions to the community and we part with the sad feeling of leaving a great project and a unique pack of people behind. Personally, I still regularly hang with Tom Baeyens (<a href=\"http://bpmn20inaction.blogspot.de/2012/11/activiti-thanks-tom-baeyens.html\">who left Activiti before</a>&nbsp;and <a href=\"http://www.infoq.com/news/2013/03/baeyens-activiti\">has moved on as well</a>) and I am certain to remain in touch with Joram, Tijs and Frederik. Guys, I respect you and I&nbsp;wish&nbsp;you the best of luck!<br />\n<br />\nBut most of all, I am very excited about what lies ahead for us. Our ambition is to kick off a&nbsp;vibrant <a href=\"http://www.camunda.org/community.html\">BPM&nbsp;community</a>&nbsp;and move the open source BPM space forward. We are very serious about our open source commitment. With this move we broaden the scope from open source embeddable BPM to open source BPM infrastructure, opening code and technology that we built as closed source before. Our software will be Apache License v2.0 (excluding the EPL licensed modeling plugin) and all core components will be developed as open source exclusively (no shadow-repositories). &nbsp;The commercial add-ons we plan on providing to&nbsp;paying&nbsp;customers are distributions for commercial application servers (e.g. IBM&nbsp;WebSphere Application Server) and plugins for mass data manipulation inside the operations tooling (camunda cockpit). Check out our <a href=\"http://camunda.org/community/roadmap.html\">Roadmap</a>.<br />\n<br />\nWe know that many people and companies have invested in activiti projects. We will work hard <a href=\"http://docs.camunda.org/latest/guides/migration-guide/#migrate-from-activiti\">keeping the migration path from Activiti to camunda open</a> for as long as we can and support teams that want to migrate their project from Activiti to camunda. <a href=\"http://www.camunda.org/community/forum.html\">Talk to us in the forums</a>&nbsp;(<a href=\"http://camunda.com/bpm/training/migrate/\">or request a Migration Evaluation Workshop</a>).<br />\n<h2>\n<span style=\"font-family: inherit;\">What is camunda BPM?</span></h2>\n<span style=\"font-family: inherit;\">camunda BPM provides <b>infrastructure,</b>&nbsp;<b>tools</b>&nbsp;and <b>knowledge</b> around the BPM lifecycle.&nbsp;</span><br />\n<span style=\"font-family: inherit;\"><br /></span>\n<span style=\"font-family: inherit;\"><b>Process Implementation and Execution</b></span><br />\n<ul style=\"border: 0px; margin: 15px 0px; padding: 0px 0px 0px 30px;\">\n<li style=\"border: 0px; margin: 0px; padding: 0px;\"><span style=\"color: #333333; font-family: inherit; line-height: 20px;\"><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine\">camunda engine</a> - Fork of the Activiti process engine with lots of additions. Responsible for executing BPMN 2.0 processes.&nbsp;</span><span lang=\"EN-US\"><span style=\"color: #333333;\"><span style=\"line-height: 115%;\">We provide infrastructure integration into Servlet Containers and Java\nEE 6 application servers allowing you to run the process engine both embedded or as\na container managed service. With this step we broaden the scope from open source embeddable BPM to open source BPM&nbsp;</span><span style=\"line-height: 18px;\">infrastructure</span><span style=\"line-height: 115%;\">.&nbsp;</span></span></span></li>\n<li style=\"border: 0px; color: #333333; line-height: 20px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://docs.camunda.org/latest/api-references/rest/\">REST API</a> - New embeddable REST API based on JAX-RS, providing remote access to running processes.</span></li>\n<li style=\"border: 0px; color: #333333; line-height: 20px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://docs.camunda.org/latest/guides/user-guide/#spring-framework-integration\">Spring &amp; CDI integration</a> - Programming model integration that allows developers to write Java Applications that interact with running processes in their familiar environment.</span></li>\n</ul>\n<h4 style=\"-webkit-font-smoothing: antialiased; border: 0px; color: #333333; cursor: text; margin: 20px 0px 10px; padding: 0px; position: relative;\">\n<a class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#process-design\" name=\"process-design\" style=\"border: 0px; bottom: 0px; color: #4183c4; cursor: pointer; display: block; left: 0px; margin: 0px 0px 0px -30px; padding: 0px 0px 0px 30px; position: absolute; text-decoration: none; top: 0px;\"></a><span style=\"font-family: inherit;\">Process Design</span></h4>\n<ul style=\"border: 0px; line-height: 20px; margin: 15px 0px; padding: 0px 0px 0px 30px;\">\n<li style=\"border: 0px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://camunda.org/bpmn/tool/\">camunda Modeler</a><span style=\"color: #333333;\"> - A great &nbsp;BP</span>MN 2.<span style=\"font-family: inherit;\">0&nbsp;modeling plugin for eclipse</span><span style=\"color: #333333;\">. Allows developers to design &amp; refactor processes inside their IDE.</span></span></li>\n<li style=\"border: 0px; color: #333333; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://docs.camunda.org/latest/guides/getting-started-guides/roundtrip-with-cycle/\">camunda Cycle</a> - Enables BPMN 2.0 based Roundtrip between Business and IT parties involved in a project. Allows to use any BPMN 2.0 compliant modeling tool with camunda BPM.</span></li>\n</ul>\n<h4 style=\"-webkit-font-smoothing: antialiased; border: 0px; color: #333333; cursor: text; margin: 20px 0px 10px; padding: 0px; position: relative;\">\n<a class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#process-operations\" name=\"process-operations\" style=\"border: 0px; bottom: 0px; color: #4183c4; cursor: pointer; display: block; left: 0px; margin: 0px 0px 0px -30px; padding: 0px 0px 0px 30px; position: absolute; text-decoration: none; top: 0px;\"></a><span style=\"font-family: inherit;\">Process Operations</span></h4>\n<ul style=\"border: 0px; color: #333333; line-height: 20px; margin: 15px 0px; padding: 0px 0px 0px 30px;\">\n<li style=\"border: 0px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://docs.camunda.org/latest/guides/user-guide/#process-engine\">camunda engine</a> - JMX and advanced Runtime Container Integration for process engine monitoring and operations.</span></li>\n<li style=\"border: 0px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://docs.camunda.org/latest/guides/user-guide/#cockpit\">camunda Cockpit</a> - Web application tool for process operations.</span></li>\n</ul>\n<h4 style=\"-webkit-font-smoothing: antialiased; border: 0px; color: #333333; cursor: text; margin: 20px 0px 10px; padding: 0px; position: relative;\">\n<a class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#human-task-management\" name=\"human-task-management\" style=\"border: 0px; bottom: 0px; color: #4183c4; cursor: pointer; display: block; left: 0px; margin: 0px 0px 0px -30px; padding: 0px 0px 0px 30px; position: absolute; text-decoration: none; top: 0px;\"></a><span style=\"font-family: inherit;\">Human Task Management</span></h4>\n<ul style=\"border: 0px; color: #333333; line-height: 20px; margin: 15px 0px; padding: 0px 0px 0px 30px;\">\n<li style=\"border: 0px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"http://docs.camunda.org/latest/guides/user-guide/#tasklist\">camunda Tasklist</a> - Simple web application demonstrating how the process engine task API can be used to build task management applications.</span></li>\n</ul>\n<h4 style=\"-webkit-font-smoothing: antialiased; border: 0px; color: #333333; cursor: text; margin: 20px 0px 10px; padding: 0px; position: relative;\">\n<a class=\"anchor\" href=\"https://github.com/camunda/camunda-bpm-platform#and-theres-more\" name=\"and-theres-more\" style=\"border: 0px; bottom: 0px; color: #4183c4; cursor: pointer; display: block; left: 0px; margin: 0px 0px 0px -30px; padding: 0px 0px 0px 30px; position: absolute; text-decoration: none; top: 0px;\"></a><span style=\"font-family: inherit;\">And there's more...</span></h4>\n<ul style=\"border: 0px; line-height: 20px; margin: 15px 0px; padding: 0px 0px 0px 30px;\">\n<li style=\"border: 0px; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><a href=\"https://github.com/camunda/camunda-bpmn.js\">ca-bpmn.js</a><span style=\"color: #333333;\">&nbsp;- </span>We started building a complete BPMN toolkit for Java Script (Parser, Process Engine, Renderer)</span></li>\n<li style=\"border: 0px; color: #333333; margin: 0px; padding: 0px;\"><span style=\"font-family: inherit;\"><span style=\"color: #4183c4;\"><a href=\"http://docs.camunda.org/latest/guides/user-guide/#introduction-community-extensions\">camunda BPM community extensions</a>&nbsp;</span>- This is where we, together with the community, try out new ideas.</span></li>\n</ul>\n<h2>\nWho are we? &nbsp;(A bunch of angry nerds.)</h2>\nWe have assembled a unique <a href=\"http://camunda.org/community/team.html\">team of hackers, nerds and BPM experts</a> who want to move BPM forward.<br />\nBPM is our passion, its in our blood (and it has been our bread and butter for the last years). And together, we share a common belief: BPM is powerful but BPM is often not delivering on it's full potential. Why?<br />\n<br />\nAs BPM&nbsp;practitioners, we have seen anything from large scale process automation projects to the kind of wasteful organizational documentation projects you read about in books. Last year we successfully introduced the camunda fox BPM platform to the market and it was a huge success. Our customers come from different industries and organizational cultures (some are explosive startups, others are rather traditional players in the insurance industry). What struck us was that from all these different customers, we got one common message of feedback: \"no other BPM solution can be integrated as seamlessly into our existing infrastructure. With camunda we can focus on our individual business requirements. We are not constrained to a predefined space of possibilities set by the BPM vendor.\" And that's the point: as soon as you start automating core business processes, you tap into your business model and that is something very personal and individual to your business. To do that, you don't need a predefined solution, you need a powerful, configurable framework.<br />\n<br />\nAnd you need nerds.<br />\n<br />\nSo we say: BPM has the potential to scale your business and to do this, you need an open, flexible platform that allows you to align Business and IT and together build dedicated, individual solutions that realize your individual business model.<br />\n<br />\nThis is what we believe in and this is what we build.<br />\n<br />\n<span style=\"color: #666666;\">----------------------</span><br />\n<span style=\"color: #666666; font-family: inherit; font-size: x-small;\">Activiti and Alfresco are registered trademarks of Alfresco Software,\nInc.</span><br />\n<span style=\"font-size: x-small;\"><span style=\"color: #666666; font-family: inherit;\">All other trademarks are the property of their respective owners</span></span>",
   "author": {
    "id": "g102974787484361410017",
    "displayName": "Daniel Meyer",
    "url": "https://www.blogger.com/profile/01002204464530648976",
    "image": {
     "url": "//lh3.googleusercontent.com/-Kcsri_f44_Y/AAAAAAAAAAI/AAAAAAAAAFk/RRKlEGB3HTY/s35-c/photo.jpg"
    }
   },
   "replies": {
    "totalItems": "0",
    "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2414043640680427770/posts/4396959316147344119/comments"
   },
   "labels": [
    "release notes"
   ]
  }
 ],
 "etag": "\"GtyIIQmNmmUjEA0nwhSqMElCJ1g/MjAxNS0xMC0wMVQxMToyODo0MC4xMzJa\""
}
